name: Build Validation

on:
  push:
    branches: [main, test_frontend, staging]
  pull_request:
    branches: [main]

jobs:
  build-check:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Copy package files to frontend
        run: |
          cp package.json frontend/
          cp package-lock.json frontend/
      
      - name: Build project for PR
        if: github.event_name == 'pull_request'
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          NEXT_PUBLIC_ENV: preview
      
      - name: Build project for staging
        if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/test_frontend'
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          NEXT_PUBLIC_ENV: staging
      
      - name: Build project for production
        if: github.ref == 'refs/heads/main'
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          NEXT_PUBLIC_ENV: production
      
      - name: Verify build output
        run: |
          if [ ! -d "frontend/.next" ]; then
            echo "‚ùå Build failed: frontend/.next directory not found"
            exit 1
          fi
          echo "‚úÖ Build successful"
          echo "Build size report:"
          du -sh frontend/.next
          du -sh frontend/.next/static
          du -sh frontend/.next/server
      
      - name: Check for build warnings
        run: |
          echo "Checking for common build issues..."
          # Check for large bundle sizes
          if [ -d "frontend/.next/static/chunks" ]; then
            large_files=$(find frontend/.next/static/chunks -type f -size +500k -exec ls -lh {} \; | wc -l)
            if [ "$large_files" -gt 0 ]; then
              echo "‚ö†Ô∏è Warning: Found $large_files chunk files larger than 500KB"
              find frontend/.next/static/chunks -type f -size +500k -exec ls -lh {} \;
            fi
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: github.event_name == 'pull_request'
        with:
          name: nextjs-build
          path: frontend/.next
          retention-days: 7

  deployment-ready-check:
    runs-on: ubuntu-latest
    needs: build-check
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Verify Vercel configuration
        run: |
          echo "Checking Vercel deployment configuration..."
          
          if [ ! -f "frontend/vercel.json" ]; then
            echo "‚ùå Error: frontend/vercel.json not found"
            exit 1
          fi
          
          if [ ! -f "vercel.json" ]; then
            echo "‚ö†Ô∏è Warning: Root vercel.json not found (optional)"
          fi
          
          echo "‚úÖ Vercel configuration files are in place"
          
      - name: Check environment files
        run: |
          echo "Checking environment configuration..."
          
          if [ ! -f "frontend/.env.example" ]; then
            echo "‚ö†Ô∏è Warning: frontend/.env.example not found"
          else
            echo "‚úÖ Environment example file exists"
          fi
          
          if [ -f "frontend/.env.staging" ]; then
            echo "‚úÖ Staging environment configuration exists"
          fi
          
      - name: Report deployment readiness
        run: |
          echo "========================================="
          echo "üì¶ DEPLOYMENT READINESS REPORT"
          echo "========================================="
          echo "‚úÖ Build successful"
          echo "‚úÖ Vercel configuration present"
          echo "‚úÖ Package files will be copied during deployment"
          echo ""
          echo "‚ÑπÔ∏è To deploy to Vercel:"
          echo "   1. Ensure VERCEL_TOKEN is set in GitHub Secrets (optional)"
          echo "   2. Or use Vercel's GitHub integration for automatic deployments"
          echo "   3. Or deploy manually using: npx vercel --prod"
          echo "========================================="