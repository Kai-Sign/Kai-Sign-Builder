/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/contract-metadata/route";
exports.ids = ["app/api/contract-metadata/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "(rsc)/../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcontract-metadata%2Froute&page=%2Fapi%2Fcontract-metadata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontract-metadata%2Froute.ts&appDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcontract-metadata%2Froute&page=%2Fapi%2Fcontract-metadata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontract-metadata%2Froute.ts&appDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_richardha_Documents_Projects_Kai_Sign_Builder_frontend_src_app_api_contract_metadata_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/contract-metadata/route.ts */ \"(rsc)/./src/app/api/contract-metadata/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/contract-metadata/route\",\n        pathname: \"/api/contract-metadata\",\n        filename: \"route\",\n        bundlePath: \"app/api/contract-metadata/route\"\n    },\n    resolvedPagePath: \"/Users/richardha/Documents/軟體工程/Projects/Kai-Sign-Builder/frontend/src/app/api/contract-metadata/route.ts\",\n    nextConfigOutput,\n    userland: _Users_richardha_Documents_Projects_Kai_Sign_Builder_frontend_src_app_api_contract_metadata_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyL2luZGV4LmpzP25hbWU9YXBwJTJGYXBpJTJGY29udHJhY3QtbWV0YWRhdGElMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNvbnRyYWN0LW1ldGFkYXRhJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29udHJhY3QtbWV0YWRhdGElMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZyaWNoYXJkaGElMkZEb2N1bWVudHMlMkYlRTglQkIlOUYlRTklQUIlOTQlRTUlQjclQTUlRTclQTglOEIlMkZQcm9qZWN0cyUyRkthaS1TaWduLUJ1aWxkZXIlMkZmcm9udGVuZCUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZyaWNoYXJkaGElMkZEb2N1bWVudHMlMkYlRTglQkIlOUYlRTklQUIlOTQlRTUlQjclQTUlRTclQTglOEIlMkZQcm9qZWN0cyUyRkthaS1TaWduLUJ1aWxkZXIlMkZmcm9udGVuZCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDeUQ7QUFDdEk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9yaWNoYXJkaGEvRG9jdW1lbnRzL+i7n+mrlOW3peeoiy9Qcm9qZWN0cy9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9hcHAvYXBpL2NvbnRyYWN0LW1ldGFkYXRhL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jb250cmFjdC1tZXRhZGF0YS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NvbnRyYWN0LW1ldGFkYXRhXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jb250cmFjdC1tZXRhZGF0YS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yaWNoYXJkaGEvRG9jdW1lbnRzL+i7n+mrlOW3peeoiy9Qcm9qZWN0cy9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9hcHAvYXBpL2NvbnRyYWN0LW1ldGFkYXRhL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcontract-metadata%2Froute&page=%2Fapi%2Fcontract-metadata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontract-metadata%2Froute.ts&appDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/contract-metadata/route.ts":
/*!************************************************!*\
  !*** ./src/app/api/contract-metadata/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../node_modules/next/dist/api/server.js\");\n\n// Simple API to fetch JSON metadata from smart contracts\n// No bytecode decoding - just pure JSON metadata retrieval\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const contractAddress = searchParams.get('address');\n    const chainId = searchParams.get('chainId');\n    // Validate required parameters\n    if (!contractAddress) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Missing required parameter: address',\n            example: '/api/contract-metadata?address=0x123...&chainId=1'\n        }, {\n            status: 400\n        });\n    }\n    if (!chainId) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Missing required parameter: chainId',\n            example: '/api/contract-metadata?address=0x123...&chainId=1'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        // Call our existing KaiSign service to get metadata\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'https://kai-sign-production.up.railway.app';\n        // Try to get complete metadata from our KaiSign graph with IPFS data\n        const client = new (await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/graphql\"), __webpack_require__.e(\"vendor-chunks/graphql-request\"), __webpack_require__.e(\"_rsc_src_lib_graphClient_ts\")]).then(__webpack_require__.bind(__webpack_require__, /*! ~/lib/graphClient */ \"(rsc)/./src/lib/graphClient.ts\"))).KaiSignGraphClient(process.env.NEXT_PUBLIC_KAISIGN_GRAPH_URL || 'https://api.studio.thegraph.com/query/117022/kaisign-subgraph/v0.0.7');\n        let contractMetadata = null;\n        let ipfsMetadata = null;\n        try {\n            const completeData = await client.getCompleteContractMetadata(contractAddress, chainId);\n            if (completeData.specs && completeData.specs.length > 0) {\n                contractMetadata = completeData.specs;\n                ipfsMetadata = completeData.ipfsMetadata;\n            }\n        } catch (graphError) {\n            console.log('Graph metadata not available:', graphError);\n        }\n        // Try to get IPFS-based metadata from Railway API as fallback\n        if (!ipfsMetadata) {\n            try {\n                const ipfsResponse = await fetch(`${apiUrl}/api/py/getIPFSMetadata`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        contract_address: contractAddress,\n                        chain_id: parseInt(chainId)\n                    })\n                });\n                if (ipfsResponse.ok) {\n                    ipfsMetadata = await ipfsResponse.json();\n                }\n            } catch (ipfsError) {\n                console.log('IPFS metadata not available:', ipfsError);\n            }\n        }\n        // Return combined metadata with full ERC-7730 specification\n        const response = {\n            success: true,\n            contractAddress,\n            chainId: parseInt(chainId),\n            metadata: {\n                // Basic contract info\n                address: contractAddress,\n                chainId: parseInt(chainId),\n                // Graph-based spec data\n                ...contractMetadata && {\n                    specs: contractMetadata,\n                    recognized: true,\n                    graph: true\n                },\n                // Complete ERC-7730 metadata\n                ...ipfsMetadata && {\n                    erc7730: ipfsMetadata,\n                    // Extract function information for easier access\n                    functions: ipfsMetadata.metadata?.functions ? Object.entries(ipfsMetadata.metadata.functions).map(([selector, func])=>({\n                            selector,\n                            name: selector,\n                            intent: func.intent,\n                            fields: func.fields\n                        })) : [],\n                    // Extract constants and enums\n                    constants: ipfsMetadata.metadata?.constants || {},\n                    enums: ipfsMetadata.metadata?.enums || {},\n                    // Contract info\n                    owner: ipfsMetadata.metadata?.owner,\n                    info: ipfsMetadata.metadata?.info\n                }\n            },\n            // Indicate which sources provided data\n            sources: {\n                graph: !!contractMetadata,\n                ipfs: !!ipfsMetadata\n            },\n            timestamp: new Date().toISOString()\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n    } catch (error) {\n        console.error('Failed to get contract metadata:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error',\n            contractAddress,\n            chainId: parseInt(chainId || '0'),\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n// POST endpoint for batch requests\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { contracts } = body;\n        if (!Array.isArray(contracts)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid request body. Expected { contracts: Array<{address: string, chainId: number}> }',\n                example: {\n                    contracts: [\n                        {\n                            address: '0x123...',\n                            chainId: 1\n                        },\n                        {\n                            address: '0x456...',\n                            chainId: 137\n                        }\n                    ]\n                }\n            }, {\n                status: 400\n            });\n        }\n        // Process contracts in parallel\n        const results = await Promise.allSettled(contracts.map(async (contract)=>{\n            const response = await fetch(`${request.nextUrl.origin}/api/contract-metadata?address=${contract.address}&chainId=${contract.chainId}`, {\n                method: 'GET'\n            });\n            return response.json();\n        }));\n        const batchResponse = {\n            success: true,\n            total: contracts.length,\n            results: results.map((result, index)=>({\n                    index,\n                    contract: contracts[index],\n                    status: result.status,\n                    data: result.status === 'fulfilled' ? result.value : null,\n                    error: result.status === 'rejected' ? result.reason : null\n                })),\n            timestamp: new Date().toISOString()\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(batchResponse);\n    } catch (error) {\n        console.error('Failed to process batch request:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error',\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/contract-metadata/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcontract-metadata%2Froute&page=%2Fapi%2Fcontract-metadata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontract-metadata%2Froute.ts&appDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frichardha%2FDocuments%2F%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%2FProjects%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();