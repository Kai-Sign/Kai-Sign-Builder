/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/_not-found/page";
exports.ids = ["app/_not-found/page"];
exports.modules = {

/***/ "(rsc)/../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/module.compiled.js?fc76\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/../node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/../node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/../node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/../node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/../node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/../node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/../node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/../node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/../node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/../node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/../node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/../node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/../node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/../node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/../node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/../node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/../node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/../node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/../node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/../node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/../node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/../node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst notFound0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/../node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/../node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/../node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/../node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n              children: [\"/_not-found\", {\n                children: ['__PAGE__', {}, {\n                  page: [\n                    notFound0,\n                    \"next/dist/client/components/builtin/not-found.js\"\n                  ]\n                }]\n              }, {}]\n            },\n        {\n        'layout': [module1, \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\"],\n'global-error': [module2, \"next/dist/client/components/builtin/global-error.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/_not-found/page\",\n        pathname: \"/_not-found\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/_not-found/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n    const isPrerendered = prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_ROUTER_PREFETCH_HEADER]);\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.dynamicIO && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir: routeModule.projectDir,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.isBot)(userAgent)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey: isProduction ? normalizedSrcPage : null,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(matchedSegment),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(cachedData.rscData),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode) {\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                req,\n                res,\n                type: 'html',\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2FClientKeepAlive.tsx%22%2C%22ids%22%3A%5B%22ClientKeepAlive%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fscripts%2FgoogleTagManager%2FgoogleTagManager.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcontexts%2FWalletContext.tsx%22%2C%22ids%22%3A%5B%22WalletProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstore%2Ferc7730Provider.tsx%22%2C%22ids%22%3A%5B%22Erc7730StoreProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstyles%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Ftrpc%2Freact.tsx%22%2C%22ids%22%3A%5B%22TRPCReactProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22..%2Fnode_modules%2Fgeist%2Fdist%2Fsans.js%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2Fgeist-sans%2FGeist-Variable.woff2%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22GeistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2FClientKeepAlive.tsx%22%2C%22ids%22%3A%5B%22ClientKeepAlive%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fscripts%2FgoogleTagManager%2FgoogleTagManager.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcontexts%2FWalletContext.tsx%22%2C%22ids%22%3A%5B%22WalletProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstore%2Ferc7730Provider.tsx%22%2C%22ids%22%3A%5B%22Erc7730StoreProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstyles%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Ftrpc%2Freact.tsx%22%2C%22ids%22%3A%5B%22TRPCReactProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22..%2Fnode_modules%2Fgeist%2Fdist%2Fsans.js%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2Fgeist-sans%2FGeist-Variable.woff2%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22GeistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ClientKeepAlive.tsx */ \"(rsc)/./src/components/ClientKeepAlive.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/scripts/googleTagManager/googleTagManager.tsx */ \"(rsc)/./src/components/scripts/googleTagManager/googleTagManager.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/theme-provider.tsx */ \"(rsc)/./src/components/ui/theme-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/toaster.tsx */ \"(rsc)/./src/components/ui/toaster.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/contexts/WalletContext.tsx */ \"(rsc)/./src/contexts/WalletContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/store/erc7730Provider.tsx */ \"(rsc)/./src/store/erc7730Provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/trpc/react.tsx */ \"(rsc)/./src/trpc/react.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/script.js */ \"(rsc)/../node_modules/next/dist/client/script.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGY29tcG9uZW50cyUyRkNsaWVudEtlZXBBbGl2ZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJDbGllbnRLZWVwQWxpdmUlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZmcm9udGVuZCUyRnNyYyUyRmNvbXBvbmVudHMlMkZzY3JpcHRzJTJGZ29vZ2xlVGFnTWFuYWdlciUyRmdvb2dsZVRhZ01hbmFnZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyZGVmYXVsdCUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGY29tcG9uZW50cyUyRnVpJTJGdGhlbWUtcHJvdmlkZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyVGhlbWVQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGY29tcG9uZW50cyUyRnVpJTJGdG9hc3Rlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUb2FzdGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGZnJvbnRlbmQlMkZzcmMlMkZjb250ZXh0cyUyRldhbGxldENvbnRleHQudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyV2FsbGV0UHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZmcm9udGVuZCUyRnNyYyUyRnN0b3JlJTJGZXJjNzczMFByb3ZpZGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkVyYzc3MzBTdG9yZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGZnJvbnRlbmQlMkZzcmMlMkZzdHlsZXMlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGdHJwYyUyRnJlYWN0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRSUENSZWFjdFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZzY3JpcHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjIqJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZsb2NhbCUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyLi4lMkZub2RlX21vZHVsZXMlMkZnZWlzdCUyRmRpc3QlMkZzYW5zLmpzJTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIyJTVDJTIyJTJDJTVDJTIyYXJndW1lbnRzJTVDJTIyJTNBJTVCJTdCJTVDJTIyc3JjJTVDJTIyJTNBJTVDJTIyLiUyRmZvbnRzJTJGZ2Vpc3Qtc2FucyUyRkdlaXN0LVZhcmlhYmxlLndvZmYyJTVDJTIyJTJDJTVDJTIydmFyaWFibGUlNUMlMjIlM0ElNUMlMjItLWZvbnQtZ2Vpc3Qtc2FucyU1QyUyMiUyQyU1QyUyMndlaWdodCU1QyUyMiUzQSU1QyUyMjEwMCUyMDkwMCU1QyUyMiU3RCU1RCUyQyU1QyUyMnZhcmlhYmxlTmFtZSU1QyUyMiUzQSU1QyUyMkdlaXN0U2FucyU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsb0xBQTBLO0FBQzFLO0FBQ0Esd09BQTRMO0FBQzVMO0FBQ0Esd0xBQTBLO0FBQzFLO0FBQ0EsMEtBQTZKO0FBQzdKO0FBQ0EsNEtBQXFLO0FBQ3JLO0FBQ0EsMEtBQTBLO0FBQzFLO0FBQ0Esb0pBQTRKO0FBQzVKO0FBQ0Esc01BQWlJIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJDbGllbnRLZWVwQWxpdmVcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL0NsaWVudEtlZXBBbGl2ZS50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL3NjcmlwdHMvZ29vZ2xlVGFnTWFuYWdlci9nb29nbGVUYWdNYW5hZ2VyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVGhlbWVQcm92aWRlclwiXSAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvdWkvdGhlbWUtcHJvdmlkZXIudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUb2FzdGVyXCJdICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9mcm9udGVuZC9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiV2FsbGV0UHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb250ZXh0cy9XYWxsZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiRXJjNzczMFN0b3JlUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9zdG9yZS9lcmM3NzMwUHJvdmlkZXIudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUUlBDUmVhY3RQcm92aWRlclwiXSAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL3RycGMvcmVhY3QudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3NjcmlwdC5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2FClientKeepAlive.tsx%22%2C%22ids%22%3A%5B%22ClientKeepAlive%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fscripts%2FgoogleTagManager%2FgoogleTagManager.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcontexts%2FWalletContext.tsx%22%2C%22ids%22%3A%5B%22WalletProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstore%2Ferc7730Provider.tsx%22%2C%22ids%22%3A%5B%22Erc7730StoreProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstyles%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Ftrpc%2Freact.tsx%22%2C%22ids%22%3A%5B%22TRPCReactProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22..%2Fnode_modules%2Fgeist%2Fdist%2Fsans.js%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2Fgeist-sans%2FGeist-Variable.woff2%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22GeistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/../node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/client-page.js */ \"(rsc)/../node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/../node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/../node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/../node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(rsc)/../node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/../node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/../node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmJ1aWx0aW4lMkZnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1zZWdtZW50LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZtZXRhZGF0YSUyRmFzeW5jLW1ldGFkYXRhLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmxpYiUyRm1ldGFkYXRhJTJGZ2VuZXJhdGUlMkZpY29uLW1hcmsuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHdQQUEwSjtBQUMxSjtBQUNBLHNPQUFpSjtBQUNqSjtBQUNBLDRPQUFvSjtBQUNwSjtBQUNBLHNSQUF5SztBQUN6SztBQUNBLDBPQUFtSjtBQUNuSjtBQUNBLDhQQUE2SjtBQUM3SjtBQUNBLG9RQUFnSztBQUNoSztBQUNBLHdRQUFrSztBQUNsSztBQUNBLDBPQUFtSjtBQUNuSjtBQUNBLDhRQUFxSyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZ2xvYmFsLWVycm9yLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2h0dHAtYWNjZXNzLWZhbGxiYWNrL2Vycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL2dlbmVyYXRlL2ljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtZGV2dG9vbHMvdXNlcnNwYWNlL2FwcC9zZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/styles/globals.css */ \"(rsc)/./src/styles/globals.css\");\n/* harmony import */ var geist_font_sans__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! geist/font/sans */ \"(rsc)/../node_modules/geist/dist/sans.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ~/env.js */ \"(rsc)/./src/env.js\");\n/* harmony import */ var _trpc_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ~/trpc/react */ \"(rsc)/./src/trpc/react.tsx\");\n/* harmony import */ var _store_erc7730Provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ~/store/erc7730Provider */ \"(rsc)/./src/store/erc7730Provider.tsx\");\n/* harmony import */ var _components_ui_toaster__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ~/components/ui/toaster */ \"(rsc)/./src/components/ui/toaster.tsx\");\n/* harmony import */ var _components_ui_theme_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ~/components/ui/theme-provider */ \"(rsc)/./src/components/ui/theme-provider.tsx\");\n/* harmony import */ var _contexts_WalletContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ~/contexts/WalletContext */ \"(rsc)/./src/contexts/WalletContext.tsx\");\n/* harmony import */ var _components_scripts_googleTagManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ~/components/scripts/googleTagManager */ \"(rsc)/./src/components/scripts/googleTagManager/index.ts\");\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/script */ \"(rsc)/../node_modules/next/dist/api/script.js\");\n/* harmony import */ var _components_ClientKeepAlive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ~/components/ClientKeepAlive */ \"(rsc)/./src/components/ClientKeepAlive.tsx\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst metadata = {\n    title: \"Create Erc7730 Json\",\n    description: \"Clear sign all the things\",\n    icons: [\n        {\n            rel: \"icon\",\n            url: \"/ledger-logo-short-black.svg\"\n        }\n    ],\n    openGraph: {\n        title: \"Create Erc7730 Json\",\n        description: \"Clear sign all the things\",\n        images: [\n            {\n                url: \"/openGraphImage.png\",\n                width: 1200,\n                height: 630\n            }\n        ],\n        type: \"website\"\n    }\n};\nconst GTM_ID = _env_js__WEBPACK_IMPORTED_MODULE_3__.env.NEXT_PUBLIC_GTM;\nconst ONETRUST_ID = _env_js__WEBPACK_IMPORTED_MODULE_3__.env.NEXT_PUBLIC_ONETRUST;\nconst ONETRUST_ENVIROMENT_ID = _env_js__WEBPACK_IMPORTED_MODULE_3__.env.NODE_ENV === \"production\" ? ONETRUST_ID : `${ONETRUST_ID}-test`;\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        className: `${geist_font_sans__WEBPACK_IMPORTED_MODULE_2__.GeistSans.variable}`,\n        suppressHydrationWarning: true,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            suppressHydrationWarning: true,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_trpc_react__WEBPACK_IMPORTED_MODULE_4__.TRPCReactProvider, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_WalletContext__WEBPACK_IMPORTED_MODULE_8__.WalletProvider, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_store_erc7730Provider__WEBPACK_IMPORTED_MODULE_5__.Erc7730StoreProvider, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_theme_provider__WEBPACK_IMPORTED_MODULE_7__.ThemeProvider, {\n                                attribute: \"class\",\n                                defaultTheme: \"system\",\n                                enableSystem: true,\n                                disableTransitionOnChange: true,\n                                children: [\n                                    children,\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toaster__WEBPACK_IMPORTED_MODULE_6__.Toaster, {}, void 0, false, {\n                                        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                                        lineNumber: 58,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ClientKeepAlive__WEBPACK_IMPORTED_MODULE_11__.ClientKeepAlive, {}, void 0, false, {\n                                        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                                        lineNumber: 59,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                                lineNumber: 51,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                            lineNumber: 50,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                    lineNumber: 48,\n                    columnNumber: 9\n                }, this),\n                ONETRUST_ID && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_script__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                    strategy: \"beforeInteractive\",\n                    src: \"https://cdn.cookielaw.org/scripttemplates/otSDKStub.js\",\n                    \"data-domain-script\": `${ONETRUST_ENVIROMENT_ID}`,\n                    \"data-document-language\": \"true\",\n                    \"data-testid\": \"one-trust-script-sdk\"\n                }, void 0, false, {\n                    fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                    lineNumber: 65,\n                    columnNumber: 11\n                }, this),\n                GTM_ID && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_scripts_googleTagManager__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    id: GTM_ID\n                }, void 0, false, {\n                    fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n                    lineNumber: 73,\n                    columnNumber: 20\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n            lineNumber: 47,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/app/layout.tsx\",\n        lineNumber: 42,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUVjO0FBRWI7QUFDa0I7QUFDYztBQUNiO0FBQ2E7QUFDTDtBQUNXO0FBQ3BDO0FBQzhCO0FBRXhELE1BQU1VLFdBQXFCO0lBQ2hDQyxPQUFPO0lBQ1BDLGFBQWE7SUFDYkMsT0FBTztRQUFDO1lBQUVDLEtBQUs7WUFBUUMsS0FBSztRQUErQjtLQUFFO0lBQzdEQyxXQUFXO1FBQ1RMLE9BQU87UUFDUEMsYUFBYTtRQUNiSyxRQUFRO1lBQ047Z0JBQ0VGLEtBQUs7Z0JBQ0xHLE9BQU87Z0JBQ1BDLFFBQVE7WUFDVjtTQUNEO1FBQ0RDLE1BQU07SUFDUjtBQUNGLEVBQUU7QUFFRixNQUFNQyxTQUFTcEIsd0NBQUdBLENBQUNxQixlQUFlO0FBQ2xDLE1BQU1DLGNBQWN0Qix3Q0FBR0EsQ0FBQ3VCLG9CQUFvQjtBQUM1QyxNQUFNQyx5QkFDSnhCLHdDQUFHQSxDQUFDeUIsUUFBUSxLQUFLLGVBQWVILGNBQWMsR0FBR0EsWUFBWSxLQUFLLENBQUM7QUFFdEQsU0FBU0ksV0FBVyxFQUNqQ0MsUUFBUSxFQUNnQztJQUN4QyxxQkFDRSw4REFBQ0M7UUFDQ0MsTUFBSztRQUNMQyxXQUFXLEdBQUcvQixzREFBU0EsQ0FBQ2dDLFFBQVEsRUFBRTtRQUNsQ0Msd0JBQXdCO2tCQUV4Qiw0RUFBQ0M7WUFBS0Qsd0JBQXdCOzs4QkFDNUIsOERBQUMvQiwwREFBaUJBOzhCQUNoQiw0RUFBQ0ksbUVBQWNBO2tDQUNiLDRFQUFDSCx3RUFBb0JBO3NDQUNuQiw0RUFBQ0Usd0VBQWFBO2dDQUNaOEIsV0FBVTtnQ0FDVkMsY0FBYTtnQ0FDYkMsWUFBWTtnQ0FDWkMseUJBQXlCOztvQ0FFeEJWO2tEQUNELDhEQUFDeEIsMkRBQU9BOzs7OztrREFDUiw4REFBQ0sseUVBQWVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnQkFLdkJjLDZCQUNDLDhEQUFDZixvREFBTUE7b0JBQ0wrQixVQUFTO29CQUNUQyxLQUFJO29CQUNKQyxzQkFBb0IsR0FBR2hCLHdCQUF3QjtvQkFDL0NpQiwwQkFBdUI7b0JBQ3ZCQyxlQUFZOzs7Ozs7Z0JBR2Z0Qix3QkFBVSw4REFBQ2QsNEVBQWdCQTtvQkFBQ3FDLElBQUl2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJekMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL2FwcC9sYXlvdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIn4vc3R5bGVzL2dsb2JhbHMuY3NzXCI7XG5cbmltcG9ydCB7IEdlaXN0U2FucyB9IGZyb20gXCJnZWlzdC9mb250L3NhbnNcIjtcbmltcG9ydCB7IHR5cGUgTWV0YWRhdGEgfSBmcm9tIFwibmV4dFwiO1xuaW1wb3J0IHsgZW52IH0gZnJvbSBcIn4vZW52LmpzXCI7XG5pbXBvcnQgeyBUUlBDUmVhY3RQcm92aWRlciB9IGZyb20gXCJ+L3RycGMvcmVhY3RcIjtcbmltcG9ydCB7IEVyYzc3MzBTdG9yZVByb3ZpZGVyIH0gZnJvbSBcIn4vc3RvcmUvZXJjNzczMFByb3ZpZGVyXCI7XG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSBcIn4vY29tcG9uZW50cy91aS90b2FzdGVyXCI7XG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSBcIn4vY29tcG9uZW50cy91aS90aGVtZS1wcm92aWRlclwiO1xuaW1wb3J0IHsgV2FsbGV0UHJvdmlkZXIgfSBmcm9tIFwifi9jb250ZXh0cy9XYWxsZXRDb250ZXh0XCI7XG5pbXBvcnQgR29vZ2xlVGFnTWFuYWdlciBmcm9tIFwifi9jb21wb25lbnRzL3NjcmlwdHMvZ29vZ2xlVGFnTWFuYWdlclwiO1xuaW1wb3J0IFNjcmlwdCBmcm9tIFwibmV4dC9zY3JpcHRcIjtcbmltcG9ydCB7IENsaWVudEtlZXBBbGl2ZSB9IGZyb20gXCJ+L2NvbXBvbmVudHMvQ2xpZW50S2VlcEFsaXZlXCI7XG5cbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XG4gIHRpdGxlOiBcIkNyZWF0ZSBFcmM3NzMwIEpzb25cIixcbiAgZGVzY3JpcHRpb246IFwiQ2xlYXIgc2lnbiBhbGwgdGhlIHRoaW5nc1wiLFxuICBpY29uczogW3sgcmVsOiBcImljb25cIiwgdXJsOiBcIi9sZWRnZXItbG9nby1zaG9ydC1ibGFjay5zdmdcIiB9XSxcbiAgb3BlbkdyYXBoOiB7XG4gICAgdGl0bGU6IFwiQ3JlYXRlIEVyYzc3MzAgSnNvblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkNsZWFyIHNpZ24gYWxsIHRoZSB0aGluZ3NcIixcbiAgICBpbWFnZXM6IFtcbiAgICAgIHtcbiAgICAgICAgdXJsOiBcIi9vcGVuR3JhcGhJbWFnZS5wbmdcIixcbiAgICAgICAgd2lkdGg6IDEyMDAsXG4gICAgICAgIGhlaWdodDogNjMwLFxuICAgICAgfSxcbiAgICBdLFxuICAgIHR5cGU6IFwid2Vic2l0ZVwiLFxuICB9LFxufTtcblxuY29uc3QgR1RNX0lEID0gZW52Lk5FWFRfUFVCTElDX0dUTTtcbmNvbnN0IE9ORVRSVVNUX0lEID0gZW52Lk5FWFRfUFVCTElDX09ORVRSVVNUO1xuY29uc3QgT05FVFJVU1RfRU5WSVJPTUVOVF9JRCA9XG4gIGVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBPTkVUUlVTVF9JRCA6IGAke09ORVRSVVNUX0lEfS10ZXN0YDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7XG4gIGNoaWxkcmVuLFxufTogUmVhZG9ubHk8eyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0+KSB7XG4gIHJldHVybiAoXG4gICAgPGh0bWxcbiAgICAgIGxhbmc9XCJlblwiXG4gICAgICBjbGFzc05hbWU9e2Ake0dlaXN0U2Fucy52YXJpYWJsZX1gfVxuICAgICAgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXG4gICAgPlxuICAgICAgPGJvZHkgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nPlxuICAgICAgICA8VFJQQ1JlYWN0UHJvdmlkZXI+XG4gICAgICAgICAgPFdhbGxldFByb3ZpZGVyPlxuICAgICAgICAgICAgPEVyYzc3MzBTdG9yZVByb3ZpZGVyPlxuICAgICAgICAgICAgICA8VGhlbWVQcm92aWRlclxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZT1cImNsYXNzXCJcbiAgICAgICAgICAgICAgICBkZWZhdWx0VGhlbWU9XCJzeXN0ZW1cIlxuICAgICAgICAgICAgICAgIGVuYWJsZVN5c3RlbVxuICAgICAgICAgICAgICAgIGRpc2FibGVUcmFuc2l0aW9uT25DaGFuZ2VcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8VG9hc3RlciAvPlxuICAgICAgICAgICAgICAgIDxDbGllbnRLZWVwQWxpdmUgLz5cbiAgICAgICAgICAgICAgPC9UaGVtZVByb3ZpZGVyPlxuICAgICAgICAgICAgPC9FcmM3NzMwU3RvcmVQcm92aWRlcj5cbiAgICAgICAgICA8L1dhbGxldFByb3ZpZGVyPlxuICAgICAgICA8L1RSUENSZWFjdFByb3ZpZGVyPlxuICAgICAgICB7T05FVFJVU1RfSUQgJiYgKFxuICAgICAgICAgIDxTY3JpcHRcbiAgICAgICAgICAgIHN0cmF0ZWd5PVwiYmVmb3JlSW50ZXJhY3RpdmVcIlxuICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9jZG4uY29va2llbGF3Lm9yZy9zY3JpcHR0ZW1wbGF0ZXMvb3RTREtTdHViLmpzXCJcbiAgICAgICAgICAgIGRhdGEtZG9tYWluLXNjcmlwdD17YCR7T05FVFJVU1RfRU5WSVJPTUVOVF9JRH1gfVxuICAgICAgICAgICAgZGF0YS1kb2N1bWVudC1sYW5ndWFnZT1cInRydWVcIlxuICAgICAgICAgICAgZGF0YS10ZXN0aWQ9XCJvbmUtdHJ1c3Qtc2NyaXB0LXNka1wiXG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAge0dUTV9JRCAmJiA8R29vZ2xlVGFnTWFuYWdlciBpZD17R1RNX0lEfSAvPn1cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiR2Vpc3RTYW5zIiwiZW52IiwiVFJQQ1JlYWN0UHJvdmlkZXIiLCJFcmM3NzMwU3RvcmVQcm92aWRlciIsIlRvYXN0ZXIiLCJUaGVtZVByb3ZpZGVyIiwiV2FsbGV0UHJvdmlkZXIiLCJHb29nbGVUYWdNYW5hZ2VyIiwiU2NyaXB0IiwiQ2xpZW50S2VlcEFsaXZlIiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWNvbnMiLCJyZWwiLCJ1cmwiLCJvcGVuR3JhcGgiLCJpbWFnZXMiLCJ3aWR0aCIsImhlaWdodCIsInR5cGUiLCJHVE1fSUQiLCJORVhUX1BVQkxJQ19HVE0iLCJPTkVUUlVTVF9JRCIsIk5FWFRfUFVCTElDX09ORVRSVVNUIiwiT05FVFJVU1RfRU5WSVJPTUVOVF9JRCIsIk5PREVfRU5WIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJjbGFzc05hbWUiLCJ2YXJpYWJsZSIsInN1cHByZXNzSHlkcmF0aW9uV2FybmluZyIsImJvZHkiLCJhdHRyaWJ1dGUiLCJkZWZhdWx0VGhlbWUiLCJlbmFibGVTeXN0ZW0iLCJkaXNhYmxlVHJhbnNpdGlvbk9uQ2hhbmdlIiwic3RyYXRlZ3kiLCJzcmMiLCJkYXRhLWRvbWFpbi1zY3JpcHQiLCJkYXRhLWRvY3VtZW50LWxhbmd1YWdlIiwiZGF0YS10ZXN0aWQiLCJpZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/ClientKeepAlive.tsx":
/*!********************************************!*\
  !*** ./src/components/ClientKeepAlive.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClientKeepAlive: () => (/* binding */ ClientKeepAlive)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const ClientKeepAlive = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call ClientKeepAlive() from the server but ClientKeepAlive is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ClientKeepAlive.tsx",
"ClientKeepAlive",
);

/***/ }),

/***/ "(rsc)/./src/components/scripts/googleTagManager/googleTagManager.tsx":
/*!**********************************************************************!*\
  !*** ./src/components/scripts/googleTagManager/googleTagManager.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call the default export of \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/scripts/googleTagManager/googleTagManager.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/scripts/googleTagManager/googleTagManager.tsx",
"default",
));


/***/ }),

/***/ "(rsc)/./src/components/scripts/googleTagManager/index.ts":
/*!**********************************************************!*\
  !*** ./src/components/scripts/googleTagManager/index.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _googleTagManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _googleTagManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./googleTagManager */ \"(rsc)/./src/components/scripts/googleTagManager/googleTagManager.tsx\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy9zY3JpcHRzL2dvb2dsZVRhZ01hbmFnZXIvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvc2NyaXB0cy9nb29nbGVUYWdNYW5hZ2VyL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLi9nb29nbGVUYWdNYW5hZ2VyXCI7XG4iXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/components/scripts/googleTagManager/index.ts\n");

/***/ }),

/***/ "(rsc)/./src/components/ui/theme-provider.tsx":
/*!**********************************************!*\
  !*** ./src/components/ui/theme-provider.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const ThemeProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/theme-provider.tsx",
"ThemeProvider",
);

/***/ }),

/***/ "(rsc)/./src/components/ui/toaster.tsx":
/*!***************************************!*\
  !*** ./src/components/ui/toaster.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Toaster: () => (/* binding */ Toaster)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const Toaster = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx",
"Toaster",
);

/***/ }),

/***/ "(rsc)/./src/contexts/WalletContext.tsx":
/*!****************************************!*\
  !*** ./src/contexts/WalletContext.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WalletProvider: () => (/* binding */ WalletProvider),
/* harmony export */   useWallet: () => (/* binding */ useWallet)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const useWallet = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useWallet() from the server but useWallet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/contexts/WalletContext.tsx",
"useWallet",
);const WalletProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call WalletProvider() from the server but WalletProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/contexts/WalletContext.tsx",
"WalletProvider",
);

/***/ }),

/***/ "(rsc)/./src/env.js":
/*!********************!*\
  !*** ./src/env.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   env: () => (/* binding */ env)\n/* harmony export */ });\n/* harmony import */ var _t3_oss_env_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @t3-oss/env-nextjs */ \"(rsc)/../node_modules/@t3-oss/env-nextjs/dist/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(rsc)/../node_modules/zod/lib/index.mjs\");\n\n\nconst env = (0,_t3_oss_env_nextjs__WEBPACK_IMPORTED_MODULE_0__.createEnv)({\n    /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */ server: {\n        NODE_ENV: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n            \"development\",\n            \"test\",\n            \"production\"\n        ]),\n        CURVEGRID_JWT: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        ETHERSCAN_API_KEY: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        ALCHEMY_RPC_URL: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        USE_MOCK: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional()\n    },\n    /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   * \n   * WARNING: Only add variables here that are safe to expose publicly!\n   */ client: {\n        NEXT_PUBLIC_GTM: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        NEXT_PUBLIC_ONETRUST: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        NEXT_PUBLIC_API_URL: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        NEXT_PUBLIC_KAISIGN_CONTRACT_ADDRESS: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        NEXT_PUBLIC_IPFS_GATEWAY_URL: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional()\n    },\n    /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */ runtimeEnv: {\n        NODE_ENV: \"development\",\n        NEXT_PUBLIC_GTM: process.env.NEXT_PUBLIC_GTM,\n        NEXT_PUBLIC_ONETRUST: process.env.NEXT_PUBLIC_ONETRUST,\n        CURVEGRID_JWT: process.env.CURVEGRID_JWT,\n        NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,\n        ETHERSCAN_API_KEY: process.env.ETHERSCAN_API_KEY,\n        ALCHEMY_RPC_URL: process.env.ALCHEMY_RPC_URL,\n        USE_MOCK: process.env.USE_MOCK,\n        NEXT_PUBLIC_KAISIGN_CONTRACT_ADDRESS: process.env.NEXT_PUBLIC_KAISIGN_CONTRACT_ADDRESS,\n        NEXT_PUBLIC_IPFS_GATEWAY_URL: process.env.NEXT_PUBLIC_IPFS_GATEWAY_URL\n    },\n    /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */ skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n    /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */ emptyStringAsUndefined: true\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvZW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUN2QjtBQUVqQixNQUFNRSxNQUFNRiw2REFBU0EsQ0FBQztJQUMzQjs7O0dBR0MsR0FDREcsUUFBUTtRQUNOQyxVQUFVSCxrQ0FBQ0EsQ0FBQ0ksSUFBSSxDQUFDO1lBQUM7WUFBZTtZQUFRO1NBQWE7UUFDdERDLGVBQWVMLGtDQUFDQSxDQUFDTSxNQUFNLEdBQUdDLFFBQVE7UUFDbENDLG1CQUFtQlIsa0NBQUNBLENBQUNNLE1BQU0sR0FBR0MsUUFBUTtRQUN0Q0UsaUJBQWlCVCxrQ0FBQ0EsQ0FBQ00sTUFBTSxHQUFHQyxRQUFRO1FBQ3BDRyxVQUFVVixrQ0FBQ0EsQ0FBQ00sTUFBTSxHQUFHQyxRQUFRO0lBQy9CO0lBRUE7Ozs7OztHQU1DLEdBQ0RJLFFBQVE7UUFDTkMsaUJBQWlCWixrQ0FBQ0EsQ0FBQ00sTUFBTSxHQUFHQyxRQUFRO1FBQ3BDTSxzQkFBc0JiLGtDQUFDQSxDQUFDTSxNQUFNLEdBQUdDLFFBQVE7UUFDekNPLHFCQUFxQmQsa0NBQUNBLENBQUNNLE1BQU0sR0FBR0MsUUFBUTtRQUN4Q1Esc0NBQXNDZixrQ0FBQ0EsQ0FBQ00sTUFBTSxHQUFHQyxRQUFRO1FBQ3pEUyw4QkFBOEJoQixrQ0FBQ0EsQ0FBQ00sTUFBTSxHQUFHQyxRQUFRO0lBQ25EO0lBRUE7OztHQUdDLEdBQ0RVLFlBQVk7UUFDVmQ7UUFDQVMsaUJBQWlCTSxRQUFRakIsR0FBRyxDQUFDVyxlQUFlO1FBQzVDQyxzQkFBc0JLLFFBQVFqQixHQUFHLENBQUNZLG9CQUFvQjtRQUN0RFIsZUFBZWEsUUFBUWpCLEdBQUcsQ0FBQ0ksYUFBYTtRQUN4Q1MscUJBQXFCSSxRQUFRakIsR0FBRyxDQUFDYSxtQkFBbUI7UUFDcEROLG1CQUFtQlUsUUFBUWpCLEdBQUcsQ0FBQ08saUJBQWlCO1FBQ2hEQyxpQkFBaUJTLFFBQVFqQixHQUFHLENBQUNRLGVBQWU7UUFDNUNDLFVBQVVRLFFBQVFqQixHQUFHLENBQUNTLFFBQVE7UUFDOUJLLHNDQUFzQ0csUUFBUWpCLEdBQUcsQ0FBQ2Msb0NBQW9DO1FBQ3RGQyw4QkFBOEJFLFFBQVFqQixHQUFHLENBQUNlLDRCQUE0QjtJQUN4RTtJQUNBOzs7R0FHQyxHQUNERyxnQkFBZ0IsQ0FBQyxDQUFDRCxRQUFRakIsR0FBRyxDQUFDbUIsbUJBQW1CO0lBQ2pEOzs7R0FHQyxHQUNEQyx3QkFBd0I7QUFFMUIsR0FBRyIsInNvdXJjZXMiOlsiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9mcm9udGVuZC9zcmMvZW52LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVudiB9IGZyb20gXCJAdDMtb3NzL2Vudi1uZXh0anNcIjtcbmltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5cbmV4cG9ydCBjb25zdCBlbnYgPSBjcmVhdGVFbnYoe1xuICAvKipcbiAgICogU3BlY2lmeSB5b3VyIHNlcnZlci1zaWRlIGVudmlyb25tZW50IHZhcmlhYmxlcyBzY2hlbWEgaGVyZS4gVGhpcyB3YXkgeW91IGNhbiBlbnN1cmUgdGhlIGFwcFxuICAgKiBpc24ndCBidWlsdCB3aXRoIGludmFsaWQgZW52IHZhcnMuXG4gICAqL1xuICBzZXJ2ZXI6IHtcbiAgICBOT0RFX0VOVjogei5lbnVtKFtcImRldmVsb3BtZW50XCIsIFwidGVzdFwiLCBcInByb2R1Y3Rpb25cIl0pLFxuICAgIENVUlZFR1JJRF9KV1Q6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBFVEhFUlNDQU5fQVBJX0tFWTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIEFMQ0hFTVlfUlBDX1VSTDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIFVTRV9NT0NLOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIH0sXG5cbiAgLyoqXG4gICAqIFNwZWNpZnkgeW91ciBjbGllbnQtc2lkZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgc2NoZW1hIGhlcmUuIFRoaXMgd2F5IHlvdSBjYW4gZW5zdXJlIHRoZSBhcHBcbiAgICogaXNuJ3QgYnVpbHQgd2l0aCBpbnZhbGlkIGVudiB2YXJzLiBUbyBleHBvc2UgdGhlbSB0byB0aGUgY2xpZW50LCBwcmVmaXggdGhlbSB3aXRoXG4gICAqIGBORVhUX1BVQkxJQ19gLlxuICAgKiBcbiAgICogV0FSTklORzogT25seSBhZGQgdmFyaWFibGVzIGhlcmUgdGhhdCBhcmUgc2FmZSB0byBleHBvc2UgcHVibGljbHkhXG4gICAqL1xuICBjbGllbnQ6IHtcbiAgICBORVhUX1BVQkxJQ19HVE06IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBORVhUX1BVQkxJQ19PTkVUUlVTVDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIE5FWFRfUFVCTElDX0FQSV9VUkw6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBORVhUX1BVQkxJQ19LQUlTSUdOX0NPTlRSQUNUX0FERFJFU1M6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICBORVhUX1BVQkxJQ19JUEZTX0dBVEVXQVlfVVJMOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIH0sXG5cbiAgLyoqXG4gICAqIFlvdSBjYW4ndCBkZXN0cnVjdCBgcHJvY2Vzcy5lbnZgIGFzIGEgcmVndWxhciBvYmplY3QgaW4gdGhlIE5leHQuanMgZWRnZSBydW50aW1lcyAoZS5nLlxuICAgKiBtaWRkbGV3YXJlcykgb3IgY2xpZW50LXNpZGUgc28gd2UgbmVlZCB0byBkZXN0cnVjdCBtYW51YWxseS5cbiAgICovXG4gIHJ1bnRpbWVFbnY6IHtcbiAgICBOT0RFX0VOVjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYsXG4gICAgTkVYVF9QVUJMSUNfR1RNOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HVE0sXG4gICAgTkVYVF9QVUJMSUNfT05FVFJVU1Q6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX09ORVRSVVNULFxuICAgIENVUlZFR1JJRF9KV1Q6IHByb2Nlc3MuZW52LkNVUlZFR1JJRF9KV1QsXG4gICAgTkVYVF9QVUJMSUNfQVBJX1VSTDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCxcbiAgICBFVEhFUlNDQU5fQVBJX0tFWTogcHJvY2Vzcy5lbnYuRVRIRVJTQ0FOX0FQSV9LRVksXG4gICAgQUxDSEVNWV9SUENfVVJMOiBwcm9jZXNzLmVudi5BTENIRU1ZX1JQQ19VUkwsXG4gICAgVVNFX01PQ0s6IHByb2Nlc3MuZW52LlVTRV9NT0NLLFxuICAgIE5FWFRfUFVCTElDX0tBSVNJR05fQ09OVFJBQ1RfQUREUkVTUzogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfS0FJU0lHTl9DT05UUkFDVF9BRERSRVNTLFxuICAgIE5FWFRfUFVCTElDX0lQRlNfR0FURVdBWV9VUkw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0lQRlNfR0FURVdBWV9VUkwsXG4gIH0sXG4gIC8qKlxuICAgKiBSdW4gYGJ1aWxkYCBvciBgZGV2YCB3aXRoIGBTS0lQX0VOVl9WQUxJREFUSU9OYCB0byBza2lwIGVudiB2YWxpZGF0aW9uLiBUaGlzIGlzIGVzcGVjaWFsbHlcbiAgICogdXNlZnVsIGZvciBEb2NrZXIgYnVpbGRzLlxuICAgKi9cbiAgc2tpcFZhbGlkYXRpb246ICEhcHJvY2Vzcy5lbnYuU0tJUF9FTlZfVkFMSURBVElPTixcbiAgLyoqXG4gICAqIE1ha2VzIGl0IHNvIHRoYXQgZW1wdHkgc3RyaW5ncyBhcmUgdHJlYXRlZCBhcyB1bmRlZmluZWQuIGBTT01FX1ZBUjogei5zdHJpbmcoKWAgYW5kXG4gICAqIGBTT01FX1ZBUj0nJ2Agd2lsbCB0aHJvdyBhbiBlcnJvci5cbiAgICovXG4gIGVtcHR5U3RyaW5nQXNVbmRlZmluZWQ6IHRydWUsXG5cbn0pO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUVudiIsInoiLCJlbnYiLCJzZXJ2ZXIiLCJOT0RFX0VOViIsImVudW0iLCJDVVJWRUdSSURfSldUIiwic3RyaW5nIiwib3B0aW9uYWwiLCJFVEhFUlNDQU5fQVBJX0tFWSIsIkFMQ0hFTVlfUlBDX1VSTCIsIlVTRV9NT0NLIiwiY2xpZW50IiwiTkVYVF9QVUJMSUNfR1RNIiwiTkVYVF9QVUJMSUNfT05FVFJVU1QiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiTkVYVF9QVUJMSUNfS0FJU0lHTl9DT05UUkFDVF9BRERSRVNTIiwiTkVYVF9QVUJMSUNfSVBGU19HQVRFV0FZX1VSTCIsInJ1bnRpbWVFbnYiLCJwcm9jZXNzIiwic2tpcFZhbGlkYXRpb24iLCJTS0lQX0VOVl9WQUxJREFUSU9OIiwiZW1wdHlTdHJpbmdBc1VuZGVmaW5lZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/env.js\n");

/***/ }),

/***/ "(rsc)/./src/store/erc7730Provider.tsx":
/*!***************************************!*\
  !*** ./src/store/erc7730Provider.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Erc7730StoreContext: () => (/* binding */ Erc7730StoreContext),
/* harmony export */   Erc7730StoreProvider: () => (/* binding */ Erc7730StoreProvider),
/* harmony export */   useErc7730Store: () => (/* binding */ useErc7730Store)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const Erc7730StoreContext = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call Erc7730StoreContext() from the server but Erc7730StoreContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/store/erc7730Provider.tsx",
"Erc7730StoreContext",
);const Erc7730StoreProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call Erc7730StoreProvider() from the server but Erc7730StoreProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/store/erc7730Provider.tsx",
"Erc7730StoreProvider",
);const useErc7730Store = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useErc7730Store() from the server but useErc7730Store is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/store/erc7730Provider.tsx",
"useErc7730Store",
);

/***/ }),

/***/ "(rsc)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"f3d64ec52183\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9zdHlsZXMvZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJmM2Q2NGVjNTIxODNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/styles/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/trpc/react.tsx":
/*!****************************!*\
  !*** ./src/trpc/react.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TRPCReactProvider: () => (/* binding */ TRPCReactProvider),
/* harmony export */   api: () => (/* binding */ api)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const api = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/trpc/react.tsx",
"api",
);const TRPCReactProvider = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/trpc/react.tsx",
"TRPCReactProvider",
);

/***/ }),

/***/ "(ssr)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2FClientKeepAlive.tsx%22%2C%22ids%22%3A%5B%22ClientKeepAlive%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fscripts%2FgoogleTagManager%2FgoogleTagManager.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcontexts%2FWalletContext.tsx%22%2C%22ids%22%3A%5B%22WalletProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstore%2Ferc7730Provider.tsx%22%2C%22ids%22%3A%5B%22Erc7730StoreProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstyles%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Ftrpc%2Freact.tsx%22%2C%22ids%22%3A%5B%22TRPCReactProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22..%2Fnode_modules%2Fgeist%2Fdist%2Fsans.js%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2Fgeist-sans%2FGeist-Variable.woff2%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22GeistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2FClientKeepAlive.tsx%22%2C%22ids%22%3A%5B%22ClientKeepAlive%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fscripts%2FgoogleTagManager%2FgoogleTagManager.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcontexts%2FWalletContext.tsx%22%2C%22ids%22%3A%5B%22WalletProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstore%2Ferc7730Provider.tsx%22%2C%22ids%22%3A%5B%22Erc7730StoreProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstyles%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Ftrpc%2Freact.tsx%22%2C%22ids%22%3A%5B%22TRPCReactProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22..%2Fnode_modules%2Fgeist%2Fdist%2Fsans.js%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2Fgeist-sans%2FGeist-Variable.woff2%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22GeistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ClientKeepAlive.tsx */ \"(ssr)/./src/components/ClientKeepAlive.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/scripts/googleTagManager/googleTagManager.tsx */ \"(ssr)/./src/components/scripts/googleTagManager/googleTagManager.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/theme-provider.tsx */ \"(ssr)/./src/components/ui/theme-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/toaster.tsx */ \"(ssr)/./src/components/ui/toaster.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/contexts/WalletContext.tsx */ \"(ssr)/./src/contexts/WalletContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/store/erc7730Provider.tsx */ \"(ssr)/./src/store/erc7730Provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/trpc/react.tsx */ \"(ssr)/./src/trpc/react.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/script.js */ \"(ssr)/../node_modules/next/dist/client/script.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGY29tcG9uZW50cyUyRkNsaWVudEtlZXBBbGl2ZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJDbGllbnRLZWVwQWxpdmUlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZmcm9udGVuZCUyRnNyYyUyRmNvbXBvbmVudHMlMkZzY3JpcHRzJTJGZ29vZ2xlVGFnTWFuYWdlciUyRmdvb2dsZVRhZ01hbmFnZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyZGVmYXVsdCUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGY29tcG9uZW50cyUyRnVpJTJGdGhlbWUtcHJvdmlkZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyVGhlbWVQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGY29tcG9uZW50cyUyRnVpJTJGdG9hc3Rlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUb2FzdGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGZnJvbnRlbmQlMkZzcmMlMkZjb250ZXh0cyUyRldhbGxldENvbnRleHQudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyV2FsbGV0UHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZmcm9udGVuZCUyRnNyYyUyRnN0b3JlJTJGZXJjNzczMFByb3ZpZGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkVyYzc3MzBTdG9yZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGZnJvbnRlbmQlMkZzcmMlMkZzdHlsZXMlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRmZyb250ZW5kJTJGc3JjJTJGdHJwYyUyRnJlYWN0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRSUENSZWFjdFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZzY3JpcHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjIqJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZsb2NhbCUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyLi4lMkZub2RlX21vZHVsZXMlMkZnZWlzdCUyRmRpc3QlMkZzYW5zLmpzJTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIyJTVDJTIyJTJDJTVDJTIyYXJndW1lbnRzJTVDJTIyJTNBJTVCJTdCJTVDJTIyc3JjJTVDJTIyJTNBJTVDJTIyLiUyRmZvbnRzJTJGZ2Vpc3Qtc2FucyUyRkdlaXN0LVZhcmlhYmxlLndvZmYyJTVDJTIyJTJDJTVDJTIydmFyaWFibGUlNUMlMjIlM0ElNUMlMjItLWZvbnQtZ2Vpc3Qtc2FucyU1QyUyMiUyQyU1QyUyMndlaWdodCU1QyUyMiUzQSU1QyUyMjEwMCUyMDkwMCU1QyUyMiU3RCU1RCUyQyU1QyUyMnZhcmlhYmxlTmFtZSU1QyUyMiUzQSU1QyUyMkdlaXN0U2FucyU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsb0xBQTBLO0FBQzFLO0FBQ0Esd09BQTRMO0FBQzVMO0FBQ0Esd0xBQTBLO0FBQzFLO0FBQ0EsMEtBQTZKO0FBQzdKO0FBQ0EsNEtBQXFLO0FBQ3JLO0FBQ0EsMEtBQTBLO0FBQzFLO0FBQ0Esb0pBQTRKO0FBQzVKO0FBQ0Esc01BQWlJIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJDbGllbnRLZWVwQWxpdmVcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL0NsaWVudEtlZXBBbGl2ZS50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL3NjcmlwdHMvZ29vZ2xlVGFnTWFuYWdlci9nb29nbGVUYWdNYW5hZ2VyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVGhlbWVQcm92aWRlclwiXSAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvdWkvdGhlbWUtcHJvdmlkZXIudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUb2FzdGVyXCJdICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9mcm9udGVuZC9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiV2FsbGV0UHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb250ZXh0cy9XYWxsZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiRXJjNzczMFN0b3JlUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9zdG9yZS9lcmM3NzMwUHJvdmlkZXIudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUUlBDUmVhY3RQcm92aWRlclwiXSAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL3RycGMvcmVhY3QudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3NjcmlwdC5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2FClientKeepAlive.tsx%22%2C%22ids%22%3A%5B%22ClientKeepAlive%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fscripts%2FgoogleTagManager%2FgoogleTagManager.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fcontexts%2FWalletContext.tsx%22%2C%22ids%22%3A%5B%22WalletProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstore%2Ferc7730Provider.tsx%22%2C%22ids%22%3A%5B%22Erc7730StoreProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fstyles%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Ftrpc%2Freact.tsx%22%2C%22ids%22%3A%5B%22TRPCReactProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22..%2Fnode_modules%2Fgeist%2Fdist%2Fsans.js%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2Fgeist-sans%2FGeist-Variable.woff2%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22GeistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/../node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/client-page.js */ \"(ssr)/../node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/../node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/../node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/../node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(ssr)/../node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/../node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ../node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/../node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmJ1aWx0aW4lMkZnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1zZWdtZW50LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZtZXRhZGF0YSUyRmFzeW5jLW1ldGFkYXRhLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbXVoYW1tYWRhdXNoaWpyaSUyRkRlc2t0b3AlMkZnaXQlMkZLYWktU2lnbi1CdWlsZGVyJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm11aGFtbWFkYXVzaGlqcmklMkZEZXNrdG9wJTJGZ2l0JTJGS2FpLVNpZ24tQnVpbGRlciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmxpYiUyRm1ldGFkYXRhJTJGZ2VuZXJhdGUlMkZpY29uLW1hcmsuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtdWhhbW1hZGF1c2hpanJpJTJGRGVza3RvcCUyRmdpdCUyRkthaS1TaWduLUJ1aWxkZXIlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHdQQUEwSjtBQUMxSjtBQUNBLHNPQUFpSjtBQUNqSjtBQUNBLDRPQUFvSjtBQUNwSjtBQUNBLHNSQUF5SztBQUN6SztBQUNBLDBPQUFtSjtBQUNuSjtBQUNBLDhQQUE2SjtBQUM3SjtBQUNBLG9RQUFnSztBQUNoSztBQUNBLHdRQUFrSztBQUNsSztBQUNBLG9PQUFtSjtBQUNuSjtBQUNBLDhRQUFxSyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZ2xvYmFsLWVycm9yLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2h0dHAtYWNjZXNzLWZhbGxiYWNrL2Vycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL2dlbmVyYXRlL2ljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtZGV2dG9vbHMvdXNlcnNwYWNlL2FwcC9zZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/components/ClientKeepAlive.tsx":
/*!********************************************!*\
  !*** ./src/components/ClientKeepAlive.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientKeepAlive: () => (/* binding */ ClientKeepAlive)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_keepAlive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/lib/keepAlive */ \"(ssr)/./src/lib/keepAlive.ts\");\n/* __next_internal_client_entry_do_not_use__ ClientKeepAlive auto */ \n\nfunction ClientKeepAlive() {\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"ClientKeepAlive.useEffect\": ()=>{\n            (0,_lib_keepAlive__WEBPACK_IMPORTED_MODULE_1__.startKeepAlive)();\n        }\n    }[\"ClientKeepAlive.useEffect\"], []);\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9DbGllbnRLZWVwQWxpdmUudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7cUVBRWtDO0FBQ2U7QUFFMUMsU0FBU0U7SUFDZEYsZ0RBQVNBO3FDQUFDO1lBQ1JDLDhEQUFjQTtRQUNoQjtvQ0FBRyxFQUFFO0lBRUwsT0FBTztBQUNUIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL0NsaWVudEtlZXBBbGl2ZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgc3RhcnRLZWVwQWxpdmUgfSBmcm9tIFwifi9saWIva2VlcEFsaXZlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDbGllbnRLZWVwQWxpdmUoKSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc3RhcnRLZWVwQWxpdmUoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiBudWxsO1xufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJzdGFydEtlZXBBbGl2ZSIsIkNsaWVudEtlZXBBbGl2ZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ClientKeepAlive.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/scripts/googleTagManager/googleTagManager.tsx":
/*!**********************************************************************!*\
  !*** ./src/components/scripts/googleTagManager/googleTagManager.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_gtm_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-gtm-module */ \"(ssr)/../node_modules/react-gtm-module/dist/index.js\");\n/* harmony import */ var react_gtm_module__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_gtm_module__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst GoogleTagManager = ({ id })=>{\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"GoogleTagManager.useEffect\": ()=>{\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            react_gtm_module__WEBPACK_IMPORTED_MODULE_1___default().initialize({\n                gtmId: id\n            });\n        }\n    }[\"GoogleTagManager.useEffect\"], [\n        id\n    ]);\n    return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GoogleTagManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9zY3JpcHRzL2dvb2dsZVRhZ01hbmFnZXIvZ29vZ2xlVGFnTWFuYWdlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7NkRBQ2tDO0FBQ1E7QUFLMUMsTUFBTUUsbUJBQW1CLENBQUMsRUFBRUMsRUFBRSxFQUFTO0lBQ3JDSCxnREFBU0E7c0NBQUM7WUFDUix5R0FBeUc7WUFDekdDLGtFQUFxQixDQUFDO2dCQUFFSSxPQUFPRjtZQUFHO1FBQ3BDO3FDQUFHO1FBQUNBO0tBQUc7SUFDUCxPQUFPO0FBQ1Q7QUFDQSxpRUFBZUQsZ0JBQWdCQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL3NjcmlwdHMvZ29vZ2xlVGFnTWFuYWdlci9nb29nbGVUYWdNYW5hZ2VyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFRhZ01hbmFnZXIgZnJvbSBcInJlYWN0LWd0bS1tb2R1bGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIGlkOiBzdHJpbmc7XG59XG5jb25zdCBHb29nbGVUYWdNYW5hZ2VyID0gKHsgaWQgfTogUHJvcHMpID0+IHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1jYWxsLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICBUYWdNYW5hZ2VyLmluaXRpYWxpemUoeyBndG1JZDogaWQgfSk7XG4gIH0sIFtpZF0pO1xuICByZXR1cm4gbnVsbDtcbn07XG5leHBvcnQgZGVmYXVsdCBHb29nbGVUYWdNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsIlRhZ01hbmFnZXIiLCJHb29nbGVUYWdNYW5hZ2VyIiwiaWQiLCJpbml0aWFsaXplIiwiZ3RtSWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/scripts/googleTagManager/googleTagManager.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/theme-provider.tsx":
/*!**********************************************!*\
  !*** ./src/components/ui/theme-provider.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(ssr)/../node_modules/next-themes/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider auto */ \n\n\nfunction ThemeProvider({ children, ...props }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        ...props,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/theme-provider.tsx\",\n        lineNumber: 10,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy91aS90aGVtZS1wcm92aWRlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUUrQjtBQUNtQztBQUUzRCxTQUFTQyxjQUFjLEVBQzVCRSxRQUFRLEVBQ1IsR0FBR0MsT0FDNkM7SUFDaEQscUJBQU8sOERBQUNGLHNEQUFrQkE7UUFBRSxHQUFHRSxLQUFLO2tCQUFHRDs7Ozs7O0FBQ3pDIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL3VpL3RoZW1lLXByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIGFzIE5leHRUaGVtZXNQcm92aWRlciB9IGZyb20gXCJuZXh0LXRoZW1lc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gVGhlbWVQcm92aWRlcih7XG4gIGNoaWxkcmVuLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIE5leHRUaGVtZXNQcm92aWRlcj4pIHtcbiAgcmV0dXJuIDxOZXh0VGhlbWVzUHJvdmlkZXIgey4uLnByb3BzfT57Y2hpbGRyZW59PC9OZXh0VGhlbWVzUHJvdmlkZXI+O1xufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiVGhlbWVQcm92aWRlciIsIk5leHRUaGVtZXNQcm92aWRlciIsImNoaWxkcmVuIiwicHJvcHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/theme-provider.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/toast.tsx":
/*!*************************************!*\
  !*** ./src/components/ui/toast.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-toast */ \"(ssr)/../node_modules/@radix-ui/react-toast/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/../node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=X!=!lucide-react */ \"(ssr)/../node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ~/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ ToastProvider,ToastViewport,Toast,ToastTitle,ToastDescription,ToastClose,ToastAction auto */ \n\n\n\n\n\nconst ToastProvider = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Provider;\nconst ToastViewport = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n        lineNumber: 16,\n        columnNumber: 3\n    }, undefined));\nToastViewport.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport.displayName;\nconst toastVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\", {\n    variants: {\n        variant: {\n            default: \"border bg-background text-foreground\",\n            destructive: \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Toast = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, ...props }, ref)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(toastVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, undefined);\n});\nToast.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\nconst ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n        lineNumber: 62,\n        columnNumber: 3\n    }, undefined));\nToastAction.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action.displayName;\nconst ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\", className),\n        \"toast-close\": \"\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n            lineNumber: 86,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n        lineNumber: 77,\n        columnNumber: 3\n    }, undefined));\nToastClose.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close.displayName;\nconst ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm font-semibold [&+div]:text-xs\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n        lineNumber: 95,\n        columnNumber: 3\n    }, undefined));\nToastTitle.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title.displayName;\nconst ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm opacity-90\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toast.tsx\",\n        lineNumber: 107,\n        columnNumber: 3\n    }, undefined));\nToastDescription.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description.displayName;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/toast.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/ui/toaster.tsx":
/*!***************************************!*\
  !*** ./src/components/ui/toaster.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/hooks/use-toast */ \"(ssr)/./src/hooks/use-toast.ts\");\n/* harmony import */ var _components_ui_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/components/ui/toast */ \"(ssr)/./src/components/ui/toast.tsx\");\n/* __next_internal_client_entry_do_not_use__ Toaster auto */ \n\n\nfunction Toaster() {\n    const { toasts } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastProvider, {\n        children: [\n            toasts.map(function({ id, title, description, action, ...props }) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.Toast, {\n                    ...props,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid gap-1\",\n                            children: [\n                                title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastTitle, {\n                                    children: title\n                                }, void 0, false, {\n                                    fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n                                    lineNumber: 22,\n                                    columnNumber: 25\n                                }, this),\n                                description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastDescription, {\n                                    children: description\n                                }, void 0, false, {\n                                    fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this),\n                        action,\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastClose, {}, void 0, false, {\n                            fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, id, true, {\n                    fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 11\n                }, this);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastViewport, {}, void 0, false, {\n                fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/components/ui/toaster.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFNEM7QUFRZDtBQUV2QixTQUFTTztJQUNkLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdSLDBEQUFRQTtJQUUzQixxQkFDRSw4REFBQ0ksK0RBQWFBOztZQUNYSSxPQUFPQyxHQUFHLENBQUMsU0FBVSxFQUFFQyxFQUFFLEVBQUVDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsT0FBTztnQkFDaEUscUJBQ0UsOERBQUNiLHVEQUFLQTtvQkFBVyxHQUFHYSxLQUFLOztzQ0FDdkIsOERBQUNDOzRCQUFJQyxXQUFVOztnQ0FDWkwsdUJBQVMsOERBQUNOLDREQUFVQTs4Q0FBRU07Ozs7OztnQ0FDdEJDLDZCQUNDLDhEQUFDVCxrRUFBZ0JBOzhDQUFFUzs7Ozs7Ozs7Ozs7O3dCQUd0QkM7c0NBQ0QsOERBQUNYLDREQUFVQTs7Ozs7O21CQVJEUTs7Ozs7WUFXaEI7MEJBQ0EsOERBQUNKLCtEQUFhQTs7Ozs7Ozs7Ozs7QUFHcEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvdWkvdG9hc3Rlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0IHsgdXNlVG9hc3QgfSBmcm9tIFwifi9ob29rcy91c2UtdG9hc3RcIlxuaW1wb3J0IHtcbiAgVG9hc3QsXG4gIFRvYXN0Q2xvc2UsXG4gIFRvYXN0RGVzY3JpcHRpb24sXG4gIFRvYXN0UHJvdmlkZXIsXG4gIFRvYXN0VGl0bGUsXG4gIFRvYXN0Vmlld3BvcnQsXG59IGZyb20gXCJ+L2NvbXBvbmVudHMvdWkvdG9hc3RcIlxuXG5leHBvcnQgZnVuY3Rpb24gVG9hc3RlcigpIHtcbiAgY29uc3QgeyB0b2FzdHMgfSA9IHVzZVRvYXN0KClcblxuICByZXR1cm4gKFxuICAgIDxUb2FzdFByb3ZpZGVyPlxuICAgICAge3RvYXN0cy5tYXAoZnVuY3Rpb24gKHsgaWQsIHRpdGxlLCBkZXNjcmlwdGlvbiwgYWN0aW9uLCAuLi5wcm9wcyB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFRvYXN0IGtleT17aWR9IHsuLi5wcm9wc30+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ2FwLTFcIj5cbiAgICAgICAgICAgICAge3RpdGxlICYmIDxUb2FzdFRpdGxlPnt0aXRsZX08L1RvYXN0VGl0bGU+fVxuICAgICAgICAgICAgICB7ZGVzY3JpcHRpb24gJiYgKFxuICAgICAgICAgICAgICAgIDxUb2FzdERlc2NyaXB0aW9uPntkZXNjcmlwdGlvbn08L1RvYXN0RGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHthY3Rpb259XG4gICAgICAgICAgICA8VG9hc3RDbG9zZSAvPlxuICAgICAgICAgIDwvVG9hc3Q+XG4gICAgICAgIClcbiAgICAgIH0pfVxuICAgICAgPFRvYXN0Vmlld3BvcnQgLz5cbiAgICA8L1RvYXN0UHJvdmlkZXI+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJ1c2VUb2FzdCIsIlRvYXN0IiwiVG9hc3RDbG9zZSIsIlRvYXN0RGVzY3JpcHRpb24iLCJUb2FzdFByb3ZpZGVyIiwiVG9hc3RUaXRsZSIsIlRvYXN0Vmlld3BvcnQiLCJUb2FzdGVyIiwidG9hc3RzIiwibWFwIiwiaWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYWN0aW9uIiwicHJvcHMiLCJkaXYiLCJjbGFzc05hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/ui/toaster.tsx\n");

/***/ }),

/***/ "(ssr)/./src/contexts/WalletContext.tsx":
/*!****************************************!*\
  !*** ./src/contexts/WalletContext.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletProvider: () => (/* binding */ WalletProvider),\n/* harmony export */   useWallet: () => (/* binding */ useWallet)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_web3Service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/lib/web3Service */ \"(ssr)/./src/lib/web3Service.ts\");\n/* __next_internal_client_entry_do_not_use__ useWallet,WalletProvider auto */ \n\n\nconst WalletContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useWallet = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WalletContext);\n    if (context === undefined) {\n        throw new Error('useWallet must be used within a WalletProvider');\n    }\n    return context;\n};\nconst WalletProvider = ({ children })=>{\n    const [walletConnected, setWalletConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const checkConnection = async ()=>{\n        // Only check connection on client side\n        if (true) return;\n        try {\n            const account = await _lib_web3Service__WEBPACK_IMPORTED_MODULE_2__.web3Service.getCurrentAccount();\n            if (account) {\n                setCurrentAccount(account);\n                setWalletConnected(true);\n            } else {\n                setCurrentAccount(null);\n                setWalletConnected(false);\n            }\n        } catch (error) {\n            console.error(\"Error checking wallet connection:\", error);\n            setCurrentAccount(null);\n            setWalletConnected(false);\n        }\n    };\n    const connectWallet = async ()=>{\n        setIsConnecting(true);\n        try {\n            const account = await _lib_web3Service__WEBPACK_IMPORTED_MODULE_2__.web3Service.connect();\n            setCurrentAccount(account);\n            setWalletConnected(true);\n        } catch (error) {\n            console.error(\"Error connecting wallet:\", error);\n            setCurrentAccount(null);\n            setWalletConnected(false);\n            throw error;\n        } finally{\n            setIsConnecting(false);\n        }\n    };\n    const disconnectWallet = ()=>{\n        setCurrentAccount(null);\n        setWalletConnected(false);\n    };\n    // Listen for account changes and disconnections\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WalletProvider.useEffect\": ()=>{\n            // Only run on client side\n            if (true) return;\n            const handleAccountsChanged = {\n                \"WalletProvider.useEffect.handleAccountsChanged\": (accounts)=>{\n                    if (accounts.length === 0) {\n                        // User disconnected\n                        disconnectWallet();\n                    } else if (accounts[0] && accounts[0] !== currentAccount) {\n                        // User switched accounts\n                        setCurrentAccount(accounts[0]);\n                        setWalletConnected(true);\n                    }\n                }\n            }[\"WalletProvider.useEffect.handleAccountsChanged\"];\n            const handleChainChanged = {\n                \"WalletProvider.useEffect.handleChainChanged\": ()=>{\n                    // Reload the page when chain changes to avoid state issues\n                    window.location.reload();\n                }\n            }[\"WalletProvider.useEffect.handleChainChanged\"];\n            if (false) {}\n            // Check connection on mount\n            checkConnection();\n            return ({\n                \"WalletProvider.useEffect\": ()=>{\n                    if (false) {}\n                }\n            })[\"WalletProvider.useEffect\"];\n        }\n    }[\"WalletProvider.useEffect\"], [\n        currentAccount\n    ]);\n    const value = {\n        walletConnected,\n        currentAccount,\n        isConnecting,\n        connectWallet,\n        disconnectWallet,\n        checkConnection\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WalletContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/contexts/WalletContext.tsx\",\n        lineNumber: 122,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29udGV4dHMvV2FsbGV0Q29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFeUY7QUFDekM7QUFXaEQsTUFBTU0sOEJBQWdCTCxvREFBYUEsQ0FBZ0NNO0FBRTVELE1BQU1DLFlBQVk7SUFDdkIsTUFBTUMsVUFBVVAsaURBQVVBLENBQUNJO0lBQzNCLElBQUlHLFlBQVlGLFdBQVc7UUFDekIsTUFBTSxJQUFJRyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVCxFQUFFO0FBTUssTUFBTUUsaUJBQWdELENBQUMsRUFBRUMsUUFBUSxFQUFFO0lBQ3hFLE1BQU0sQ0FBQ0MsaUJBQWlCQyxtQkFBbUIsR0FBR1YsK0NBQVFBLENBQUM7SUFDdkQsTUFBTSxDQUFDVyxnQkFBZ0JDLGtCQUFrQixHQUFHWiwrQ0FBUUEsQ0FBZ0I7SUFDcEUsTUFBTSxDQUFDYSxjQUFjQyxnQkFBZ0IsR0FBR2QsK0NBQVFBLENBQUM7SUFFakQsTUFBTWUsa0JBQWtCO1FBQ3RCLHVDQUF1QztRQUN2QyxJQUFJLElBQTZCLEVBQUU7UUFFbkMsSUFBSTtZQUNGLE1BQU1DLFVBQVUsTUFBTWYseURBQVdBLENBQUNnQixpQkFBaUI7WUFDbkQsSUFBSUQsU0FBUztnQkFDWEosa0JBQWtCSTtnQkFDbEJOLG1CQUFtQjtZQUNyQixPQUFPO2dCQUNMRSxrQkFBa0I7Z0JBQ2xCRixtQkFBbUI7WUFDckI7UUFDRixFQUFFLE9BQU9RLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHFDQUFxQ0E7WUFDbkROLGtCQUFrQjtZQUNsQkYsbUJBQW1CO1FBQ3JCO0lBQ0Y7SUFFQSxNQUFNVSxnQkFBZ0I7UUFDcEJOLGdCQUFnQjtRQUNoQixJQUFJO1lBQ0YsTUFBTUUsVUFBVSxNQUFNZix5REFBV0EsQ0FBQ29CLE9BQU87WUFDekNULGtCQUFrQkk7WUFDbEJOLG1CQUFtQjtRQUNyQixFQUFFLE9BQU9RLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDRCQUE0QkE7WUFDMUNOLGtCQUFrQjtZQUNsQkYsbUJBQW1CO1lBQ25CLE1BQU1RO1FBQ1IsU0FBVTtZQUNSSixnQkFBZ0I7UUFDbEI7SUFDRjtJQUVBLE1BQU1RLG1CQUFtQjtRQUN2QlYsa0JBQWtCO1FBQ2xCRixtQkFBbUI7SUFDckI7SUFFQSxnREFBZ0Q7SUFDaERYLGdEQUFTQTtvQ0FBQztZQUNSLDBCQUEwQjtZQUMxQixJQUFJLElBQTZCLEVBQUU7WUFFbkMsTUFBTXdCO2tFQUF3QixDQUFDQztvQkFDN0IsSUFBSUEsU0FBU0MsTUFBTSxLQUFLLEdBQUc7d0JBQ3pCLG9CQUFvQjt3QkFDcEJIO29CQUNGLE9BQU8sSUFBSUUsUUFBUSxDQUFDLEVBQUUsSUFBSUEsUUFBUSxDQUFDLEVBQUUsS0FBS2IsZ0JBQWdCO3dCQUN4RCx5QkFBeUI7d0JBQ3pCQyxrQkFBa0JZLFFBQVEsQ0FBQyxFQUFFO3dCQUM3QmQsbUJBQW1CO29CQUNyQjtnQkFDRjs7WUFFQSxNQUFNZ0I7K0RBQXFCO29CQUN6QiwyREFBMkQ7b0JBQzNEQyxPQUFPQyxRQUFRLENBQUNDLE1BQU07Z0JBQ3hCOztZQUVBLElBQUksS0FBZ0QsRUFBRSxFQUdyRDtZQUVELDRCQUE0QjtZQUM1QmQ7WUFFQTs0Q0FBTztvQkFDTCxJQUFJLEtBQWdELEVBQUUsRUFHckQ7Z0JBQ0g7O1FBQ0Y7bUNBQUc7UUFBQ0o7S0FBZTtJQUVuQixNQUFNc0IsUUFBMkI7UUFDL0J4QjtRQUNBRTtRQUNBRTtRQUNBTztRQUNBRTtRQUNBUDtJQUNGO0lBRUEscUJBQ0UsOERBQUNiLGNBQWNnQyxRQUFRO1FBQUNELE9BQU9BO2tCQUM1QnpCOzs7Ozs7QUFHUCxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9jb250ZXh0cy9XYWxsZXRDb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHdlYjNTZXJ2aWNlIH0gZnJvbSAnfi9saWIvd2ViM1NlcnZpY2UnO1xuXG5pbnRlcmZhY2UgV2FsbGV0Q29udGV4dFR5cGUge1xuICB3YWxsZXRDb25uZWN0ZWQ6IGJvb2xlYW47XG4gIGN1cnJlbnRBY2NvdW50OiBzdHJpbmcgfCBudWxsO1xuICBpc0Nvbm5lY3Rpbmc6IGJvb2xlYW47XG4gIGNvbm5lY3RXYWxsZXQ6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIGRpc2Nvbm5lY3RXYWxsZXQ6ICgpID0+IHZvaWQ7XG4gIGNoZWNrQ29ubmVjdGlvbjogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbn1cblxuY29uc3QgV2FsbGV0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8V2FsbGV0Q29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbmV4cG9ydCBjb25zdCB1c2VXYWxsZXQgPSAoKSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFdhbGxldENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VXYWxsZXQgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFdhbGxldFByb3ZpZGVyJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5pbnRlcmZhY2UgV2FsbGV0UHJvdmlkZXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBjb25zdCBXYWxsZXRQcm92aWRlcjogUmVhY3QuRkM8V2FsbGV0UHJvdmlkZXJQcm9wcz4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIGNvbnN0IFt3YWxsZXRDb25uZWN0ZWQsIHNldFdhbGxldENvbm5lY3RlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjdXJyZW50QWNjb3VudCwgc2V0Q3VycmVudEFjY291bnRdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc0Nvbm5lY3RpbmcsIHNldElzQ29ubmVjdGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3QgY2hlY2tDb25uZWN0aW9uID0gYXN5bmMgKCkgPT4ge1xuICAgIC8vIE9ubHkgY2hlY2sgY29ubmVjdGlvbiBvbiBjbGllbnQgc2lkZVxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgd2ViM1NlcnZpY2UuZ2V0Q3VycmVudEFjY291bnQoKTtcbiAgICAgIGlmIChhY2NvdW50KSB7XG4gICAgICAgIHNldEN1cnJlbnRBY2NvdW50KGFjY291bnQpO1xuICAgICAgICBzZXRXYWxsZXRDb25uZWN0ZWQodHJ1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRDdXJyZW50QWNjb3VudChudWxsKTtcbiAgICAgICAgc2V0V2FsbGV0Q29ubmVjdGVkKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNoZWNraW5nIHdhbGxldCBjb25uZWN0aW9uOlwiLCBlcnJvcik7XG4gICAgICBzZXRDdXJyZW50QWNjb3VudChudWxsKTtcbiAgICAgIHNldFdhbGxldENvbm5lY3RlZChmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XG4gICAgc2V0SXNDb25uZWN0aW5nKHRydWUpO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgd2ViM1NlcnZpY2UuY29ubmVjdCgpO1xuICAgICAgc2V0Q3VycmVudEFjY291bnQoYWNjb3VudCk7XG4gICAgICBzZXRXYWxsZXRDb25uZWN0ZWQodHJ1ZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjb25uZWN0aW5nIHdhbGxldDpcIiwgZXJyb3IpO1xuICAgICAgc2V0Q3VycmVudEFjY291bnQobnVsbCk7XG4gICAgICBzZXRXYWxsZXRDb25uZWN0ZWQoZmFsc2UpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzQ29ubmVjdGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGRpc2Nvbm5lY3RXYWxsZXQgPSAoKSA9PiB7XG4gICAgc2V0Q3VycmVudEFjY291bnQobnVsbCk7XG4gICAgc2V0V2FsbGV0Q29ubmVjdGVkKGZhbHNlKTtcbiAgfTtcblxuICAvLyBMaXN0ZW4gZm9yIGFjY291bnQgY2hhbmdlcyBhbmQgZGlzY29ubmVjdGlvbnNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBPbmx5IHJ1biBvbiBjbGllbnQgc2lkZVxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuXG4gICAgY29uc3QgaGFuZGxlQWNjb3VudHNDaGFuZ2VkID0gKGFjY291bnRzOiBzdHJpbmdbXSkgPT4ge1xuICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAvLyBVc2VyIGRpc2Nvbm5lY3RlZFxuICAgICAgICBkaXNjb25uZWN0V2FsbGV0KCk7XG4gICAgICB9IGVsc2UgaWYgKGFjY291bnRzWzBdICYmIGFjY291bnRzWzBdICE9PSBjdXJyZW50QWNjb3VudCkge1xuICAgICAgICAvLyBVc2VyIHN3aXRjaGVkIGFjY291bnRzXG4gICAgICAgIHNldEN1cnJlbnRBY2NvdW50KGFjY291bnRzWzBdKTtcbiAgICAgICAgc2V0V2FsbGV0Q29ubmVjdGVkKHRydWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVDaGFpbkNoYW5nZWQgPSAoKSA9PiB7XG4gICAgICAvLyBSZWxvYWQgdGhlIHBhZ2Ugd2hlbiBjaGFpbiBjaGFuZ2VzIHRvIGF2b2lkIHN0YXRlIGlzc3Vlc1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH07XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmV0aGVyZXVtKSB7XG4gICAgICB3aW5kb3cuZXRoZXJldW0ub24/LignYWNjb3VudHNDaGFuZ2VkJywgaGFuZGxlQWNjb3VudHNDaGFuZ2VkKTtcbiAgICAgIHdpbmRvdy5ldGhlcmV1bS5vbj8uKCdjaGFpbkNoYW5nZWQnLCBoYW5kbGVDaGFpbkNoYW5nZWQpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGNvbm5lY3Rpb24gb24gbW91bnRcbiAgICBjaGVja0Nvbm5lY3Rpb24oKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmV0aGVyZXVtKSB7XG4gICAgICAgIHdpbmRvdy5ldGhlcmV1bS5yZW1vdmVMaXN0ZW5lcj8uKCdhY2NvdW50c0NoYW5nZWQnLCBoYW5kbGVBY2NvdW50c0NoYW5nZWQpO1xuICAgICAgICB3aW5kb3cuZXRoZXJldW0ucmVtb3ZlTGlzdGVuZXI/LignY2hhaW5DaGFuZ2VkJywgaGFuZGxlQ2hhaW5DaGFuZ2VkKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbY3VycmVudEFjY291bnRdKTtcblxuICBjb25zdCB2YWx1ZTogV2FsbGV0Q29udGV4dFR5cGUgPSB7XG4gICAgd2FsbGV0Q29ubmVjdGVkLFxuICAgIGN1cnJlbnRBY2NvdW50LFxuICAgIGlzQ29ubmVjdGluZyxcbiAgICBjb25uZWN0V2FsbGV0LFxuICAgIGRpc2Nvbm5lY3RXYWxsZXQsXG4gICAgY2hlY2tDb25uZWN0aW9uLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFdhbGxldENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3ZhbHVlfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1dhbGxldENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59OyJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ3ZWIzU2VydmljZSIsIldhbGxldENvbnRleHQiLCJ1bmRlZmluZWQiLCJ1c2VXYWxsZXQiLCJjb250ZXh0IiwiRXJyb3IiLCJXYWxsZXRQcm92aWRlciIsImNoaWxkcmVuIiwid2FsbGV0Q29ubmVjdGVkIiwic2V0V2FsbGV0Q29ubmVjdGVkIiwiY3VycmVudEFjY291bnQiLCJzZXRDdXJyZW50QWNjb3VudCIsImlzQ29ubmVjdGluZyIsInNldElzQ29ubmVjdGluZyIsImNoZWNrQ29ubmVjdGlvbiIsImFjY291bnQiLCJnZXRDdXJyZW50QWNjb3VudCIsImVycm9yIiwiY29uc29sZSIsImNvbm5lY3RXYWxsZXQiLCJjb25uZWN0IiwiZGlzY29ubmVjdFdhbGxldCIsImhhbmRsZUFjY291bnRzQ2hhbmdlZCIsImFjY291bnRzIiwibGVuZ3RoIiwiaGFuZGxlQ2hhaW5DaGFuZ2VkIiwid2luZG93IiwibG9jYXRpb24iLCJyZWxvYWQiLCJldGhlcmV1bSIsIm9uIiwicmVtb3ZlTGlzdGVuZXIiLCJ2YWx1ZSIsIlByb3ZpZGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/contexts/WalletContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/hooks/use-toast.ts":
/*!********************************!*\
  !*** ./src/hooks/use-toast.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reducer: () => (/* binding */ reducer),\n/* harmony export */   toast: () => (/* binding */ toast),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ reducer,useToast,toast auto */ // Inspired by react-hot-toast library\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst actionTypes = {\n    ADD_TOAST: \"ADD_TOAST\",\n    UPDATE_TOAST: \"UPDATE_TOAST\",\n    DISMISS_TOAST: \"DISMISS_TOAST\",\n    REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n    count = (count + 1) % Number.MAX_SAFE_INTEGER;\n    return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = (toastId)=>{\n    if (toastTimeouts.has(toastId)) {\n        return;\n    }\n    const timeout = setTimeout(()=>{\n        toastTimeouts.delete(toastId);\n        dispatch({\n            type: \"REMOVE_TOAST\",\n            toastId: toastId\n        });\n    }, TOAST_REMOVE_DELAY);\n    toastTimeouts.set(toastId, timeout);\n};\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case \"ADD_TOAST\":\n            return {\n                ...state,\n                toasts: [\n                    action.toast,\n                    ...state.toasts\n                ].slice(0, TOAST_LIMIT)\n            };\n        case \"UPDATE_TOAST\":\n            return {\n                ...state,\n                toasts: state.toasts.map((t)=>t.id === action.toast.id ? {\n                        ...t,\n                        ...action.toast\n                    } : t)\n            };\n        case \"DISMISS_TOAST\":\n            {\n                const { toastId } = action;\n                // ! Side effects ! - This could be extracted into a dismissToast() action,\n                // but I'll keep it here for simplicity\n                if (toastId) {\n                    addToRemoveQueue(toastId);\n                } else {\n                    state.toasts.forEach((toast)=>{\n                        addToRemoveQueue(toast.id);\n                    });\n                }\n                return {\n                    ...state,\n                    toasts: state.toasts.map((t)=>t.id === toastId || toastId === undefined ? {\n                            ...t,\n                            open: false\n                        } : t)\n                };\n            }\n        case \"REMOVE_TOAST\":\n            if (action.toastId === undefined) {\n                return {\n                    ...state,\n                    toasts: []\n                };\n            }\n            return {\n                ...state,\n                toasts: state.toasts.filter((t)=>t.id !== action.toastId)\n            };\n    }\n};\nconst listeners = [];\nlet memoryState = {\n    toasts: []\n};\nfunction dispatch(action) {\n    memoryState = reducer(memoryState, action);\n    listeners.forEach((listener)=>{\n        listener(memoryState);\n    });\n}\nfunction toast({ ...props }) {\n    const id = genId();\n    const update = (props)=>dispatch({\n            type: \"UPDATE_TOAST\",\n            toast: {\n                ...props,\n                id\n            }\n        });\n    const dismiss = ()=>dispatch({\n            type: \"DISMISS_TOAST\",\n            toastId: id\n        });\n    dispatch({\n        type: \"ADD_TOAST\",\n        toast: {\n            ...props,\n            id,\n            open: true,\n            onOpenChange: (open)=>{\n                if (!open) dismiss();\n            }\n        }\n    });\n    return {\n        id: id,\n        dismiss,\n        update\n    };\n}\nfunction useToast() {\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useToast.useEffect\": ()=>{\n            listeners.push(setState);\n            return ({\n                \"useToast.useEffect\": ()=>{\n                    const index = listeners.indexOf(setState);\n                    if (index > -1) {\n                        listeners.splice(index, 1);\n                    }\n                }\n            })[\"useToast.useEffect\"];\n        }\n    }[\"useToast.useEffect\"], [\n        state\n    ]);\n    return {\n        ...state,\n        toast,\n        dismiss: (toastId)=>dispatch({\n                type: \"DISMISS_TOAST\",\n                toastId\n            })\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/hooks/use-toast.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/keepAlive.ts":
/*!******************************!*\
  !*** ./src/lib/keepAlive.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getKeepAliveStatus: () => (/* binding */ getKeepAliveStatus),\n/* harmony export */   startKeepAlive: () => (/* binding */ startKeepAlive),\n/* harmony export */   stopKeepAlive: () => (/* binding */ stopKeepAlive)\n/* harmony export */ });\n/**\n * Keep-alive service to prevent Railway server cold starts\n * Pings the server every 10 minutes to keep it warm\n */ let pingInterval = null;\nlet isEnabled = false;\nconst PING_INTERVAL = 10 * 60 * 1000; // 10 minutes\nconst API_HEALTH_URL = 'https://kai-sign-production.up.railway.app/api/health';\nasync function pingServer() {\n    try {\n        console.log('🏓 Pinging server to keep it warm...');\n        const response = await fetch(API_HEALTH_URL, {\n            method: 'GET',\n            headers: {\n                'Cache-Control': 'no-cache'\n            },\n            cache: 'no-store'\n        });\n        if (response.ok) {\n            console.log('✅ Server ping successful');\n        } else {\n            console.log(`⚠️ Server ping returned ${response.status}`);\n        }\n    } catch (error) {\n        console.log('❌ Server ping failed:', error instanceof Error ? error.message : 'Unknown error');\n    // Don't throw - we don't want ping failures to break the app\n    }\n}\n/**\n * Start the keep-alive ping service\n * Only runs in production and when window is available\n */ function startKeepAlive() {\n    // Only run in browser environment\n    if (true) {\n        return;\n    }\n    // Only run in production or when explicitly enabled\n    const isProduction = \"development\" === 'production';\n    const forceEnable = process.env.NEXT_PUBLIC_ENABLE_KEEP_ALIVE === 'true';\n    if (!isProduction && !forceEnable) {\n        console.log('🔇 Keep-alive disabled in development (set NEXT_PUBLIC_ENABLE_KEEP_ALIVE=true to enable)');\n        return;\n    }\n    if (isEnabled) {\n        console.log('🔇 Keep-alive already running');\n        return;\n    }\n    console.log('🚀 Starting keep-alive service (ping every 10 minutes)');\n    // Initial ping after 30 seconds\n    setTimeout(pingServer, 30000);\n    // Set up recurring pings\n    pingInterval = setInterval(pingServer, PING_INTERVAL);\n    isEnabled = true;\n    // Stop pings when page is hidden/closed to save resources\n    const handleVisibilityChange = ()=>{\n        if (document.hidden) {\n            console.log('🔇 Page hidden, pausing keep-alive');\n            if (pingInterval) {\n                clearInterval(pingInterval);\n                pingInterval = null;\n            }\n        } else {\n            console.log('👁️ Page visible, resuming keep-alive');\n            if (!pingInterval && isEnabled) {\n                pingInterval = setInterval(pingServer, PING_INTERVAL);\n            }\n        }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    // Cleanup on beforeunload\n    window.addEventListener('beforeunload', stopKeepAlive);\n}\n/**\n * Stop the keep-alive ping service\n */ function stopKeepAlive() {\n    if (pingInterval) {\n        clearInterval(pingInterval);\n        pingInterval = null;\n    }\n    isEnabled = false;\n    console.log('🛑 Keep-alive service stopped');\n}\n/**\n * Get the current status of the keep-alive service\n */ function getKeepAliveStatus() {\n    return {\n        enabled: isEnabled,\n        interval: PING_INTERVAL\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL2tlZXBBbGl2ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0NBR0MsR0FFRCxJQUFJQSxlQUFzQztBQUMxQyxJQUFJQyxZQUFZO0FBRWhCLE1BQU1DLGdCQUFnQixLQUFLLEtBQUssTUFBTSxhQUFhO0FBQ25ELE1BQU1DLGlCQUFpQjtBQUV2QixlQUFlQztJQUNiLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDO1FBRVosTUFBTUMsV0FBVyxNQUFNQyxNQUFNTCxnQkFBZ0I7WUFDM0NNLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxpQkFBaUI7WUFDbkI7WUFDQUMsT0FBTztRQUNUO1FBRUEsSUFBSUosU0FBU0ssRUFBRSxFQUFFO1lBQ2ZQLFFBQVFDLEdBQUcsQ0FBQztRQUNkLE9BQU87WUFDTEQsUUFBUUMsR0FBRyxDQUFDLENBQUMsd0JBQXdCLEVBQUVDLFNBQVNNLE1BQU0sRUFBRTtRQUMxRDtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkVCxRQUFRQyxHQUFHLENBQUMseUJBQXlCUSxpQkFBaUJDLFFBQVFELE1BQU1FLE9BQU8sR0FBRztJQUM5RSw2REFBNkQ7SUFDL0Q7QUFDRjtBQUVBOzs7Q0FHQyxHQUNNLFNBQVNDO0lBQ2Qsa0NBQWtDO0lBQ2xDLElBQUksSUFBNkIsRUFBRTtRQUNqQztJQUNGO0lBRUEsb0RBQW9EO0lBQ3BELE1BQU1DLGVBQWVDLGtCQUF5QjtJQUM5QyxNQUFNQyxjQUFjRCxRQUFRRSxHQUFHLENBQUNDLDZCQUE2QixLQUFLO0lBRWxFLElBQUksQ0FBQ0osZ0JBQWdCLENBQUNFLGFBQWE7UUFDakNmLFFBQVFDLEdBQUcsQ0FBQztRQUNaO0lBQ0Y7SUFFQSxJQUFJTCxXQUFXO1FBQ2JJLFFBQVFDLEdBQUcsQ0FBQztRQUNaO0lBQ0Y7SUFFQUQsUUFBUUMsR0FBRyxDQUFDO0lBRVosZ0NBQWdDO0lBQ2hDaUIsV0FBV25CLFlBQVk7SUFFdkIseUJBQXlCO0lBQ3pCSixlQUFld0IsWUFBWXBCLFlBQVlGO0lBQ3ZDRCxZQUFZO0lBRVosMERBQTBEO0lBQzFELE1BQU13Qix5QkFBeUI7UUFDN0IsSUFBSUMsU0FBU0MsTUFBTSxFQUFFO1lBQ25CdEIsUUFBUUMsR0FBRyxDQUFDO1lBQ1osSUFBSU4sY0FBYztnQkFDaEI0QixjQUFjNUI7Z0JBQ2RBLGVBQWU7WUFDakI7UUFDRixPQUFPO1lBQ0xLLFFBQVFDLEdBQUcsQ0FBQztZQUNaLElBQUksQ0FBQ04sZ0JBQWdCQyxXQUFXO2dCQUM5QkQsZUFBZXdCLFlBQVlwQixZQUFZRjtZQUN6QztRQUNGO0lBQ0Y7SUFFQXdCLFNBQVNHLGdCQUFnQixDQUFDLG9CQUFvQko7SUFFOUMsMEJBQTBCO0lBQzFCSyxPQUFPRCxnQkFBZ0IsQ0FBQyxnQkFBZ0JFO0FBQzFDO0FBRUE7O0NBRUMsR0FDTSxTQUFTQTtJQUNkLElBQUkvQixjQUFjO1FBQ2hCNEIsY0FBYzVCO1FBQ2RBLGVBQWU7SUFDakI7SUFDQUMsWUFBWTtJQUNaSSxRQUFRQyxHQUFHLENBQUM7QUFDZDtBQUVBOztDQUVDLEdBQ00sU0FBUzBCO0lBQ2QsT0FBTztRQUNMQyxTQUFTaEM7UUFDVGlDLFVBQVVoQztJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL2xpYi9rZWVwQWxpdmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBLZWVwLWFsaXZlIHNlcnZpY2UgdG8gcHJldmVudCBSYWlsd2F5IHNlcnZlciBjb2xkIHN0YXJ0c1xuICogUGluZ3MgdGhlIHNlcnZlciBldmVyeSAxMCBtaW51dGVzIHRvIGtlZXAgaXQgd2FybVxuICovXG5cbmxldCBwaW5nSW50ZXJ2YWw6IE5vZGVKUy5UaW1lb3V0IHwgbnVsbCA9IG51bGw7XG5sZXQgaXNFbmFibGVkID0gZmFsc2U7XG5cbmNvbnN0IFBJTkdfSU5URVJWQUwgPSAxMCAqIDYwICogMTAwMDsgLy8gMTAgbWludXRlc1xuY29uc3QgQVBJX0hFQUxUSF9VUkwgPSAnaHR0cHM6Ly9rYWktc2lnbi1wcm9kdWN0aW9uLnVwLnJhaWx3YXkuYXBwL2FwaS9oZWFsdGgnO1xuXG5hc3luYyBmdW5jdGlvbiBwaW5nU2VydmVyKCk6IFByb21pc2U8dm9pZD4ge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKCfwn4+TIFBpbmdpbmcgc2VydmVyIHRvIGtlZXAgaXQgd2FybS4uLicpO1xuICAgIFxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX0hFQUxUSF9VUkwsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlJyxcbiAgICAgIH0sXG4gICAgICBjYWNoZTogJ25vLXN0b3JlJyxcbiAgICB9KTtcblxuICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgY29uc29sZS5sb2coJ+KchSBTZXJ2ZXIgcGluZyBzdWNjZXNzZnVsJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKGDimqDvuI8gU2VydmVyIHBpbmcgcmV0dXJuZWQgJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKCfinYwgU2VydmVyIHBpbmcgZmFpbGVkOicsIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InKTtcbiAgICAvLyBEb24ndCB0aHJvdyAtIHdlIGRvbid0IHdhbnQgcGluZyBmYWlsdXJlcyB0byBicmVhayB0aGUgYXBwXG4gIH1cbn1cblxuLyoqXG4gKiBTdGFydCB0aGUga2VlcC1hbGl2ZSBwaW5nIHNlcnZpY2VcbiAqIE9ubHkgcnVucyBpbiBwcm9kdWN0aW9uIGFuZCB3aGVuIHdpbmRvdyBpcyBhdmFpbGFibGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0S2VlcEFsaXZlKCk6IHZvaWQge1xuICAvLyBPbmx5IHJ1biBpbiBicm93c2VyIGVudmlyb25tZW50XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIE9ubHkgcnVuIGluIHByb2R1Y3Rpb24gb3Igd2hlbiBleHBsaWNpdGx5IGVuYWJsZWRcbiAgY29uc3QgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbiAgY29uc3QgZm9yY2VFbmFibGUgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19FTkFCTEVfS0VFUF9BTElWRSA9PT0gJ3RydWUnO1xuICBcbiAgaWYgKCFpc1Byb2R1Y3Rpb24gJiYgIWZvcmNlRW5hYmxlKSB7XG4gICAgY29uc29sZS5sb2coJ/CflIcgS2VlcC1hbGl2ZSBkaXNhYmxlZCBpbiBkZXZlbG9wbWVudCAoc2V0IE5FWFRfUFVCTElDX0VOQUJMRV9LRUVQX0FMSVZFPXRydWUgdG8gZW5hYmxlKScpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpc0VuYWJsZWQpIHtcbiAgICBjb25zb2xlLmxvZygn8J+UhyBLZWVwLWFsaXZlIGFscmVhZHkgcnVubmluZycpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnNvbGUubG9nKCfwn5qAIFN0YXJ0aW5nIGtlZXAtYWxpdmUgc2VydmljZSAocGluZyBldmVyeSAxMCBtaW51dGVzKScpO1xuICBcbiAgLy8gSW5pdGlhbCBwaW5nIGFmdGVyIDMwIHNlY29uZHNcbiAgc2V0VGltZW91dChwaW5nU2VydmVyLCAzMDAwMCk7XG4gIFxuICAvLyBTZXQgdXAgcmVjdXJyaW5nIHBpbmdzXG4gIHBpbmdJbnRlcnZhbCA9IHNldEludGVydmFsKHBpbmdTZXJ2ZXIsIFBJTkdfSU5URVJWQUwpO1xuICBpc0VuYWJsZWQgPSB0cnVlO1xuXG4gIC8vIFN0b3AgcGluZ3Mgd2hlbiBwYWdlIGlzIGhpZGRlbi9jbG9zZWQgdG8gc2F2ZSByZXNvdXJjZXNcbiAgY29uc3QgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSA9ICgpID0+IHtcbiAgICBpZiAoZG9jdW1lbnQuaGlkZGVuKSB7XG4gICAgICBjb25zb2xlLmxvZygn8J+UhyBQYWdlIGhpZGRlbiwgcGF1c2luZyBrZWVwLWFsaXZlJyk7XG4gICAgICBpZiAocGluZ0ludGVydmFsKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwocGluZ0ludGVydmFsKTtcbiAgICAgICAgcGluZ0ludGVydmFsID0gbnVsbDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ/CfkYHvuI8gUGFnZSB2aXNpYmxlLCByZXN1bWluZyBrZWVwLWFsaXZlJyk7XG4gICAgICBpZiAoIXBpbmdJbnRlcnZhbCAmJiBpc0VuYWJsZWQpIHtcbiAgICAgICAgcGluZ0ludGVydmFsID0gc2V0SW50ZXJ2YWwocGluZ1NlcnZlciwgUElOR19JTlRFUlZBTCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlKTtcblxuICAvLyBDbGVhbnVwIG9uIGJlZm9yZXVubG9hZFxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgc3RvcEtlZXBBbGl2ZSk7XG59XG5cbi8qKlxuICogU3RvcCB0aGUga2VlcC1hbGl2ZSBwaW5nIHNlcnZpY2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0b3BLZWVwQWxpdmUoKTogdm9pZCB7XG4gIGlmIChwaW5nSW50ZXJ2YWwpIHtcbiAgICBjbGVhckludGVydmFsKHBpbmdJbnRlcnZhbCk7XG4gICAgcGluZ0ludGVydmFsID0gbnVsbDtcbiAgfVxuICBpc0VuYWJsZWQgPSBmYWxzZTtcbiAgY29uc29sZS5sb2coJ/Cfm5EgS2VlcC1hbGl2ZSBzZXJ2aWNlIHN0b3BwZWQnKTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgc3RhdHVzIG9mIHRoZSBrZWVwLWFsaXZlIHNlcnZpY2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEtlZXBBbGl2ZVN0YXR1cygpOiB7IGVuYWJsZWQ6IGJvb2xlYW47IGludGVydmFsOiBudW1iZXIgfSB7XG4gIHJldHVybiB7XG4gICAgZW5hYmxlZDogaXNFbmFibGVkLFxuICAgIGludGVydmFsOiBQSU5HX0lOVEVSVkFMXG4gIH07XG59Il0sIm5hbWVzIjpbInBpbmdJbnRlcnZhbCIsImlzRW5hYmxlZCIsIlBJTkdfSU5URVJWQUwiLCJBUElfSEVBTFRIX1VSTCIsInBpbmdTZXJ2ZXIiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJjYWNoZSIsIm9rIiwic3RhdHVzIiwiZXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiLCJzdGFydEtlZXBBbGl2ZSIsImlzUHJvZHVjdGlvbiIsInByb2Nlc3MiLCJmb3JjZUVuYWJsZSIsImVudiIsIk5FWFRfUFVCTElDX0VOQUJMRV9LRUVQX0FMSVZFIiwic2V0VGltZW91dCIsInNldEludGVydmFsIiwiaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSIsImRvY3VtZW50IiwiaGlkZGVuIiwiY2xlYXJJbnRlcnZhbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ3aW5kb3ciLCJzdG9wS2VlcEFsaXZlIiwiZ2V0S2VlcEFsaXZlU3RhdHVzIiwiZW5hYmxlZCIsImludGVydmFsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/keepAlive.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/../node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/../node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3V0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNKO0FBRWpDLFNBQVNFLEdBQUcsR0FBR0MsTUFBb0I7SUFDeEMsT0FBT0YsdURBQU9BLENBQUNELDBDQUFJQSxDQUFDRztBQUN0QiIsInNvdXJjZXMiOlsiL1VzZXJzL211aGFtbWFkYXVzaGlqcmkvRGVza3RvcC9naXQvS2FpLVNpZ24tQnVpbGRlci9mcm9udGVuZC9zcmMvbGliL3V0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsc3gsIHR5cGUgQ2xhc3NWYWx1ZSB9IGZyb20gXCJjbHN4XCJcbmltcG9ydCB7IHR3TWVyZ2UgfSBmcm9tIFwidGFpbHdpbmQtbWVyZ2VcIlxuXG5leHBvcnQgZnVuY3Rpb24gY24oLi4uaW5wdXRzOiBDbGFzc1ZhbHVlW10pIHtcbiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKVxufVxuIl0sIm5hbWVzIjpbImNsc3giLCJ0d01lcmdlIiwiY24iLCJpbnB1dHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/utils.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/web3Service.ts":
/*!********************************!*\
  !*** ./src/lib/web3Service.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3Service: () => (/* binding */ Web3Service),\n/* harmony export */   web3Service: () => (/* binding */ web3Service)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/providers/provider-browser.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/contract/contract.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/crypto/keccak.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/utils/utf8.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/hash/solidity.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/constants/addresses.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/hash/id.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/utils/data.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/utils/maths.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ethers */ \"(ssr)/../node_modules/ethers/lib.esm/utils/units.js\");\n// @ts-nocheck\n// TypeScript is disabled in this file due to dynamic contract interactions across\n// multiple KaiSign versions and ethers v6 function APIs (e.g., .staticCall, .estimateGas\n// on function objects). Strong typing here caused noisy, non-actionable errors and\n// duplicate API variants; runtime behavior is preserved.\n\n// ABI for the KaiSign V1 contract - Updated to match actual contract interface\nconst CONTRACT_ABI = [\n    {\n        \"inputs\": [],\n        \"name\": \"minBond\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"commitment\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"targetChainId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"commitSpec\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"commitmentId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"blobHash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"metadataHash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"nonce\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"revealSpec\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"proposeSpec\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"assertSpecValid\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"assertSpecInvalid\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"targetChainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"duration\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"description\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"createIncentive\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"user\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getUserIncentives\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32[]\",\n                \"name\": \"\",\n                \"type\": \"bytes32[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"incentives\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reserved\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"deadline\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"createdAt\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isActive\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"description\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"commitmentId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"commitments\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"committer\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"commitTimestamp\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"reserved1\",\n                \"type\": \"uint32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isRevealed\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint80\",\n                \"name\": \"bondAmount\",\n                \"type\": \"uint80\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"reserved\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"revealDeadline\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSpecsByContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32[]\",\n                \"name\": \"\",\n                \"type\": \"bytes32[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"specs\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"createdTimestamp\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"proposedTimestamp\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"uint80\",\n                \"name\": \"totalBonds\",\n                \"type\": \"uint80\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"reserved\",\n                \"type\": \"uint32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"blobHash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"questionId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"handleResult\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"claimActiveTokenIncentive\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"settleBonds\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"ipfs\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"getStatus\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"ipfs\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"isAccepted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"ipfs\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"getCreatedTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"targetChainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"duration\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"description\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"createIncentive\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSpecsByContract\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32[]\",\n                \"name\": \"\",\n                \"type\": \"bytes32[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getContractSpecCount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"specs\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"createdTimestamp\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"proposedTimestamp\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"bondsSettled\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint48\",\n                \"name\": \"totalBonds\",\n                \"type\": \"uint48\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"reserved\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"ipfs\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"questionId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"commitments\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"committer\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"commitTimestamp\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"reserved1\",\n                \"type\": \"uint32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isRevealed\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint80\",\n                \"name\": \"bondAmount\",\n                \"type\": \"uint80\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"reserved\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"revealDeadline\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"incentives\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"amount\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"deadline\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"createdAt\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isClaimed\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isActive\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint80\",\n                \"name\": \"reserved\",\n                \"type\": \"uint80\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"description\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"realityETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"treasury\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"committer\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"bytes32\",\n                \"name\": \"commitmentId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bondAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint64\",\n                \"name\": \"revealDeadline\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"LogCommitSpec\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"token\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint64\",\n                \"name\": \"deadline\",\n                \"type\": \"uint64\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"description\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"LogIncentiveCreated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"blobHash\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes32\",\n                \"name\": \"incentiveId\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"LogCreateSpec\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"creator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"bytes32\",\n                \"name\": \"commitmentId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"blobHash\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"targetContract\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LogRevealSpec\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"user\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"bytes32\",\n                \"name\": \"specID\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes32\",\n                \"name\": \"questionId\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bond\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LogProposeSpec\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"bondsSettled\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\n// Reality.eth contract ABI (minimal for bond calculations)\nconst REALITY_ETH_ABI = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"question_id\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"getBond\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"question_id\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"getMinBond\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"questions\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"content_hash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"arbitrator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"opening_ts\",\n                \"type\": \"uint32\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"timeout\",\n                \"type\": \"uint32\"\n            },\n            {\n                \"internalType\": \"uint32\",\n                \"name\": \"finalize_ts\",\n                \"type\": \"uint32\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"is_pending_arbitration\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bounty\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"best_answer\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"history_hash\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bond\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"min_bond\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\n// Reality.eth contract address (Sepolia by default)\nconst REALITY_ETH_ADDRESS = process.env.NEXT_PUBLIC_REALITY_ETH_ADDRESS || \"0xaf33DcB6E8c5c4D9dDF579f53031b514d19449CA\";\n// Contract address (configurable via NEXT_PUBLIC_KAISIGN_CONTRACT_ADDRESS; falls back to known Sepolia addr)\nconst RAW_CONTRACT_ADDRESS = process.env.NEXT_PUBLIC_KAISIGN_CONTRACT_ADDRESS || \"0x4dFEA0C2B472a14cD052a8f9DF9f19fa5CF03719\";\n// Chain ID (configurable via NEXT_PUBLIC_CHAIN_ID, defaults to Sepolia)\nconst SEPOLIA_CHAIN_ID = Number(process.env.NEXT_PUBLIC_CHAIN_ID || 11155111);\nclass Web3Service {\n    /**\n   * Get the provider instance\n   */ getProvider() {\n        return this.provider;\n    }\n    /**\n   * Get the contract instance\n   */ getContract() {\n        return this.contract;\n    }\n    /**\n   * Connect to MetaMask and initialize the contract\n   */ async connect() {\n        if (true) {\n            throw new Error(\"This function can only be called on the client side.\");\n        }\n        if (!window.ethereum) {\n            throw new Error(\"MetaMask is not installed. Please install MetaMask to continue.\");\n        }\n        try {\n            // Request account access\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            if (!accounts || accounts.length === 0) {\n                throw new Error(\"No accounts found. Please make sure MetaMask is unlocked.\");\n            }\n            // Initialize provider and signer\n            this.provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.BrowserProvider(window.ethereum);\n            this.signer = await this.provider.getSigner();\n            // Initialize contract (network check moved to individual functions that need it)\n            const kaisignContract = new ethers__WEBPACK_IMPORTED_MODULE_1__.Contract(RAW_CONTRACT_ADDRESS, CONTRACT_ABI, this.signer);\n            // Assign to instance variables after successful initialization\n            this.contract = kaisignContract;\n            // Initialize Reality.eth contract now for read calls (bond info)\n            this.realityEthContract = new ethers__WEBPACK_IMPORTED_MODULE_1__.Contract(REALITY_ETH_ADDRESS, REALITY_ETH_ABI, this.provider);\n            return accounts[0];\n        } catch (error) {\n            console.error(\"Error connecting to MetaMask:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Check if we're on the Sepolia network\n   */ async checkNetwork() {\n        if (!this.provider) return false;\n        try {\n            const network = await this.provider.getNetwork();\n            return Number(network.chainId) === SEPOLIA_CHAIN_ID;\n        } catch (error) {\n            console.error(\"Error checking network:\", error);\n            return false;\n        }\n    }\n    /**\n   * Get the minimum bond amount required for a new question from the KaiSign contract\n   */ async getMinBond() {\n        try {\n            if (!this.contract) {\n                throw new Error(\"Contract not initialized. Please connect first.\");\n            }\n            const minBond = await this.contract.minBond();\n            return minBond;\n        } catch (error) {\n            console.error(\"Error getting minimum bond from contract:\", error);\n            // Fallback to a reasonable default if contract call fails\n            const fallbackBond = BigInt(\"100000000000000\"); // 0.0001 ETH\n            return fallbackBond;\n        }\n    }\n    /**\n   * Calculate the required bond for answering a specific question\n   * Based on Reality.eth rules: first answer needs min_bond, subsequent answers need 2x previous bond\n   */ async getRequiredBondForQuestion(questionId) {\n        try {\n            if (!this.realityEthContract) {\n                if (!this.provider) {\n                    throw new Error(\"Wallet not connected. Please connect first.\");\n                }\n                this.realityEthContract = new ethers__WEBPACK_IMPORTED_MODULE_1__.Contract(REALITY_ETH_ADDRESS, REALITY_ETH_ABI, this.provider);\n            }\n            // Get the current bond for this question\n            const currentBond = await this.realityEthContract.getBond(questionId);\n            if (currentBond === BigInt(0)) {\n                // No previous answers, use minimum bond\n                const minBond = await this.realityEthContract.getMinBond(questionId);\n                return minBond;\n            } else {\n                // Previous answers exist, need to double the current bond\n                const requiredBond = currentBond * BigInt(2);\n                return requiredBond;\n            }\n        } catch (error) {\n            console.error(\"Error calculating required bond for question:\", error);\n            // Fallback to contract minimum bond\n            return await this.getMinBond();\n        }\n    }\n    /**\n   * Get bond information for a question (current bond, minimum bond, and required next bond)\n   * In V1, we need to check if a spec exists first\n   */ async getBondInfo(ipfsHash1) {\n        try {\n            if (!this.contract) {\n                throw new Error(\"Contract not initialized. Please connect first.\");\n            }\n            if (!this.realityEthContract) {\n                if (!this.provider) {\n                    throw new Error(\"Wallet not connected. Please connect first.\");\n                }\n                this.realityEthContract = new ethers__WEBPACK_IMPORTED_MODULE_1__.Contract(REALITY_ETH_ADDRESS, REALITY_ETH_ABI, this.provider);\n            }\n            // Generate specID from identifier (now blob versioned hash)\n            const specId = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes(ipfsHash1));\n            try {\n                // Check if spec exists and get its data\n                const spec = await this.contract.specs(specId);\n                const questionId = spec.questionId;\n                if (questionId === \"0x0000000000000000000000000000000000000000000000000000000000000000\") {\n                    // Question doesn't exist yet, return contract minimum bond with safety margin\n                    const contractMinBond = await this.getMinBond();\n                    const requiredBond = BigInt(\"20000000000000000\"); // Use 0.02 ETH instead of calculated amount\n                    return {\n                        currentBond: BigInt(0),\n                        minBond: contractMinBond,\n                        requiredNextBond: requiredBond,\n                        hasAnswers: false\n                    };\n                }\n                // Get bond information from Reality.eth\n                const currentBond = await this.realityEthContract.getBond(questionId);\n                const minBond = await this.realityEthContract.getMinBond(questionId);\n                const hasAnswers = currentBond > BigInt(0);\n                const baseRequiredBond = hasAnswers ? currentBond * BigInt(2) : minBond;\n                // Add safety margin for all bonds\n                const requiredNextBond = BigInt(\"15000000000000000\"); // Use 0.015 ETH instead of calculated amount\n                return {\n                    currentBond,\n                    minBond,\n                    requiredNextBond,\n                    hasAnswers\n                };\n            } catch (specError) {\n                // Spec doesn't exist yet, return contract minimum bond with safety margin\n                const contractMinBond = await this.getMinBond();\n                const requiredBond = BigInt(\"20000000000000000\"); // Use 0.02 ETH instead of calculated amount\n                return {\n                    currentBond: BigInt(0),\n                    minBond: contractMinBond,\n                    requiredNextBond: requiredBond,\n                    hasAnswers: false\n                };\n            }\n        } catch (error) {\n            console.error(\"Error getting bond info:\", error);\n            // Fallback to contract minimum bond with safety margin\n            const contractMinBond = await this.getMinBond();\n            const requiredBond = contractMinBond + contractMinBond / BigInt(10); // Add 10% safety margin\n            return {\n                currentBond: BigInt(0),\n                minBond: contractMinBond,\n                requiredNextBond: requiredBond,\n                hasAnswers: false\n            };\n        }\n    }\n    /**\n   * Commit spec using V1 contract (step 1 of commit-reveal pattern)\n   */ // The commitSpec method no longer takes an incentiveId. Incentives are created ahead\n    // of time and automatically assigned when a spec is accepted. The function signature\n    // accepts blobHash, bondAmount, an optional targetContract and optional chainId.\n    async commitSpec(blobHash, bondAmount, targetContract, targetChainId) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // Make sure we're on the Sepolia network\n            // Network check removed - let users connect on any network\n            // Generate a proper nonce for the commitment\n            const nonce = BigInt(Math.floor(Math.random() * 1000000));\n            // The blobHash parameter is actually the metadataHash (hash of JSON)\n            // This is a naming issue - it should be called metadataHash\n            const metadataHash = blobHash;\n            // Create the commitment using metadataHash and nonce (as per contract)\n            const commitment = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.solidityPacked([\n                \"bytes32\",\n                \"uint256\"\n            ], [\n                metadataHash,\n                nonce\n            ]));\n            // The V1 contract requires the target contract to exist on Sepolia (extcodesize check)\n            // For ERC7730 specs, we want to allow any contract address (even from other chains)\n            // But V1 contract validates existence, so we need a deployed contract on Sepolia\n            let target = targetContract;\n            // Known working Sepolia contracts for testing\n            const validSepoliaContracts = [\n                RAW_CONTRACT_ADDRESS,\n                \"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\",\n                \"0x779877A7B0D9E8603169DdbD7836e478b4624789\"\n            ];\n            if (!target || target.trim() === \"\" || !target.match(/^0x[a-fA-F0-9]{40}$/)) {\n                // Use KaiSign contract as default if no valid target specified\n                target = RAW_CONTRACT_ADDRESS;\n            } else {\n                // Check if the target contract exists on Sepolia\n                try {\n                    const targetCode = await this.provider.getCode(target);\n                    if (targetCode === \"0x\") {\n                        console.warn(\"⚠️ Target contract\", target, \"does not exist on Sepolia\");\n                        console.warn(\"V1 contract requires target to exist on same network\");\n                        console.warn(\"Falling back to KaiSign contract as target\");\n                        target = RAW_CONTRACT_ADDRESS;\n                    } else {}\n                } catch (codeCheckError) {\n                    console.warn(\"Could not verify target contract existence, using KaiSign contract as fallback\");\n                    target = RAW_CONTRACT_ADDRESS;\n                }\n            }\n            // Incentives are no longer passed during commit. Any incentive will be automatically\n            // associated by the contract when a spec is accepted. Keep a zero bytes32 for\n            // compatibility in logs if needed.\n            const finalIncentiveId = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n            // Validate minimum bond requirement with safety margin\n            const contractMinBond = await this.getMinBond();\n            // Add 10% safety margin to account for platform fees and rounding\n            const requiredBond = contractMinBond + contractMinBond / BigInt(10);\n            if (bondAmount < requiredBond) {\n                throw new Error(`Insufficient bond. Required: ${(Number(requiredBond) / 10 ** 18).toFixed(5)} ETH (including safety margin for fees)`);\n            }\n            // CRITICAL: Run comprehensive diagnostics BEFORE attempting transaction\n            // For commitSpec, we don't send any value, so pass 0n for bond amount\n            await this.runPreTransactionDiagnostics(target, 0n);\n            // Additional validation: Check if contract is properly deployed and accessible\n            try {\n                const contractCode = await this.provider.getCode(RAW_CONTRACT_ADDRESS);\n                // Test a simple read function first\n                const testMinBond = await this.contract.minBond();\n                // Check if contract is paused (V1 has Pausable)\n                try {\n                    // Try to call the paused() function if it exists\n                    const pausedCall = await this.provider.call({\n                        to: RAW_CONTRACT_ADDRESS,\n                        data: \"0x5c975abb\" // paused() function selector\n                    });\n                    const isPaused = pausedCall === \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n                    if (isPaused) {\n                        throw new Error(\"Contract is currently paused\");\n                    }\n                } catch (pauseCheckError) {}\n                // Special test: Check if the target contract validation is the issue\n                const targetContractCode = await this.provider.getCode(target);\n                if (targetContractCode === \"0x\") {\n                    console.error(\"❌ FOUND THE ISSUE: Target contract has no code!\");\n                    console.error(\"The contract's extcodesize check will fail for this target.\");\n                    throw new Error(`Target contract ${target} does not exist or has no bytecode. The V1 contract requires the target contract to exist on Sepolia.`);\n                } else {}\n                // Check if treasury address is valid and can receive funds\n                try {\n                    // Get treasury address from the contract\n                    const treasurySelector = \"0x61d027b3\"; // treasury() function selector\n                    const treasuryResult = await this.provider.call({\n                        to: RAW_CONTRACT_ADDRESS,\n                        data: treasurySelector\n                    });\n                    const treasuryAddress = \"0x\" + treasuryResult.slice(-40);\n                    // Check if treasury is a valid address (not zero address)\n                    if (treasuryAddress === \"0x0000000000000000000000000000000000000000\") {\n                        console.error(\"❌ ISSUE FOUND: Treasury address is zero address!\");\n                        throw new Error(\"Treasury address is not set properly in the contract\");\n                    }\n                    // Check if treasury can receive funds (not a contract that might reject)\n                    const treasuryCode = await this.provider.getCode(treasuryAddress);\n                    if (treasuryCode.length > 2) {\n                        // Try a tiny test transfer to see if treasury can receive funds\n                        try {\n                            const testAmount = BigInt(1); // 1 wei\n                            await this.provider.call({\n                                to: treasuryAddress,\n                                value: testAmount,\n                                from: await this.signer.getAddress()\n                            });\n                        } catch (treasuryTestError) {\n                            console.error(\"❌ POSSIBLE ISSUE: Treasury might reject fund transfers:\", treasuryTestError);\n                        }\n                    } else {}\n                } catch (treasuryError) {\n                    console.error(\"Could not check treasury address:\", treasuryError);\n                }\n            } catch (contractError) {\n                console.error(\"Contract accessibility test failed:\", contractError);\n                throw contractError; // Re-throw the specific error instead of generic one\n            }\n            // Step 1: Commit\n            // Check if commitment already exists\n            try {\n                const commitmentId = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.solidityPacked([\n                    \"bytes32\",\n                    \"address\",\n                    \"address\",\n                    \"uint256\"\n                ], [\n                    commitment,\n                    await this.signer.getAddress(),\n                    target,\n                    Math.floor(Date.now() / 1000)\n                ]));\n                const existingCommitment = await this.contract.commitments(commitmentId);\n                console.log(\"Checking if commitment already exists:\", existingCommitment.committer !== ethers__WEBPACK_IMPORTED_MODULE_5__.ZeroAddress);\n                // Try a static call first to see if it would succeed\n                const staticResult = await this.contract.commitSpec.staticCall(commitment, target, targetChainId || 1);\n                console.log(\"Static call successful, proceeding with transaction\");\n            } catch (checkError) {\n                console.error(\"Pre-transaction checks failed:\", checkError);\n                // If it's a revert, try to get more info\n                if (checkError.data) {}\n                throw new Error(`Pre-transaction validation failed: ${checkError.message}`);\n            }\n            // Try manual gas estimation\n            try {\n                const gasEstimate = await this.contract.commitSpec.estimateGas(commitment, target, targetChainId || 1);\n            } catch (gasError) {\n                console.error(\"Gas estimation failed:\", gasError);\n                throw new Error(`Gas estimation failed: ${gasError.message}`);\n            }\n            const commitTx = await this.contract.commitSpec(commitment, target, targetChainId || 1);\n            const commitReceipt = await commitTx.wait();\n            // Step 2: Extract the actual commitment ID from the LogCommitSpec event\n            let commitmentId = null;\n            for (const log of commitReceipt.logs){\n                try {\n                    const parsed = this.contract.interface.parseLog(log);\n                    if (parsed && parsed.name === 'LogCommitSpec') {\n                        commitmentId = parsed.args.commitmentId;\n                        break;\n                    }\n                } catch (e) {\n                // Ignore logs that can't be parsed by our interface\n                }\n            }\n            if (!commitmentId) {\n                throw new Error(\"Could not find LogCommitSpec event in transaction logs\");\n            }\n            return {\n                commitmentId,\n                commitTxHash: commitTx.hash,\n                revealDeadline: Math.floor(Date.now() / 1000) + 3600,\n                nonce: Number(nonce),\n                commitment,\n                metadataHash\n            };\n        } catch (error) {\n            console.error(\"Error proposing spec:\", error);\n            // Enhanced error handling for V1 contract specific issues\n            if (error.message?.includes(\"missing revert data\") && !error.data) {\n                // Try a different approach - use a known good contract as target\n                const knownGoodContracts = [\n                    \"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\",\n                    \"0x779877A7B0D9E8603169DdbD7836e478b4624789\"\n                ];\n                for (const testTarget1 of knownGoodContracts){\n                    try {\n                        const testCode = await this.provider.getCode(testTarget1);\n                        if (testCode !== \"0x\") {\n                            return await this.directCommitReveal(ipfsHash, bondAmount, testTarget1);\n                        }\n                    } catch (testError) {}\n                }\n                try {\n                    return await this.directCommitReveal(ipfsHash, bondAmount, RAW_CONTRACT_ADDRESS);\n                } catch (directError) {\n                    console.error(\"Direct transaction also failed:\", directError);\n                // Continue with original error handling\n                }\n            }\n            // Try to decode custom error\n            if (error.reason) {\n                console.error(\"Contract revert reason:\", error.reason);\n            }\n            if (error.data) {\n                console.error(\"Contract error data:\", error.data);\n                // Try to decode known custom errors from the V1 contract\n                try {\n                    const errorSignatures = {\n                        \"0x4ca88867\": \"AlreadyProposed()\",\n                        \"0xfb8f41b2\": \"NotProposed()\",\n                        \"0x47df8ce0\": \"InsufficientBond()\",\n                        \"0xd2e74c4c\": \"InsufficientIncentive()\",\n                        \"0x6efc7261\": \"InvalidContract()\",\n                        \"0xed592624\": \"ContractNotFound()\",\n                        \"0x5fd9a6de\": \"InvalidIPFS()\",\n                        \"0x0982e9b5\": \"CommitmentNotFound()\",\n                        \"0x6e9ad0b3\": \"CommitmentExpired()\",\n                        \"0x4221d9dc\": \"CommitmentAlreadyRevealed()\",\n                        \"0x8baa579f\": \"InvalidReveal()\",\n                        \"0xf1a2b62a\": \"NotFinalized()\",\n                        \"0x9cf8e11f\": \"AlreadySettled()\",\n                        \"0xa7648c19\": \"NoIncentiveToClaim()\",\n                        \"0xc3e2a8b1\": \"IncentiveExpired()\",\n                        \"0x82b42900\": \"Unauthorized()\"\n                    };\n                    const errorSelector = error.data.slice(0, 10);\n                    const customError = errorSignatures[errorSelector];\n                    if (customError) {\n                        throw new Error(`Contract reverted with: ${customError}`);\n                    }\n                } catch (decodeError) {\n                    console.error(\"Could not decode error:\", decodeError);\n                }\n            }\n            // If we can't decode it, check for common issues\n            if (error.message?.includes(\"insufficient funds\") || error.message?.includes(\"InsufficientBond\")) {\n                throw new Error(\"Insufficient bond amount. Please check the minimum bond requirement.\");\n            }\n            if (error.message?.includes(\"ContractNotFound\")) {\n                throw new Error(`The target contract ${targetContract || 'specified'} does not exist on Sepolia testnet. The V1 contract requires target contracts to be deployed on the same network. Please use a valid Sepolia contract address or leave empty for general specifications.`);\n            }\n            if (error.message?.includes(\"InvalidContract\")) {\n                throw new Error(\"Invalid target contract address format.\");\n            }\n            throw new Error(`Transaction failed: ${error.message || 'Unknown error'}`);\n        }\n    }\n    /**\n   * Reveal spec using V1 contract (step 2 of commit-reveal pattern)\n   */ async revealSpec(commitmentId, blobHash, metadataHash, nonce, bondAmount) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            console.log(\"revealSpec called with:\", {\n                commitmentId,\n                blobHash,\n                metadataHash,\n                nonce,\n                bondAmount: bondAmount.toString()\n            });\n            // Debug: Check what the contract has stored for this commitment\n            try {\n                const storedCommitment = await this.contract.commitments(commitmentId);\n                console.log(\"Stored commitment data:\", {\n                    committer: storedCommitment[0],\n                    commitTimestamp: storedCommitment[1].toString(),\n                    reserved1: storedCommitment[2].toString(),\n                    targetContract: storedCommitment[3],\n                    isRevealed: storedCommitment[4],\n                    bondAmount: storedCommitment[5].toString(),\n                    reserved: storedCommitment[6].toString(),\n                    revealDeadline: storedCommitment[7].toString(),\n                    chainId: storedCommitment[8].toString(),\n                    incentiveId: storedCommitment[9]\n                });\n                // Check if we're the right committer\n                const ourAddress = await this.signer.getAddress();\n                console.log(\"Our address:\", ourAddress);\n                console.log(\"Committer address:\", storedCommitment[0]);\n                // Check if commitment expired\n                const currentTime = Math.floor(Date.now() / 1000);\n                const revealDeadline = Number(storedCommitment[7]);\n                console.log(\"Current time:\", currentTime);\n                console.log(\"Reveal deadline:\", revealDeadline);\n                if (currentTime > revealDeadline) {\n                    throw new Error(\"Commitment has expired. Please create a new commitment.\");\n                }\n                // Let's verify what commitment the contract expects\n                const expectedCommitment = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.solidityPacked([\n                    \"bytes32\",\n                    \"uint256\"\n                ], [\n                    metadataHash,\n                    BigInt(nonce)\n                ]));\n                console.log(\"Expected commitment hash:\", expectedCommitment);\n                // Reconstruct the commitment ID as the contract would\n                const reconstructedCommitmentId = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.solidityPacked([\n                    \"bytes32\",\n                    \"address\",\n                    \"address\",\n                    \"uint256\",\n                    \"uint64\"\n                ], [\n                    expectedCommitment,\n                    storedCommitment[0],\n                    storedCommitment[3],\n                    storedCommitment[8],\n                    storedCommitment[1]\n                ]));\n                console.log(\"Reconstructed commitment ID:\", reconstructedCommitmentId);\n                console.log(\"Provided commitment ID:\", commitmentId);\n                console.log(\"Do they match?\", reconstructedCommitmentId === commitmentId);\n                if (reconstructedCommitmentId !== commitmentId) {\n                    console.error(\"Commitment ID mismatch! The nonce or metadata hash doesn't match what was used during commit.\");\n                    console.log(\"This commitment was created with a different nonce or metadata hash.\");\n                    console.log(\"Please ensure you're using the exact same nonce that was returned during commit.\");\n                }\n            } catch (debugError) {\n                console.log(\"Debug error (non-critical):\", debugError);\n            }\n            // Try a static call first to see what exactly fails\n            try {\n                await this.contract.revealSpec.staticCall(commitmentId, blobHash, metadataHash, BigInt(nonce), {\n                    value: bondAmount\n                });\n            } catch (staticError) {}\n            const revealTx = await this.contract.revealSpec(commitmentId, blobHash, metadataHash, BigInt(nonce), {\n                value: bondAmount\n            });\n            const revealReceipt = await revealTx.wait();\n            return revealTx.hash;\n        } catch (error) {\n            console.error(\"Error revealing spec:\", error);\n            throw new Error(`Reveal failed: ${error.message || 'Unknown error'}`);\n        }\n    }\n    /**\n   * Complete submit flow (for backward compatibility)\n   */ async submitSpec(blobHash, bondAmount, targetContract, targetChainId) {\n        // The submitSpec convenience method commits then immediately reveals the spec.\n        // Incentives are no longer passed as part of commit.\n        const commitResult = await this.commitSpec(blobHash, bondAmount, targetContract, targetChainId);\n        return await this.revealSpec(commitResult.commitmentId, blobHash, commitResult.metadataHash, commitResult.nonce, bondAmount);\n    }\n    /**\n   * Get the questionId from the contract for a given IPFS hash\n   * In V1, we need to find the specID first, then get the questionId from the spec\n   */ async getQuestionId(ipfsHash1) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // Generate specID from the blob versioned hash\n            const specId = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes(ipfsHash1));\n            // Get the spec data\n            const spec = await this.contract.specs(specId);\n            const questionId = spec.questionId;\n            return questionId;\n        } catch (error) {\n            console.error(\"Error getting questionId:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get the current status of a specification from the contract\n   * Returns: 0 = Submitted, 1 = Accepted, 2 = Rejected\n   */ async getSpecStatus(ipfsHash1) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // We know contract is not null here\n            const status = await this.contract.getStatus(ipfsHash1);\n            return Number(status);\n        } catch (error) {\n            console.error(\"Error getting spec status:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Check if a specification is accepted\n   */ async isSpecAccepted(ipfsHash1) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // We know contract is not null here\n            const isAccepted = await this.contract.isAccepted(ipfsHash1);\n            return isAccepted;\n        } catch (error) {\n            console.error(\"Error checking if spec is accepted:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Handle the result of a Reality.eth question by calling the contract's handleResult function\n   */ async handleResult(ipfsHash1) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // Make sure we're on the Sepolia network\n            // Network check removed - let users connect on any network\n            // Generate specID from IPFS hash\n            const specId = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes(ipfsHash1));\n            // We know contract is not null here\n            const tx = await this.contract.handleResult(specId);\n            // Wait for transaction to be confirmed\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error handling result:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get the IPFS hash from the contract for a given specID\n   */ async getIPFSByHash(specID) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // In V1, get the spec data and extract IPFS\n            const spec = await this.contract.specs(specID);\n            const ipfsHash1 = spec.ipfs;\n            return ipfsHash1;\n        } catch (error) {\n            console.error(\"Error getting IPFS hash:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Create an incentive for a target contract (V1 feature)\n   */ async createIncentive(targetContract, targetChainId, amount, duration, description) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            const tx = await this.contract.createIncentive(targetContract, targetChainId, amount, duration, description, {\n                value: amount\n            });\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error creating incentive:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get specs by contract address (V1 feature)\n   */ async getSpecsByContract(contractAddress, chainId = 11155111) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            const specIds = await this.contract.getSpecsByContract(contractAddress, chainId);\n            return specIds;\n        } catch (error) {\n            console.error(\"Error getting specs by contract:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get ALL specs for a user by querying SpecRevealed events\n   */ async getAllUserSpecsByEvents(userAddress) {\n        try {\n            if (!this.contract || !this.provider) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // Get recent blocks to search for events\n            const currentBlock = await this.provider.getBlockNumber();\n            const fromBlock = Math.max(0, currentBlock - 50000); // Last ~7 days on mainnet\n            // Query SpecRevealed events for this user\n            const filter = this.contract.filters.SpecRevealed(null, userAddress, null);\n            const events = await this.contract.queryFilter(filter, fromBlock, currentBlock);\n            const userSpecs = [];\n            for (const event of events){\n                if (event.args && event.args.specId) {\n                    const specId = event.args.specId;\n                    userSpecs.push(specId);\n                }\n            }\n            // Also check LogRevealSpec events (older format)\n            try {\n                const logRevealFilter = this.contract.filters.LogRevealSpec(userAddress, null, null, null);\n                const logRevealEvents = await this.contract.queryFilter(logRevealFilter, fromBlock, currentBlock);\n                for (const event of logRevealEvents){\n                    if (event.args && event.args.specID) {\n                        const specId = event.args.specID;\n                        if (!userSpecs.includes(specId)) {\n                            userSpecs.push(specId);\n                        }\n                    }\n                }\n            } catch (logError) {}\n            return userSpecs;\n        } catch (error) {\n            console.error(\"Error getting user specs by events:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get contract spec count (V1 feature)\n   */ async getContractSpecCount(contractAddress) {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            const count = await this.contract.getContractSpecCount(contractAddress);\n            return Number(count);\n        } catch (error) {\n            console.error(\"Error getting contract spec count:\", error);\n            throw error;\n        }\n    }\n    // Diagnostic functions removed to clean up console output\n    /**\n   * Direct commit-reveal implementation for troubleshooting\n   */ async directCommitReveal(ipfsHash1, bondAmount, targetContract) {\n        try {\n            if (!this.signer || !this.provider) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            const nonce = BigInt(Math.floor(Math.random() * 1000000));\n            const commitment = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.solidityPacked([\n                \"string\",\n                \"uint256\"\n            ], [\n                ipfsHash1,\n                nonce\n            ]));\n            const target = targetContract || RAW_CONTRACT_ADDRESS;\n            // Determine the chainId from the provider's network; fallback to 1 (Sepolia)\n            let networkChainId = 1;\n            try {\n                const network = await this.provider.getNetwork();\n                networkChainId = Number(network.chainId);\n            } catch (_) {\n                networkChainId = 1;\n            }\n            // Manually encode the function call for commitSpec(bytes32,address,uint256)\n            const functionSelector = ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"commitSpec(bytes32,address,uint256)\").slice(0, 10);\n            const encodedParams = ethers__WEBPACK_IMPORTED_MODULE_7__.concat([\n                ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(commitment, 32),\n                ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(target, 32),\n                ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(ethers__WEBPACK_IMPORTED_MODULE_8__.toBeHex(networkChainId), 32)\n            ]);\n            const txData = ethers__WEBPACK_IMPORTED_MODULE_7__.concat([\n                functionSelector,\n                encodedParams\n            ]);\n            // Send the transaction directly\n            const tx = await this.signer.sendTransaction({\n                to: RAW_CONTRACT_ADDRESS,\n                data: txData,\n                value: bondAmount,\n                gasLimit: 500000 // Set a reasonable gas limit\n            });\n            // Wait for confirmation  \n            const receipt = await tx.wait();\n            if (receipt.status === 0) {\n                console.error(\"❌ Transaction reverted with status 0\");\n                // Try to get the revert reason using eth_call with the same transaction data at the block before\n                try {\n                    await this.provider.call({\n                        to: RAW_CONTRACT_ADDRESS,\n                        data: txData,\n                        value: bondAmount,\n                        from: await this.signer.getAddress(),\n                        blockTag: receipt.blockNumber - 1\n                    });\n                } catch (callError) {\n                    if (callError.data) {\n                        // Calculate error signatures dynamically to ensure accuracy\n                        const errorMappings = [\n                            \"AlreadyProposed()\",\n                            \"NotProposed()\",\n                            \"InsufficientBond()\",\n                            \"InsufficientIncentive()\",\n                            \"InvalidContract()\",\n                            \"ContractNotFound()\",\n                            \"InvalidIPFS()\",\n                            \"CommitmentNotFound()\",\n                            \"CommitmentExpired()\",\n                            \"CommitmentAlreadyRevealed()\",\n                            \"InvalidReveal()\",\n                            \"NotFinalized()\",\n                            \"AlreadySettled()\",\n                            \"NoIncentiveToClaim()\",\n                            \"IncentiveExpired()\",\n                            \"Unauthorized()\"\n                        ];\n                        const errorSignatures = {};\n                        errorMappings.forEach((error)=>{\n                            const selector = ethers__WEBPACK_IMPORTED_MODULE_6__.id(error).slice(0, 10);\n                            errorSignatures[selector] = error;\n                        });\n                        // Add generic error\n                        errorSignatures[\"0x08c379a0\"] = \"Error(string)\";\n                        const selector = callError.data.slice(0, 10);\n                        if (errorSignatures[selector]) {\n                            // Provide specific guidance\n                            if (selector === \"0xed592624\") {} else if (selector === \"0x47df8ce0\") {} else if (selector === \"0x82b42900\") {}\n                            throw new Error(`Contract reverted with: ${errorSignatures[selector]}`);\n                        } else {}\n                    }\n                }\n                throw new Error(\"Transaction was mined but reverted. Check console logs for details.\");\n            }\n            return tx.hash;\n        } catch (error) {\n            console.error(\"❌ Direct transaction failed:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Run comprehensive diagnostics before attempting a transaction\n   */ async runPreTransactionDiagnostics(targetContract, bondAmount) {\n        try {\n            if (!this.contract || !this.signer || !this.provider) {\n                throw new Error(\"Not connected\");\n            }\n            const userAddress = await this.signer.getAddress();\n            // 1. Check user's ETH balance\n            const balance = await this.provider.getBalance(userAddress);\n            if (balance < bondAmount) {\n                throw new Error(`Insufficient ETH balance. Need ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(bondAmount)} ETH but only have ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(balance)} ETH`);\n            }\n            // 2. Check contract pause status\n            try {\n                const pausedResult = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: \"0x5c975abb\" // paused() selector\n                });\n                const isPaused = pausedResult === \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n                if (isPaused) {\n                    throw new Error(\"Contract is currently paused\");\n                }\n            } catch (pauseError) {}\n            // 3. Validate target contract exists and has bytecode\n            const targetCode = await this.provider.getCode(targetContract);\n            if (targetCode === \"0x\") {\n                throw new Error(`Target contract ${targetContract} does not exist on Sepolia testnet`);\n            }\n            // 4. Check treasury address configuration\n            try {\n                const treasuryAddress = await this.contract.treasury();\n                if (treasuryAddress === \"0x0000000000000000000000000000000000000000\") {\n                    throw new Error(\"Treasury address is not configured (zero address)\");\n                }\n                // Check if treasury can receive funds\n                const treasuryCode = await this.provider.getCode(treasuryAddress);\n                if (treasuryCode.length > 2) {\n                    // Treasury is a contract, test if it can receive funds\n                    try {\n                        await this.provider.call({\n                            to: treasuryAddress,\n                            value: BigInt(1),\n                            from: userAddress\n                        });\n                    } catch (treasuryTestError) {\n                        console.warn(\"Treasury test failed:\", treasuryTestError);\n                    }\n                }\n                // CRITICAL: Test the exact platform fee transfer that happens in commitSpec\n                const platformFee = bondAmount * BigInt(5) / BigInt(100);\n                if (platformFee > BigInt(0)) {\n                    try {\n                        await this.provider.call({\n                            to: treasuryAddress,\n                            value: platformFee,\n                            from: userAddress,\n                            gasLimit: 50000 // Match contract gas limit\n                        });\n                    } catch (testError) {\n                        console.error(\"❌ Treasury transfer test failed:\", testError.message);\n                        console.warn(\"Transaction may fail at treasury transfer\");\n                    }\n                }\n            } catch (treasuryError) {\n                console.warn(\"Treasury check failed:\", treasuryError);\n                console.warn(\"Continuing despite treasury issues - transaction will likely fail\");\n            }\n            // 5. Check minimum bond requirement\n            const contractMinBond = await this.contract.minBond();\n            // Skip bond amount check for commitSpec (bondAmount is 0 for commit)\n            // Bonds are only required during reveal\n            if (bondAmount > 0n && bondAmount < contractMinBond) {\n                throw new Error(`Bond amount ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(bondAmount)} ETH is below minimum required ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(contractMinBond)} ETH`);\n            }\n            // 6. Calculate platform fee and verify sufficient funds\n            // NOTE: commitSpec doesn't take any payment, so skip this check when bondAmount is 0\n            // The bond is only paid during reveal\n            if (bondAmount > 0n) {\n                const platformFee = bondAmount * BigInt(5) / BigInt(100); // 5% platform fee\n                const netBondAmount = bondAmount - platformFee; // Amount actually used as bond\n                if (netBondAmount < contractMinBond) {\n                    // Calculate required total to meet minimum after fee deduction\n                    const requiredTotal = contractMinBond * BigInt(100) / BigInt(95); // Reverse calculation\n                    throw new Error(`After platform fee, net bond would be ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(netBondAmount)} ETH, but minimum required is ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(contractMinBond)} ETH. Send at least ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(requiredTotal)} ETH`);\n                }\n            }\n            // 7. Test Reality.eth contract connectivity\n            try {\n                // Skip Reality.eth connectivity test for now\n                console.log(\"✓ Skipping Reality.eth connectivity test\");\n            // const realityCode = await this.provider.getCode(realityEthAddress);\n            // if (realityCode === \"0x\") {\n            //   throw new Error(\"Reality.eth contract not found at configured address\");\n            // }\n            } catch (realityError) {\n                console.error(\"Reality.eth check failed:\", realityError);\n                throw new Error(\"Could not verify Reality.eth integration\");\n            }\n            // 8. Test contract function availability with static call\n            try {\n                const testCommitment = \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\";\n                // commitSpec in V1 accepts only (bytes32 commitment, address targetContract, uint256 chainId).\n                // Do not pass an incentiveId here, as the V1 contract does not include that parameter.\n                // IMPORTANT: commitSpec is NOT payable - no value should be sent\n                await this.contract.commitSpec.staticCall(testCommitment, targetContract, 1, {\n                    from: userAddress\n                });\n            } catch (staticError) {\n                console.error(\"❌ Static call failed:\", staticError);\n                if (staticError.data) {\n                    // Try to decode the error\n                    const errorMappings = [\n                        {\n                            selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"InsufficientBond()\").slice(0, 10),\n                            name: \"InsufficientBond\"\n                        },\n                        {\n                            selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"ContractNotFound()\").slice(0, 10),\n                            name: \"ContractNotFound\"\n                        },\n                        {\n                            selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"InvalidContract()\").slice(0, 10),\n                            name: \"InvalidContract\"\n                        },\n                        {\n                            selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"Unauthorized()\").slice(0, 10),\n                            name: \"Unauthorized\"\n                        },\n                        {\n                            selector: \"0xd92e233d\",\n                            name: \"Paused\"\n                        }\n                    ];\n                    const errorSelector = staticError.data.slice(0, 10);\n                    const knownError = errorMappings.find((e)=>e.selector === errorSelector);\n                    if (knownError) {\n                        throw new Error(`Contract would revert with: ${knownError.name}()`);\n                    } else {\n                        throw new Error(`Contract would revert with unknown error: ${errorSelector}`);\n                    }\n                } else {\n                    throw new Error(\"Contract function call would fail (no revert data available)\");\n                }\n            }\n            // 9. Gas estimation test\n            try {\n                const testCommitment = \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\";\n                // Remove the testIncentive parameter; commitSpec only takes three arguments.\n                const gasEstimate = await this.contract.commitSpec.estimateGas(testCommitment, targetContract, 1, {\n                    value: bondAmount\n                });\n                if (gasEstimate > BigInt(1000000)) {\n                    console.warn(\"⚠️ High gas estimate - transaction might be complex\");\n                }\n            } catch (gasError) {\n                console.error(\"Gas estimation failed:\", gasError);\n                throw new Error(\"Could not estimate gas for transaction\");\n            }\n        } catch (error) {\n            console.error(\"❌ Pre-transaction diagnostics failed:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Comprehensive contract analysis to understand what's deployed\n   */ async analyzeContract() {\n        try {\n            if (!this.provider || !this.signer) {\n                throw new Error(\"Not connected\");\n            }\n            // 1. Check if there's any bytecode\n            const code = await this.provider.getCode(RAW_CONTRACT_ADDRESS);\n            if (code === \"0x\") {\n                console.error(\"❌ No contract deployed at this address\");\n                return;\n            }\n            // 2. Test function selectors to identify which contract is deployed\n            const selectors = {\n                \"minBond()\": \"0x1bb659ae\",\n                // Use the new 3-parameter commitSpec selector for V1 contracts\n                \"commitSpec(bytes32,address,uint256)\": \"0x\" + ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"commitSpec(bytes32,address,uint256)\").slice(2, 10),\n                \"createSpec(string)\": \"0x8cd8db49\",\n                \"paused()\": \"0x5c975abb\",\n                \"ADMIN_ROLE()\": \"0x75b238fc\",\n                \"realityETH()\": \"0xb0b61b9b\",\n                \"templateId()\": \"0x66d8ac19\"\n            };\n            for (const [funcName, selector] of Object.entries(selectors)){\n                try {\n                    const result = await this.provider.call({\n                        to: RAW_CONTRACT_ADDRESS,\n                        data: selector + \"0\".repeat(192) // Add padding for parameters\n                    });\n                } catch (error) {\n                    if (error.data && error.data !== \"0x\") {} else {}\n                }\n            }\n            // 3. Test commitSpec specifically with detailed analysis\n            try {\n                const testCommitment = \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\";\n                const testTarget1 = RAW_CONTRACT_ADDRESS;\n                const minBond = BigInt(\"100000000000000\"); // 0.0001 ETH\n                // Encode the call to the new 3-parameter commitSpec\n                const encodedCall = ethers__WEBPACK_IMPORTED_MODULE_7__.concat([\n                    ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"commitSpec(bytes32,address,uint256)\").slice(0, 10),\n                    ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(testCommitment, 32),\n                    ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(testTarget1, 32),\n                    ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(ethers__WEBPACK_IMPORTED_MODULE_8__.toBeHex(1), 32) // chainId = 1 for test\n                ]);\n                // Try static call\n                const result = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: encodedCall,\n                    value: minBond,\n                    from: await this.signer.getAddress()\n                });\n            } catch (commitError) {\n                if (commitError.data) {\n                    // Try to decode the error\n                    if (commitError.data.length >= 10) {\n                        const errorSelector = commitError.data.slice(0, 10);\n                        // Calculate error signatures dynamically to ensure accuracy\n                        const errorMappings = [\n                            \"AlreadyProposed()\",\n                            \"NotProposed()\",\n                            \"InsufficientBond()\",\n                            \"InsufficientIncentive()\",\n                            \"InvalidContract()\",\n                            \"ContractNotFound()\",\n                            \"InvalidIPFS()\",\n                            \"CommitmentNotFound()\",\n                            \"CommitmentExpired()\",\n                            \"CommitmentAlreadyRevealed()\",\n                            \"InvalidReveal()\",\n                            \"NotFinalized()\",\n                            \"AlreadySettled()\",\n                            \"NoIncentiveToClaim()\",\n                            \"IncentiveExpired()\",\n                            \"Unauthorized()\"\n                        ];\n                        const knownErrors = {};\n                        errorMappings.forEach((error)=>{\n                            const selector = ethers__WEBPACK_IMPORTED_MODULE_6__.id(error).slice(0, 10);\n                            knownErrors[selector] = error;\n                        });\n                        // Add known OpenZeppelin errors\n                        knownErrors[\"0xd92e233d\"] = \"Paused()\";\n                        knownErrors[\"0x08c379a0\"] = \"Error(string)\";\n                        if (knownErrors[errorSelector]) {\n                            // If it's ContractNotFound, that's our main suspect\n                            if (errorSelector === \"0xed592624\") {\n                                // Let's check the target contract bytecode size\n                                const targetCode = await this.provider.getCode(testTarget);\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(\"Contract analysis failed:\", error);\n        }\n    }\n    /**\n   * Identify which contract version is actually deployed\n   */ async identifyDeployedContract() {\n        try {\n            if (!this.provider || !this.signer) {\n                throw new Error(\"Not connected\");\n            }\n            // Test signature differences between V1 and original - calculate proper selectors\n            const tests = [\n                {\n                    name: \"Original KaiSign\",\n                    selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"createSpec(string)\").slice(0, 10),\n                    description: \"Has createSpec(string) function\"\n                },\n                {\n                    name: \"KaiSign V1\",\n                    selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"commitSpec(bytes32,address,uint256)\").slice(0, 10),\n                    description: \"Has commitSpec(bytes32,address,uint256) function\"\n                },\n                {\n                    name: \"V1 Pausable\",\n                    selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"paused()\").slice(0, 10),\n                    description: \"Has paused() function from Pausable\"\n                },\n                {\n                    name: \"V1 AccessControl\",\n                    selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"ADMIN_ROLE()\").slice(0, 10),\n                    description: \"Has ADMIN_ROLE constant from AccessControl\"\n                },\n                {\n                    name: \"Contract minBond\",\n                    selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"minBond()\").slice(0, 10),\n                    description: \"Has minBond() function\"\n                },\n                {\n                    name: \"Contract realityETH\",\n                    selector: ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"realityETH()\").slice(0, 10),\n                    description: \"Has realityETH() function\"\n                }\n            ];\n            tests.forEach((test)=>{});\n            const results = [];\n            for (const test of tests){\n                try {\n                    const result = await this.provider.call({\n                        to: RAW_CONTRACT_ADDRESS,\n                        data: test.selector\n                    });\n                    results.push(`✅ ${test.name}: YES (${test.description})`);\n                } catch (error) {\n                    if (error.data && error.data !== \"0x\") {\n                        results.push(`⚠️ ${test.name}: EXISTS BUT REVERTS (${test.description})`);\n                    } else {\n                        results.push(`❌ ${test.name}: NO (${test.description})`);\n                    }\n                }\n            }\n            // Determine which contract this is\n            const hasCommitSpec = results[1].includes(\"✅\") || results[1].includes(\"⚠️\");\n            const hasCreateSpec = results[0].includes(\"✅\") || results[0].includes(\"⚠️\");\n            const hasPaused = results[2].includes(\"✅\") || results[2].includes(\"⚠️\");\n            const hasMinBond = results[4].includes(\"✅\") || results[4].includes(\"⚠️\");\n            const hasRealityETH = results[5].includes(\"✅\") || results[5].includes(\"⚠️\");\n            if (hasCommitSpec && hasPaused) {} else if (hasCreateSpec && !hasCommitSpec && hasMinBond && hasRealityETH) {\n                // Store this information for later use\n                window.__KAISIGN_CONTRACT_TYPE = \"original\";\n            } else if (!hasCreateSpec && !hasCommitSpec) {} else {}\n            // Print summary\n            results.forEach((result)=>console.log(\"  \" + result));\n        } catch (error) {\n            console.error(\"Contract identification failed:\", error);\n        }\n    }\n    /**\n   * Test contract connectivity and basic functions\n   */ async testContract() {\n        try {\n            if (!this.contract || !this.signer) {\n                throw new Error(\"Not connected to MetaMask. Please connect first.\");\n            }\n            // Test 1: Check if contract exists\n            const contractCode = await this.provider.getCode(RAW_CONTRACT_ADDRESS);\n            if (contractCode === \"0x\") {\n                throw new Error(\"No contract deployed at this address\");\n            }\n            // Test 2: Get minimum bond\n            try {\n                const minBond = await this.contract.minBond();\n            } catch (error) {\n                console.error(\"✗ minBond() failed:\", error);\n                throw new Error(\"Contract exists but minBond() function failed - wrong ABI?\");\n            }\n            // Test 2b: Check if this looks like the V1 contract by checking constructor elements\n            try {\n                // Check for paused function (V1 specific)\n                const pausedResult = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: \"0x5c975abb\" // paused() selector\n                });\n                // Check for ADMIN_ROLE constant (V1 specific)\n                const adminRoleResult = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: \"0x75b238fc\" // ADMIN_ROLE() selector  \n                });\n                // Check for COMMIT_REVEAL_TIMEOUT constant\n                const timeoutResult = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: \"0x1234567890abcdef\" // This would be the selector for the constant\n                });\n            } catch (v1CheckError) {\n                console.warn(\"Could not verify V1 contract features:\", v1CheckError);\n            }\n            // Test 3: Get Reality.eth address\n            try {\n                // Skip Reality.eth address test\n                console.log(\"✓ Skipping Reality.eth address test\");\n            } catch (error) {\n                console.error(\"✗ realityETH() failed:\", error);\n            }\n            // Test 4: Check if you have necessary roles\n            try {\n                const userAddress = await this.signer.getAddress();\n                // Add hasRole function to ABI check\n                const hasAdminRole = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: ethers__WEBPACK_IMPORTED_MODULE_7__.concat([\n                        \"0x91d14854\",\n                        ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(\"0x0000000000000000000000000000000000000000000000000000000000000000\", 32),\n                        ethers__WEBPACK_IMPORTED_MODULE_7__.zeroPadValue(userAddress, 32)\n                    ])\n                });\n            } catch (roleError) {}\n            // Test 5: Check if commitSpec function exists (using the new 3-parameter signature)\n            try {\n                // Try to call the function selector directly\n                const commitSpecSelector = ethers__WEBPACK_IMPORTED_MODULE_6__.id(\"commitSpec(bytes32,address,uint256)\").slice(0, 10);\n                // Minimal calldata for 3 parameters: 3 * 32 bytes = 96 bytes of padding (192 hex chars)\n                const testCalldata = commitSpecSelector + \"0\".repeat(192);\n                const testCall = await this.provider.call({\n                    to: RAW_CONTRACT_ADDRESS,\n                    data: testCalldata\n                });\n            } catch (selectorError) {\n                console.error(\"✗ commitSpec function test failed:\", selectorError);\n                if (selectorError.data) {\n                    // Check if it's just a revert due to invalid parameters vs function not found\n                    if (selectorError.data === \"0x\" || selectorError.data === null) {\n                        console.error(\"⚠️  Function might not exist - no revert data returned\");\n                    } else {}\n                }\n            }\n            // Test 6: Try to call commitSpec with dry run using realistic commitment\n            try {\n                const testIpfs = \"QmTest123\";\n                const testNonce = BigInt(12345);\n                const testCommitment = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.solidityPacked([\n                    \"string\",\n                    \"uint256\"\n                ], [\n                    testIpfs,\n                    testNonce\n                ]));\n                const testTarget1 = RAW_CONTRACT_ADDRESS;\n                // Note: commitSpec in V1 accepts only (bytes32 commitment, address targetContract, uint256 chainId).\n                // Do not define or pass a testIncentive parameter here.\n                const gasEstimate = await this.contract.commitSpec.estimateGas(testCommitment, testTarget1, 1, {\n                    value: await this.contract.minBond()\n                });\n            } catch (error) {\n                console.error(\"✗ commitSpec test failed:\", error);\n                console.error(\"This suggests the contract might be paused, have access control, or different function signature\");\n                // Try to decode the error\n                if (error.data) {}\n            }\n        } catch (error) {\n            console.error(\"Contract test failed:\", error);\n            throw error;\n        }\n    }\n    // =============================================================================\n    //                          KAISIGN V1 FUNCTIONS\n    // =============================================================================\n    async getUserIncentives(userAddress) {\n        // Auto-connect if not connected\n        if (!this.contract) {\n            try {\n                console.log(\"Contract not connected, attempting to connect...\");\n                await this.connect();\n            } catch (connectError) {\n                console.warn(\"Failed to auto-connect for getUserIncentives:\", connectError);\n                // Return empty array instead of throwing to prevent blocking the UI\n                return [];\n            }\n        }\n        // Double check after connection attempt\n        if (!this.contract) {\n            console.warn(\"Contract still not available after connection attempt, returning empty array\");\n            return [];\n        }\n        try {\n            const incentiveIds = await this.contract.getUserIncentives(userAddress);\n            // Convert from ethers result to string array\n            const ids = Array.from(incentiveIds);\n            return ids;\n        } catch (error) {\n            console.error(\"💥 Error getting user incentives:\", error);\n            console.error(\"🔧 Contract address:\", this.contract?.target);\n            console.error(\"📝 Function signature: getUserIncentives(address)\");\n            // If function doesn't exist or returns empty data, return empty array instead of throwing\n            if (error.code === \"BAD_DATA\" || error.info?.method === \"getUserIncentives\") {\n                console.warn(\"⚠️ getUserIncentives function may not exist on this contract, returning empty array\");\n                return [];\n            }\n            // For other errors, also return empty array to prevent UI blocking\n            console.warn(\"⚠️ getUserIncentives failed, returning empty array to prevent UI blocking\");\n            return [];\n        }\n    }\n    async getIncentiveData(incentiveId) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            const incentive = await this.contract.incentives(incentiveId);\n            // Now the ABI matches the actual structure\n            const result = {\n                creator: incentive.creator,\n                amount: incentive.amount.toString(),\n                deadline: Number(incentive.deadline),\n                createdAt: Number(incentive.createdAt),\n                targetContract: incentive.targetContract,\n                specID: incentive.specID,\n                isActive: incentive.isActive,\n                isClaimed: incentive.specID !== \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                chainId: Number(incentive.chainId),\n                description: incentive.description,\n                token: \"0x0000000000000000000000000000000000000000\" // ETH (no token field)\n            };\n            return result;\n        } catch (error) {\n            console.error(\"💥 Error getting incentive data:\", error);\n            console.error(\"🔍 Incentive ID:\", incentiveId);\n            throw error;\n        }\n    }\n    async getSpecsByContractPaginated(targetContract, offset, limit) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            const result = await this.contract.getSpecsByContractPaginated(targetContract, offset, limit);\n            return {\n                specIds: result.specIds,\n                total: Number(result.total)\n            };\n        } catch (error) {\n            console.error(\"Error getting paginated specs:\", error);\n            throw error;\n        }\n    }\n    async getSpecData(specId) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            // Call the specs function and handle potential structure variations\n            const spec = await this.contract.specs(specId);\n            // The contract might have different struct layouts, so we need to handle both cases\n            // Try to parse assuming the newer format with 'reserved' field\n            let parsedSpec;\n            if (Array.isArray(spec) && spec.length >= 11) {\n                // Handle tuple/array format - Updated to match exact contract struct order\n                parsedSpec = {\n                    createdTimestamp: Number(spec[0]),\n                    proposedTimestamp: Number(spec[1]),\n                    status: Number(spec[2]),\n                    totalBonds: spec[3].toString(),\n                    reserved: Number(spec[4]),\n                    creator: spec[5],\n                    targetContract: spec[6],\n                    blobHash: spec[7],\n                    questionId: spec[8],\n                    incentiveId: spec[9],\n                    chainId: Number(spec[10]) // uint256 chainId\n                };\n            } else {\n                // Handle named struct format\n                parsedSpec = {\n                    createdTimestamp: Number(spec.createdTimestamp || 0),\n                    proposedTimestamp: Number(spec.proposedTimestamp || 0),\n                    status: Number(spec.status || 0),\n                    totalBonds: (spec.totalBonds || 0).toString(),\n                    reserved: Number(spec.reserved || 0),\n                    creator: spec.creator || \"0x0000000000000000000000000000000000000000\",\n                    targetContract: spec.targetContract || \"0x0000000000000000000000000000000000000000\",\n                    blobHash: spec.blobHash || \"0x\",\n                    questionId: spec.questionId || \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                    incentiveId: spec.incentiveId || \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                    chainId: Number(spec.chainId || 0)\n                };\n            }\n            return parsedSpec;\n        } catch (error) {\n            console.error(\"💥 Error getting spec data:\", error);\n            console.error(\"📋 SpecId that failed:\", specId);\n            // Try to provide more helpful error information\n            if (error.message?.includes(\"could not decode result data\")) {\n                console.error(\"🔧 This looks like an ABI mismatch. The contract struct might have changed.\");\n                // Try to extract some basic info from the raw error if possible\n                if (error.value) {\n                    console.error(\"📊 Raw contract return value:\", error.value);\n                }\n            }\n            throw new Error(`Failed to decode specification data. This might be due to a contract version mismatch. Original error: ${error.message}`);\n        }\n    }\n    async getCommitment(commitmentId) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            const c = await this.contract.commitments(commitmentId);\n            if (!c) return null;\n            return {\n                committer: c[0],\n                commitTimestamp: Number(c[1]),\n                reserved1: Number(c[2]),\n                targetContract: c[3],\n                isRevealed: Boolean(c[4]),\n                bondAmount: c[5]?.toString?.() ?? \"0\",\n                reserved: Number(c[6]),\n                revealDeadline: Number(c[7]),\n                chainId: Number(c[8]),\n                incentiveId: c[9]\n            };\n        } catch (err) {\n            console.error(\"Error reading commitment:\", err);\n            return null;\n        }\n    }\n    async proposeSpec(specId, bondAmount) {\n        if (!this.contract || !this.signer) {\n            throw new Error(\"Not connected to MetaMask. Please connect first.\");\n        }\n        try {\n            // Network check removed - let users connect on any network\n            const tx = await this.contract.proposeSpec(specId, {\n                value: bondAmount\n            });\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error proposing spec:\", error);\n            throw error;\n        }\n    }\n    async assertSpecValid(specId, bondAmount) {\n        if (!this.contract || !this.signer) {\n            throw new Error(\"Not connected to MetaMask. Please connect first.\");\n        }\n        try {\n            // Network check removed - let users connect on any network\n            const tx = await this.contract.assertSpecValid(specId, {\n                value: bondAmount\n            });\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error asserting spec valid:\", error);\n            throw error;\n        }\n    }\n    async assertSpecInvalid(specId, bondAmount) {\n        if (!this.contract || !this.signer) {\n            throw new Error(\"Not connected to MetaMask. Please connect first.\");\n        }\n        try {\n            // Network check removed - let users connect on any network\n            const tx = await this.contract.assertSpecInvalid(specId, {\n                value: bondAmount\n            });\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error asserting spec invalid:\", error);\n            throw error;\n        }\n    }\n    async handleResult(specId) {\n        if (!this.contract || !this.signer) {\n            throw new Error(\"Not connected to MetaMask. Please connect first.\");\n        }\n        try {\n            // First check the current status of the spec\n            const specData = await this.contract.specs(specId);\n            // Status: 0=Committed, 1=Submitted, 2=Proposed, 3=Finalized, 4=Cancelled\n            if (Number(specData.status) === 3) {\n                // Spec is already finalized, but incentives might not be claimed\n                // Let's try to claim ETH incentives manually if they exist\n                // Check if there are available ETH incentives for this spec's target contract\n                const availableIncentives = await this.getAvailableIncentives(specData.targetContract, Number(specData.chainId));\n                const ethIncentives = availableIncentives.filter((inc)=>inc.token === \"0x0000000000000000000000000000000000000000\" && !inc.isClaimed && inc.isActive);\n                if (ethIncentives.length > 0) {\n                    // There are unclaimed ETH incentives - the spec might have been finalized without processing incentives\n                    // This could happen if handleResult was never called or failed partially\n                    // Try calling handleResult anyway - it might work if the Reality.eth question needs processing\n                    try {\n                        const tx = await this.contract.handleResult(specId);\n                        const receipt = await tx.wait();\n                        return tx.hash;\n                    } catch (handleError) {\n                        throw new Error(\"Specification is finalized but incentives weren't claimed automatically. This may require contract admin intervention or the incentives may have expired.\");\n                    }\n                } else {\n                    throw new Error(\"Specification is already finalized and no unclaimed ETH incentives found. Check if incentives were already claimed or use claimActiveTokenIncentive for ERC20 tokens.\");\n                }\n            } else if (Number(specData.status) !== 2) {\n                throw new Error(`Cannot handle result for spec in status ${specData.status}. Spec must be Proposed (status 2).`);\n            }\n            const tx = await this.contract.handleResult(specId);\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error handling result:\", error);\n            // Decode specific contract errors\n            if (error.data === \"0xf2a87d5e\") {\n                throw new Error(\"NotProposed: Specification is not in Proposed status. It may already be finalized.\");\n            } else if (error.data === \"0x1bee0d5a\") {\n                throw new Error(\"NotFinalized: Reality.eth question is not yet finalized. Wait for the timeout period.\");\n            }\n            throw error;\n        }\n    }\n    async settleBonds(specId) {\n        if (!this.contract || !this.signer) {\n            throw new Error(\"Not connected to MetaMask. Please connect first.\");\n        }\n        try {\n            // Check spec status first\n            const specData = await this.contract.specs(specId);\n            // Validate requirements before attempting settlement\n            if (Number(specData.status) !== 3) {\n                throw new Error(`Cannot settle bonds: Specification must be finalized (status 3), but current status is ${Number(specData.status)}`);\n            }\n            if (specData.bondsSettled) {\n                throw new Error(\"Cannot settle bonds: Bonds have already been settled for this specification\");\n            }\n            // Check Reality.eth question status\n            const questionId = specData.questionId;\n            // IMPORTANT: Double-check by calling the contract's bondsSettled mapping directly\n            // This might be different from the spec struct value\n            try {\n                // The contract might have a bondsSettled mapping that's separate from the struct\n                // Let me try a different approach - check the ABI for available view functions\n                // Check if the contract has any other state we need to verify\n                // CRITICAL: Check the bondsSettled mapping directly\n                const mappingSettled = await this.contract.bondsSettled(specId);\n                if (mappingSettled) {\n                    throw new Error(\"Cannot settle bonds: The bondsSettled mapping shows bonds are already settled, even though the spec struct says false. This indicates the bonds were already processed.\");\n                }\n            } catch (stateError) {\n                console.error(\"Error checking additional state:\", stateError);\n            }\n            if (questionId === \"0x0000000000000000000000000000000000000000000000000000000000000000\") {\n                throw new Error(\"Cannot settle bonds: No Reality.eth question associated with this specification\");\n            }\n            // Try to get Reality.eth contract and check if question is finalized\n            try {\n                // Skip Reality.eth contract initialization for now\n                console.log(\"✓ Skipping Reality.eth contract initialization\");\n                // Create Reality.eth contract instance\n                const realityEthAbi = [\n                    \"function isFinalized(bytes32 question_id) external view returns (bool)\",\n                    \"function resultFor(bytes32 question_id) external view returns (bytes32)\"\n                ];\n                const realityEthContract = new ethers__WEBPACK_IMPORTED_MODULE_1__.Contract(realityEthAddress, realityEthAbi, this.provider);\n                const isFinalized = await realityEthContract.isFinalized(questionId);\n                if (isFinalized) {\n                    const result = await realityEthContract.resultFor(questionId);\n                } else {}\n            } catch (realityError) {\n                console.error(\"Error checking Reality.eth status:\", realityError);\n            }\n            // Check if contract has enough balance to pay out bonds (always run this)\n            try {\n                const kaisignContractAddress = \"0x4dFEA0C2B472a14cD052a8f9DF9f19fa5CF03719\";\n                const contractBalance = await this.provider.getBalance(kaisignContractAddress);\n                if (contractBalance < specData.totalBonds) {\n                    throw new Error(`🚨 CONTRACT INSUFFICIENT FUNDS: Contract balance: ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(contractBalance)} ETH, Required: ${ethers__WEBPACK_IMPORTED_MODULE_9__.formatEther(specData.totalBonds)} ETH`);\n                }\n            } catch (balanceError) {\n                console.error(\"Error checking contract balance:\", balanceError);\n                throw balanceError;\n            }\n            // Try with manual gas estimation to avoid estimation errors\n            try {\n                const gasEstimate = await this.contract.settleBonds.estimateGas(specId);\n                const tx = await this.contract.settleBonds(specId, {\n                    gasLimit: gasEstimate + BigInt(50000) // Add buffer\n                });\n                const receipt = await tx.wait();\n                return tx.hash;\n            } catch (gasError) {\n                console.error(\"Gas estimation failed, trying with fixed gas:\", gasError);\n                // Try with a fixed gas limit\n                const tx = await this.contract.settleBonds(specId, {\n                    gasLimit: BigInt(200000) // Fixed gas limit\n                });\n                const receipt = await tx.wait();\n                return tx.hash;\n            }\n        } catch (error) {\n            console.error(\"Error settling bonds:\", error);\n            // Decode specific contract errors for settleBonds\n            if (error.data === \"0x1bee0d5a\") {\n                throw new Error(\"NotFinalized: Specification must be finalized before settling bonds.\");\n            } else if (error.data === \"0x2cb15938\") {\n                throw new Error(\"AlreadySettled: Bonds for this specification have already been settled.\");\n            }\n            // Check if it's a generic revert\n            if (error.message.includes(\"execution reverted\") && !error.data) {\n                // Try to get more info about why it failed\n                throw new Error(`Bond settlement failed. This could be because: 1) Specification is not finalized, 2) Bonds already settled, 3) You're not authorized to settle, or 4) Contract state issue. Spec ID: ${specId}`);\n            }\n            throw error;\n        }\n    }\n    async getCurrentAccount() {\n        if (!this.provider) {\n            return null;\n        }\n        try {\n            const accounts = await this.provider.listAccounts();\n            return accounts.length > 0 ? accounts[0]?.address || null : null;\n        } catch (error) {\n            console.error(\"Error getting current account:\", error);\n            return null;\n        }\n    }\n    async getContractSpecCount(targetContract) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            const count = await this.contract.getContractSpecCount(targetContract);\n            return Number(count);\n        } catch (error) {\n            console.error(\"Error getting contract spec count:\", error);\n            throw error;\n        }\n    }\n    async getAvailableIncentives(targetContract, targetChainId) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            const incentives = [];\n            // Get real incentives from contract events\n            try {\n                const filter = this.contract.filters.LogIncentiveCreated(null, null, targetContract);\n                const events = await this.contract.queryFilter(filter, -10000); // Last 10k blocks\n                for (const event of events){\n                    const incentiveId = event.args?.incentiveId;\n                    if (incentiveId) {\n                        const incentiveData = await this.contract.incentives(incentiveId);\n                        // Only include incentives that exactly match the target chain ID\n                        // This prevents cross-chain incentive confusion\n                        if (incentiveData.isActive && !incentiveData.isClaimed && (targetChainId === undefined || incentiveData.chainId.toString() === targetChainId.toString())) {\n                            incentives.push({\n                                id: incentiveId,\n                                creator: incentiveData.creator,\n                                token: incentiveData.token,\n                                amount: incentiveData.token === \"0x0000000000000000000000000000000000000000\" ? (Number(incentiveData.amount) / 1e18).toString() : incentiveData.amount.toString(),\n                                deadline: Number(incentiveData.deadline),\n                                description: incentiveData.description,\n                                isActive: incentiveData.isActive,\n                                isClaimed: incentiveData.isClaimed\n                            });\n                        }\n                    }\n                }\n            } catch (eventError) {}\n            return incentives;\n        } catch (error) {\n            console.error(\"Error getting available incentives:\", error);\n            throw error;\n        }\n    }\n    async getIncentivesByTargetContract(targetContract) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            // This would require event filtering or a subgraph\n            // For now, returning empty array as placeholder\n            console.warn(\"getIncentivesByTargetContract: This function needs event filtering implementation\");\n            return [];\n        } catch (error) {\n            console.error(\"Error getting incentives by target contract:\", error);\n            throw error;\n        }\n    }\n    async claimActiveTokenIncentive(specId, tokenAddress) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            const tx = await this.contract.claimActiveTokenIncentive(specId, tokenAddress);\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error claiming active token incentive:\", error);\n            throw error;\n        }\n    }\n    // Helper function to claim ETH incentives manually\n    async claimETHIncentive(specId) {\n        if (!this.contract) {\n            throw new Error(\"Not connected to contract.\");\n        }\n        try {\n            // ETH token address is 0x0000000000000000000000000000000000000000\n            const ethAddress = \"0x0000000000000000000000000000000000000000\";\n            const tx = await this.contract.claimActiveTokenIncentive(specId, ethAddress);\n            const receipt = await tx.wait();\n            return tx.hash;\n        } catch (error) {\n            console.error(\"Error claiming ETH incentive:\", error);\n            // If claimActiveTokenIncentive fails for ETH, try handleResult as fallback\n            if (error.data === \"0x2b4fa360\") {\n                return await this.handleResult(specId);\n            }\n            throw error;\n        }\n    }\n    constructor(){\n        this.provider = null;\n        this.signer = null;\n        this.contract = null;\n        this.realityEthContract = null;\n    }\n}\n// Export a singleton instance\nconst web3Service = new Web3Service();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/web3Service.ts\n");

/***/ }),

/***/ "(ssr)/./src/store/erc7730Provider.tsx":
/*!***************************************!*\
  !*** ./src/store/erc7730Provider.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Erc7730StoreContext: () => (/* binding */ Erc7730StoreContext),\n/* harmony export */   Erc7730StoreProvider: () => (/* binding */ Erc7730StoreProvider),\n/* harmony export */   useErc7730Store: () => (/* binding */ useErc7730Store)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _erc7730Store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./erc7730Store */ \"(ssr)/./src/store/erc7730Store.ts\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zustand */ \"(ssr)/../node_modules/zustand/esm/react.mjs\");\n/* __next_internal_client_entry_do_not_use__ Erc7730StoreContext,Erc7730StoreProvider,useErc7730Store auto */ \n\n\n\nconst Erc7730StoreContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst Erc7730StoreProvider = ({ children })=>{\n    const storeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    if (!storeRef.current) {\n        storeRef.current = (0,_erc7730Store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Erc7730StoreContext.Provider, {\n        value: storeRef.current,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/store/erc7730Provider.tsx\",\n        lineNumber: 32,\n        columnNumber: 5\n    }, undefined);\n};\nconst useErc7730Store = (selector)=>{\n    const erc7730StoreContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Erc7730StoreContext);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useErc7730Store.useEffect\": ()=>{\n            void erc7730StoreContext?.persist?.rehydrate();\n        }\n    }[\"useErc7730Store.useEffect\"], [\n        erc7730StoreContext\n    ]);\n    if (!erc7730StoreContext) {\n        throw new Error(`useErc7730Store must be used within erc7730StoreProvider`);\n    }\n    return (0,zustand__WEBPACK_IMPORTED_MODULE_3__.useStore)(erc7730StoreContext, selector);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvc3RvcmUvZXJjNzczMFByb3ZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBUWU7QUFDaUQ7QUFDN0I7QUFJNUIsTUFBTU0sb0NBQXNCTixvREFBYUEsQ0FDOUNPLFdBQ0E7QUFNSyxNQUFNQyx1QkFBdUIsQ0FBQyxFQUNuQ0MsUUFBUSxFQUNrQjtJQUMxQixNQUFNQyxXQUFXVCw2Q0FBTUE7SUFDdkIsSUFBSSxDQUFDUyxTQUFTQyxPQUFPLEVBQUU7UUFDckJELFNBQVNDLE9BQU8sR0FBR1AseURBQVdBO0lBQ2hDO0lBRUEscUJBQ0UsOERBQUNFLG9CQUFvQk0sUUFBUTtRQUFDQyxPQUFPSCxTQUFTQyxPQUFPO2tCQUNsREY7Ozs7OztBQUdQLEVBQUU7QUFFSyxNQUFNSyxrQkFBa0IsQ0FDN0JDO0lBRUEsTUFBTUMsc0JBQXNCZCxpREFBVUEsQ0FBQ0k7SUFFdkNILGdEQUFTQTtxQ0FBQztZQUNSLEtBQUthLHFCQUFxQkMsU0FBU0M7UUFDckM7b0NBQUc7UUFBQ0Y7S0FBb0I7SUFFeEIsSUFBSSxDQUFDQSxxQkFBcUI7UUFDeEIsTUFBTSxJQUFJRyxNQUFNLENBQUMsd0RBQXdELENBQUM7SUFDNUU7SUFFQSxPQUFPZCxpREFBUUEsQ0FBQ1cscUJBQXFCRDtBQUN2QyxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy9zdG9yZS9lcmM3NzMwUHJvdmlkZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQge1xuICBjcmVhdGVDb250ZXh0LFxuICB1c2VSZWYsXG4gIHVzZUNvbnRleHQsXG4gIHR5cGUgUmVhY3ROb2RlLFxuICB1c2VFZmZlY3QsXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGNyZWF0ZVN0b3JlLCB7IHR5cGUgRXJjNzczMFN0b3JlIH0gZnJvbSBcIi4vZXJjNzczMFN0b3JlXCI7XG5pbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gXCJ6dXN0YW5kXCI7XG5cbmV4cG9ydCB0eXBlIEVyYzc3MzBTdG9yZUFwaSA9IFJldHVyblR5cGU8dHlwZW9mIGNyZWF0ZVN0b3JlPjtcblxuZXhwb3J0IGNvbnN0IEVyYzc3MzBTdG9yZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PEVyYzc3MzBTdG9yZUFwaSB8IHVuZGVmaW5lZD4oXG4gIHVuZGVmaW5lZCxcbik7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXJjNzczMFN0b3JlUHJvdmlkZXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBjb25zdCBFcmM3NzMwU3RvcmVQcm92aWRlciA9ICh7XG4gIGNoaWxkcmVuLFxufTogRXJjNzczMFN0b3JlUHJvdmlkZXJQcm9wcykgPT4ge1xuICBjb25zdCBzdG9yZVJlZiA9IHVzZVJlZjxFcmM3NzMwU3RvcmVBcGk+KCk7XG4gIGlmICghc3RvcmVSZWYuY3VycmVudCkge1xuICAgIHN0b3JlUmVmLmN1cnJlbnQgPSBjcmVhdGVTdG9yZSgpO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RXJjNzczMFN0b3JlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17c3RvcmVSZWYuY3VycmVudH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9FcmM3NzMwU3RvcmVDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZUVyYzc3MzBTdG9yZSA9IDxULD4oXG4gIHNlbGVjdG9yOiAoc3RvcmU6IEVyYzc3MzBTdG9yZSkgPT4gVCxcbik6IFQgPT4ge1xuICBjb25zdCBlcmM3NzMwU3RvcmVDb250ZXh0ID0gdXNlQ29udGV4dChFcmM3NzMwU3RvcmVDb250ZXh0KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHZvaWQgZXJjNzczMFN0b3JlQ29udGV4dD8ucGVyc2lzdD8ucmVoeWRyYXRlKCk7XG4gIH0sIFtlcmM3NzMwU3RvcmVDb250ZXh0XSk7XG5cbiAgaWYgKCFlcmM3NzMwU3RvcmVDb250ZXh0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGB1c2VFcmM3NzMwU3RvcmUgbXVzdCBiZSB1c2VkIHdpdGhpbiBlcmM3NzMwU3RvcmVQcm92aWRlcmApO1xuICB9XG5cbiAgcmV0dXJuIHVzZVN0b3JlKGVyYzc3MzBTdG9yZUNvbnRleHQsIHNlbGVjdG9yKTtcbn07XG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZVJlZiIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJjcmVhdGVTdG9yZSIsInVzZVN0b3JlIiwiRXJjNzczMFN0b3JlQ29udGV4dCIsInVuZGVmaW5lZCIsIkVyYzc3MzBTdG9yZVByb3ZpZGVyIiwiY2hpbGRyZW4iLCJzdG9yZVJlZiIsImN1cnJlbnQiLCJQcm92aWRlciIsInZhbHVlIiwidXNlRXJjNzczMFN0b3JlIiwic2VsZWN0b3IiLCJlcmM3NzMwU3RvcmVDb250ZXh0IiwicGVyc2lzdCIsInJlaHlkcmF0ZSIsIkVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/store/erc7730Provider.tsx\n");

/***/ }),

/***/ "(ssr)/./src/store/erc7730Store.ts":
/*!***********************************!*\
  !*** ./src/store/erc7730Store.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createErc7730Store: () => (/* binding */ createErc7730Store),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand/vanilla */ \"(ssr)/../node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(ssr)/../node_modules/zustand/esm/middleware.mjs\");\n\n\nconst createErc7730Store = ()=>{\n    return (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n            generatedErc7730: null,\n            finalErc7730: null,\n            shouldAutoSubmit: false,\n            setShouldAutoSubmit: (shouldAutoSubmit)=>set(()=>({\n                        shouldAutoSubmit\n                    })),\n            getOperationsByName: (name)=>{\n                if (!name) return null;\n                const formats = get().generatedErc7730?.display?.formats ?? {};\n                return formats[name] ?? null;\n            },\n            getFinalOperationByName: (name)=>{\n                if (!name) return null;\n                const formats = get().finalErc7730?.display?.formats ?? {};\n                return formats[name] ?? null;\n            },\n            saveOperationData: (name, operationData)=>{\n                set((state)=>({\n                        generatedErc7730: {\n                            ...state.generatedErc7730,\n                            display: {\n                                ...state.generatedErc7730.display,\n                                formats: {\n                                    ...state.generatedErc7730?.display?.formats,\n                                    [name]: operationData\n                                }\n                            }\n                        }\n                    }));\n            },\n            setOperationData: (name, operationData, filteredOperationData)=>{\n                set((state)=>({\n                        generatedErc7730: {\n                            ...state.generatedErc7730,\n                            display: {\n                                ...state.generatedErc7730.display,\n                                formats: {\n                                    ...state.generatedErc7730?.display?.formats,\n                                    [name]: operationData\n                                }\n                            }\n                        },\n                        finalErc7730: {\n                            ...state.finalErc7730,\n                            display: {\n                                ...state.finalErc7730.display,\n                                formats: {\n                                    ...state.finalErc7730?.display?.formats,\n                                    [name]: filteredOperationData\n                                }\n                            }\n                        }\n                    }));\n            },\n            getContractAddress: ()=>{\n                const { generatedErc7730 } = get();\n                const context = generatedErc7730?.context;\n                if (!context) return \"\";\n                if (\"contract\" in context) {\n                    return context.contract.deployments[0]?.address ?? \"\";\n                }\n                return \"\";\n            },\n            setErc7730: (generatedErc7730)=>{\n                // Ensure $schema field is present (required by ERC7730 spec)\n                if (!generatedErc7730.$schema) {\n                    generatedErc7730.$schema = \"https://eips.ethereum.org/assets/eip-7730/erc7730-v1.schema.json\";\n                }\n                set(()=>({\n                        generatedErc7730\n                    }));\n            },\n            getOperations: ()=>get().generatedErc7730?.display ?? null,\n            getMetadata: ()=>get().generatedErc7730?.metadata ?? null,\n            getOperationsMetadata: (name)=>{\n                if (!name) return null;\n                const formats = get().generatedErc7730?.display?.formats ?? {};\n                const intent = formats[name]?.intent;\n                return {\n                    operationName: typeof intent === \"string\" ? intent : \"\",\n                    metadata: get().generatedErc7730?.metadata ?? null\n                };\n            },\n            getFinalOperationsMetadata: (name)=>{\n                if (!name) return null;\n                const formats = get().finalErc7730?.display?.formats ?? {};\n                const intent = formats[name]?.intent;\n                return {\n                    operationName: typeof intent === \"string\" ? intent : \"\",\n                    metadata: get().finalErc7730?.metadata ?? null\n                };\n            },\n            setMetadata: (metadata)=>set((state)=>({\n                        generatedErc7730: {\n                            ...state.generatedErc7730,\n                            metadata\n                        },\n                        finalErc7730: {\n                            $schema: state.generatedErc7730.$schema || \"https://eips.ethereum.org/assets/eip-7730/erc7730-v1.schema.json\",\n                            context: state.generatedErc7730.context,\n                            metadata,\n                            display: state.finalErc7730 ? {\n                                ...state.finalErc7730.display,\n                                formats: state.finalErc7730.display.formats ?? {}\n                            } : {\n                                formats: {}\n                            }\n                        }\n                    }))\n        }), {\n        storage: (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.createJSONStorage)(()=>sessionStorage),\n        name: \"store-erc7730\",\n        skipHydration: true\n    }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createErc7730Store);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/store/erc7730Store.ts\n");

/***/ }),

/***/ "(ssr)/./src/trpc/query-client.ts":
/*!**********************************!*\
  !*** ./src/trpc/query-client.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createQueryClient: () => (/* binding */ createQueryClient)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/hydration.js\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superjson */ \"(ssr)/../node_modules/superjson/dist/index.js\");\n\n\nconst createQueryClient = ()=>new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClient({\n        defaultOptions: {\n            queries: {\n                // With SSR, we usually want to set some default staleTime\n                // above 0 to avoid refetching immediately on the client\n                staleTime: 30 * 1000\n            },\n            dehydrate: {\n                serializeData: superjson__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serialize,\n                shouldDehydrateQuery: (query)=>(0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.defaultShouldDehydrateQuery)(query) || query.state.status === \"pending\"\n            },\n            hydrate: {\n                deserializeData: superjson__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deserialize\n            }\n        }\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvdHJwYy9xdWVyeS1jbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUcrQjtBQUNHO0FBRTNCLE1BQU1HLG9CQUFvQixJQUMvQixJQUFJRiw4REFBV0EsQ0FBQztRQUNkRyxnQkFBZ0I7WUFDZEMsU0FBUztnQkFDUCwwREFBMEQ7Z0JBQzFELHdEQUF3RDtnQkFDeERDLFdBQVcsS0FBSztZQUNsQjtZQUNBQyxXQUFXO2dCQUNUQyxlQUFlTiwyREFBbUI7Z0JBQ2xDUSxzQkFBc0IsQ0FBQ0MsUUFDckJYLGtGQUEyQkEsQ0FBQ1csVUFDNUJBLE1BQU1DLEtBQUssQ0FBQ0MsTUFBTSxLQUFLO1lBQzNCO1lBQ0FDLFNBQVM7Z0JBQ1BDLGlCQUFpQmIsNkRBQXFCO1lBQ3hDO1FBQ0Y7SUFDRixHQUFHIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhdXNoaWpyaS9EZXNrdG9wL2dpdC9LYWktU2lnbi1CdWlsZGVyL2Zyb250ZW5kL3NyYy90cnBjL3F1ZXJ5LWNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkZWZhdWx0U2hvdWxkRGVoeWRyYXRlUXVlcnksXG4gIFF1ZXJ5Q2xpZW50LFxufSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgU3VwZXJKU09OIGZyb20gXCJzdXBlcmpzb25cIjtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVF1ZXJ5Q2xpZW50ID0gKCkgPT5cbiAgbmV3IFF1ZXJ5Q2xpZW50KHtcbiAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgcXVlcmllczoge1xuICAgICAgICAvLyBXaXRoIFNTUiwgd2UgdXN1YWxseSB3YW50IHRvIHNldCBzb21lIGRlZmF1bHQgc3RhbGVUaW1lXG4gICAgICAgIC8vIGFib3ZlIDAgdG8gYXZvaWQgcmVmZXRjaGluZyBpbW1lZGlhdGVseSBvbiB0aGUgY2xpZW50XG4gICAgICAgIHN0YWxlVGltZTogMzAgKiAxMDAwLFxuICAgICAgfSxcbiAgICAgIGRlaHlkcmF0ZToge1xuICAgICAgICBzZXJpYWxpemVEYXRhOiBTdXBlckpTT04uc2VyaWFsaXplLFxuICAgICAgICBzaG91bGREZWh5ZHJhdGVRdWVyeTogKHF1ZXJ5KSA9PlxuICAgICAgICAgIGRlZmF1bHRTaG91bGREZWh5ZHJhdGVRdWVyeShxdWVyeSkgfHxcbiAgICAgICAgICBxdWVyeS5zdGF0ZS5zdGF0dXMgPT09IFwicGVuZGluZ1wiLFxuICAgICAgfSxcbiAgICAgIGh5ZHJhdGU6IHtcbiAgICAgICAgZGVzZXJpYWxpemVEYXRhOiBTdXBlckpTT04uZGVzZXJpYWxpemUsXG4gICAgICB9LFxuICAgIH0sXG4gIH0pO1xuIl0sIm5hbWVzIjpbImRlZmF1bHRTaG91bGREZWh5ZHJhdGVRdWVyeSIsIlF1ZXJ5Q2xpZW50IiwiU3VwZXJKU09OIiwiY3JlYXRlUXVlcnlDbGllbnQiLCJkZWZhdWx0T3B0aW9ucyIsInF1ZXJpZXMiLCJzdGFsZVRpbWUiLCJkZWh5ZHJhdGUiLCJzZXJpYWxpemVEYXRhIiwic2VyaWFsaXplIiwic2hvdWxkRGVoeWRyYXRlUXVlcnkiLCJxdWVyeSIsInN0YXRlIiwic3RhdHVzIiwiaHlkcmF0ZSIsImRlc2VyaWFsaXplRGF0YSIsImRlc2VyaWFsaXplIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/trpc/query-client.ts\n");

/***/ }),

/***/ "(ssr)/./src/trpc/react.tsx":
/*!****************************!*\
  !*** ./src/trpc/react.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCReactProvider: () => (/* binding */ TRPCReactProvider),\n/* harmony export */   api: () => (/* binding */ api)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/../node_modules/@trpc/client/dist/index.mjs\");\n/* harmony import */ var _trpc_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/react-query */ \"(ssr)/../node_modules/@trpc/react-query/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! superjson */ \"(ssr)/../node_modules/superjson/dist/index.js\");\n/* harmony import */ var _query_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./query-client */ \"(ssr)/./src/trpc/query-client.ts\");\n/* __next_internal_client_entry_do_not_use__ api,TRPCReactProvider auto */ \n\n\n\n\n\n\nlet clientQueryClientSingleton = undefined;\nconst getQueryClient = ()=>{\n    if (true) {\n        // Server: always make a new query client\n        return (0,_query_client__WEBPACK_IMPORTED_MODULE_5__.createQueryClient)();\n    }\n    // Browser: use singleton pattern to keep the same query client\n    return clientQueryClientSingleton ??= (0,_query_client__WEBPACK_IMPORTED_MODULE_5__.createQueryClient)();\n};\nconst api = (0,_trpc_react_query__WEBPACK_IMPORTED_MODULE_2__.createTRPCReact)();\nfunction TRPCReactProvider(props) {\n    const queryClient = getQueryClient();\n    const [trpcClient] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n        \"TRPCReactProvider.useState\": ()=>api.createClient({\n                links: [\n                    (0,_trpc_client__WEBPACK_IMPORTED_MODULE_1__.loggerLink)({\n                        enabled: {\n                            \"TRPCReactProvider.useState\": (op)=> true || 0\n                        }[\"TRPCReactProvider.useState\"]\n                    }),\n                    (0,_trpc_client__WEBPACK_IMPORTED_MODULE_1__.unstable_httpBatchStreamLink)({\n                        transformer: superjson__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                        url: getBaseUrl() + \"/api/trpc\",\n                        headers: {\n                            \"TRPCReactProvider.useState\": ()=>{\n                                const headers = new Headers();\n                                headers.set(\"x-trpc-source\", \"nextjs-react\");\n                                return headers;\n                            }\n                        }[\"TRPCReactProvider.useState\"]\n                    })\n                ]\n            })\n    }[\"TRPCReactProvider.useState\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__.QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(api.Provider, {\n            client: trpcClient,\n            queryClient: queryClient,\n            children: props.children\n        }, void 0, false, {\n            fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/trpc/react.tsx\",\n            lineNumber: 65,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaushijri/Desktop/git/Kai-Sign-Builder/frontend/src/trpc/react.tsx\",\n        lineNumber: 64,\n        columnNumber: 5\n    }, this);\n}\nfunction getBaseUrl() {\n    if (false) {}\n    if (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}`;\n    return `https://100.64.0.2:60708`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvdHJwYy9yZWFjdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBRThFO0FBQ047QUFDcEI7QUFFbkI7QUFDQztBQUdpQjtBQUVuRCxJQUFJTyw2QkFBc0RDO0FBQzFELE1BQU1DLGlCQUFpQjtJQUNyQixJQUFJLElBQTZCLEVBQUU7UUFDakMseUNBQXlDO1FBQ3pDLE9BQU9ILGdFQUFpQkE7SUFDMUI7SUFDQSwrREFBK0Q7SUFDL0QsT0FBUUMsK0JBQStCRCxnRUFBaUJBO0FBQzFEO0FBRU8sTUFBTUksTUFBTVAsa0VBQWVBLEdBQWM7QUFnQnpDLFNBQVNRLGtCQUFrQkMsS0FBb0M7SUFDcEUsTUFBTUMsY0FBY0o7SUFFcEIsTUFBTSxDQUFDSyxXQUFXLEdBQUdWLCtDQUFRQTtzQ0FBQyxJQUM1Qk0sSUFBSUssWUFBWSxDQUFDO2dCQUNmQyxPQUFPO29CQUNMZix3REFBVUEsQ0FBQzt3QkFDVGdCLE9BQU87MERBQUUsQ0FBQ0MsS0FDUkMsS0FBc0MsSUFDckNELENBQXFESTs7b0JBQzFEO29CQUNBcEIsMEVBQTRCQSxDQUFDO3dCQUMzQnFCLGFBQWFsQixpREFBU0E7d0JBQ3RCbUIsS0FBS0MsZUFBZTt3QkFDcEJDLE9BQU87MERBQUU7Z0NBQ1AsTUFBTUEsVUFBVSxJQUFJQztnQ0FDcEJELFFBQVFFLEdBQUcsQ0FBQyxpQkFBaUI7Z0NBQzdCLE9BQU9GOzRCQUNUOztvQkFDRjtpQkFDRDtZQUNIOztJQUdGLHFCQUNFLDhEQUFDMUIsc0VBQW1CQTtRQUFDNkIsUUFBUWhCO2tCQUMzQiw0RUFBQ0gsSUFBSW9CLFFBQVE7WUFBQ0QsUUFBUWY7WUFBWUQsYUFBYUE7c0JBQzVDRCxNQUFNbUIsUUFBUTs7Ozs7Ozs7Ozs7QUFJdkI7QUFFQSxTQUFTTjtJQUNQLElBQUksS0FBNkIsRUFBRSxFQUE4QjtJQUNqRSxJQUFJTixRQUFRZ0IsR0FBRyxDQUFDQyxVQUFVLEVBQUUsT0FBTyxDQUFDLFFBQVEsRUFBRWpCLFFBQVFnQixHQUFHLENBQUNDLFVBQVUsRUFBRTtJQUN0RSxPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDbkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tdWhhbW1hZGF1c2hpanJpL0Rlc2t0b3AvZ2l0L0thaS1TaWduLUJ1aWxkZXIvZnJvbnRlbmQvc3JjL3RycGMvcmVhY3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBRdWVyeUNsaWVudFByb3ZpZGVyLCB0eXBlIFF1ZXJ5Q2xpZW50IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHsgbG9nZ2VyTGluaywgdW5zdGFibGVfaHR0cEJhdGNoU3RyZWFtTGluayB9IGZyb20gXCJAdHJwYy9jbGllbnRcIjtcbmltcG9ydCB7IGNyZWF0ZVRSUENSZWFjdCB9IGZyb20gXCJAdHJwYy9yZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHsgdHlwZSBpbmZlclJvdXRlcklucHV0cywgdHlwZSBpbmZlclJvdXRlck91dHB1dHMgfSBmcm9tIFwiQHRycGMvc2VydmVyXCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFN1cGVySlNPTiBmcm9tIFwic3VwZXJqc29uXCI7XG5cbmltcG9ydCB7IHR5cGUgQXBwUm91dGVyIH0gZnJvbSBcIn4vc2VydmVyL2FwaS9yb290XCI7XG5pbXBvcnQgeyBjcmVhdGVRdWVyeUNsaWVudCB9IGZyb20gXCIuL3F1ZXJ5LWNsaWVudFwiO1xuXG5sZXQgY2xpZW50UXVlcnlDbGllbnRTaW5nbGV0b246IFF1ZXJ5Q2xpZW50IHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuY29uc3QgZ2V0UXVlcnlDbGllbnQgPSAoKSA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgLy8gU2VydmVyOiBhbHdheXMgbWFrZSBhIG5ldyBxdWVyeSBjbGllbnRcbiAgICByZXR1cm4gY3JlYXRlUXVlcnlDbGllbnQoKTtcbiAgfVxuICAvLyBCcm93c2VyOiB1c2Ugc2luZ2xldG9uIHBhdHRlcm4gdG8ga2VlcCB0aGUgc2FtZSBxdWVyeSBjbGllbnRcbiAgcmV0dXJuIChjbGllbnRRdWVyeUNsaWVudFNpbmdsZXRvbiA/Pz0gY3JlYXRlUXVlcnlDbGllbnQoKSk7XG59O1xuXG5leHBvcnQgY29uc3QgYXBpID0gY3JlYXRlVFJQQ1JlYWN0PEFwcFJvdXRlcj4oKTtcblxuLyoqXG4gKiBJbmZlcmVuY2UgaGVscGVyIGZvciBpbnB1dHMuXG4gKlxuICogQGV4YW1wbGUgdHlwZSBIZWxsb0lucHV0ID0gUm91dGVySW5wdXRzWydleGFtcGxlJ11bJ2hlbGxvJ11cbiAqL1xuZXhwb3J0IHR5cGUgUm91dGVySW5wdXRzID0gaW5mZXJSb3V0ZXJJbnB1dHM8QXBwUm91dGVyPjtcblxuLyoqXG4gKiBJbmZlcmVuY2UgaGVscGVyIGZvciBvdXRwdXRzLlxuICpcbiAqIEBleGFtcGxlIHR5cGUgSGVsbG9PdXRwdXQgPSBSb3V0ZXJPdXRwdXRzWydleGFtcGxlJ11bJ2hlbGxvJ11cbiAqL1xuZXhwb3J0IHR5cGUgUm91dGVyT3V0cHV0cyA9IGluZmVyUm91dGVyT3V0cHV0czxBcHBSb3V0ZXI+O1xuXG5leHBvcnQgZnVuY3Rpb24gVFJQQ1JlYWN0UHJvdmlkZXIocHJvcHM6IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gZ2V0UXVlcnlDbGllbnQoKTtcblxuICBjb25zdCBbdHJwY0NsaWVudF0gPSB1c2VTdGF0ZSgoKSA9PlxuICAgIGFwaS5jcmVhdGVDbGllbnQoe1xuICAgICAgbGlua3M6IFtcbiAgICAgICAgbG9nZ2VyTGluayh7XG4gICAgICAgICAgZW5hYmxlZDogKG9wKSA9PlxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIiB8fFxuICAgICAgICAgICAgKG9wLmRpcmVjdGlvbiA9PT0gXCJkb3duXCIgJiYgb3AucmVzdWx0IGluc3RhbmNlb2YgRXJyb3IpLFxuICAgICAgICB9KSxcbiAgICAgICAgdW5zdGFibGVfaHR0cEJhdGNoU3RyZWFtTGluayh7XG4gICAgICAgICAgdHJhbnNmb3JtZXI6IFN1cGVySlNPTixcbiAgICAgICAgICB1cmw6IGdldEJhc2VVcmwoKSArIFwiL2FwaS90cnBjXCIsXG4gICAgICAgICAgaGVhZGVyczogKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgICAgICAgICBoZWFkZXJzLnNldChcIngtdHJwYy1zb3VyY2VcIiwgXCJuZXh0anMtcmVhY3RcIik7XG4gICAgICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICAgICAgICB9LFxuICAgICAgICB9KSxcbiAgICAgIF0sXG4gICAgfSlcbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17cXVlcnlDbGllbnR9PlxuICAgICAgPGFwaS5Qcm92aWRlciBjbGllbnQ9e3RycGNDbGllbnR9IHF1ZXJ5Q2xpZW50PXtxdWVyeUNsaWVudH0+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvYXBpLlByb3ZpZGVyPlxuICAgIDwvUXVlcnlDbGllbnRQcm92aWRlcj5cbiAgKTtcbn1cblxuZnVuY3Rpb24gZ2V0QmFzZVVybCgpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHJldHVybiB3aW5kb3cubG9jYXRpb24ub3JpZ2luO1xuICBpZiAocHJvY2Vzcy5lbnYuVkVSQ0VMX1VSTCkgcmV0dXJuIGBodHRwczovLyR7cHJvY2Vzcy5lbnYuVkVSQ0VMX1VSTH1gO1xuICByZXR1cm4gYGh0dHBzOi8vMTAwLjY0LjAuMjo2MDcwOGA7XG59XG4iXSwibmFtZXMiOlsiUXVlcnlDbGllbnRQcm92aWRlciIsImxvZ2dlckxpbmsiLCJ1bnN0YWJsZV9odHRwQmF0Y2hTdHJlYW1MaW5rIiwiY3JlYXRlVFJQQ1JlYWN0IiwidXNlU3RhdGUiLCJTdXBlckpTT04iLCJjcmVhdGVRdWVyeUNsaWVudCIsImNsaWVudFF1ZXJ5Q2xpZW50U2luZ2xldG9uIiwidW5kZWZpbmVkIiwiZ2V0UXVlcnlDbGllbnQiLCJhcGkiLCJUUlBDUmVhY3RQcm92aWRlciIsInByb3BzIiwicXVlcnlDbGllbnQiLCJ0cnBjQ2xpZW50IiwiY3JlYXRlQ2xpZW50IiwibGlua3MiLCJlbmFibGVkIiwib3AiLCJwcm9jZXNzIiwiZGlyZWN0aW9uIiwicmVzdWx0IiwiRXJyb3IiLCJ0cmFuc2Zvcm1lciIsInVybCIsImdldEJhc2VVcmwiLCJoZWFkZXJzIiwiSGVhZGVycyIsInNldCIsImNsaWVudCIsIlByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsImVudiIsIlZFUkNFTF9VUkwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/trpc/react.tsx\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/ethers","vendor-chunks/@trpc","vendor-chunks/zod","vendor-chunks/@tanstack","vendor-chunks/@radix-ui","vendor-chunks/tailwind-merge","vendor-chunks/superjson","vendor-chunks/zustand","vendor-chunks/lucide-react","vendor-chunks/next-themes","vendor-chunks/react-gtm-module","vendor-chunks/is-what","vendor-chunks/@t3-oss","vendor-chunks/class-variance-authority","vendor-chunks/@swc","vendor-chunks/copy-anything","vendor-chunks/clsx","vendor-chunks/geist"], () => (__webpack_exec__("(rsc)/../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmuhammadaushijri%2FDesktop%2Fgit%2FKai-Sign-Builder%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();